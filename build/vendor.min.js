!function(e){"use strict";function t(e,t){return t=t||Error,function(){var n,r,i=2,o=arguments,a=o[0],s="["+(e?e+":":"")+a+"] ",u=o[1];for(s+=u.replace(/\{\d+\}/g,function(e){var t=+e.slice(1,-1),n=t+i;return n<o.length?ye(o[n]):e}),s+="\nhttp://errors.angularjs.org/1.5.9/"+(e?e+"/":"")+a,r=i,n="?";r<o.length;r++,n="&")s+=n+"p"+(r-i)+"="+encodeURIComponent(ye(o[r]));return new t(s)}}function n(e){if(null==e||A(e))return!1;if(ri(e)||w(e)||zr&&e instanceof zr)return!0;var t="length"in Object(e)&&e.length;return x(t)&&(t>=0&&(t-1 in e||e instanceof Array)||"function"==typeof e.item)}function r(e,t,i){var o,a;if(e)if(S(e))for(o in e)"prototype"===o||"length"===o||"name"===o||e.hasOwnProperty&&!e.hasOwnProperty(o)||t.call(i,e[o],o,e);else if(ri(e)||n(e)){var s="object"!=typeof e;for(o=0,a=e.length;o<a;o++)(s||o in e)&&t.call(i,e[o],o,e)}else if(e.forEach&&e.forEach!==r)e.forEach(t,i,e);else if(b(e))for(o in e)t.call(i,e[o],o,e);else if("function"==typeof e.hasOwnProperty)for(o in e)e.hasOwnProperty(o)&&t.call(i,e[o],o,e);else for(o in e)qr.call(e,o)&&t.call(i,e[o],o,e);return e}function i(e,t,n){for(var r=Object.keys(e).sort(),i=0;i<r.length;i++)t.call(n,e[r[i]],r[i]);return r}function o(e){return function(t,n){e(n,t)}}function a(){return++ti}function s(e,t){t?e.$$hashKey=t:delete e.$$hashKey}function u(e,t,n){for(var r=e.$$hashKey,i=0,o=t.length;i<o;++i){var a=t[i];if(y(a)||S(a))for(var c=Object.keys(a),l=0,f=c.length;l<f;l++){var h=c[l],p=a[h];n&&y(p)?C(p)?e[h]=new Date(p.valueOf()):E(p)?e[h]=new RegExp(p):p.nodeName?e[h]=p.cloneNode(!0):D(p)?e[h]=p.clone():(y(e[h])||(e[h]=ri(p)?[]:{}),u(e[h],[p],!0)):e[h]=p}}return s(e,r),e}function c(e){return u(e,Zr.call(arguments,1),!1)}function l(e){return u(e,Zr.call(arguments,1),!0)}function f(e){return parseInt(e,10)}function h(e,t){return c(Object.create(e),t)}function p(){}function d(e){return e}function $(e){return function(){return e}}function v(e){return S(e.toString)&&e.toString!==Kr}function m(e){return"undefined"==typeof e}function g(e){return"undefined"!=typeof e}function y(e){return null!==e&&"object"==typeof e}function b(e){return null!==e&&"object"==typeof e&&!Xr(e)}function w(e){return"string"==typeof e}function x(e){return"number"==typeof e}function C(e){return"[object Date]"===Kr.call(e)}function S(e){return"function"==typeof e}function E(e){return"[object RegExp]"===Kr.call(e)}function A(e){return e&&e.window===e}function k(e){return e&&e.$evalAsync&&e.$watch}function O(e){return"[object File]"===Kr.call(e)}function M(e){return"[object FormData]"===Kr.call(e)}function T(e){return"[object Blob]"===Kr.call(e)}function V(e){return"boolean"==typeof e}function N(e){return e&&S(e.then)}function j(e){return e&&x(e.length)&&ii.test(Kr.call(e))}function I(e){return"[object ArrayBuffer]"===Kr.call(e)}function D(e){return!(!e||!(e.nodeName||e.prop&&e.attr&&e.find))}function P(e){var t,n={},r=e.split(",");for(t=0;t<r.length;t++)n[r[t]]=!0;return n}function R(e){return Ur(e.nodeName||e[0]&&e[0].nodeName)}function _(e,t){var n=e.indexOf(t);return n>=0&&e.splice(n,1),n}function q(e,t){function n(e,t){var n,r=t.$$hashKey;if(ri(e))for(var o=0,a=e.length;o<a;o++)t.push(i(e[o]));else if(b(e))for(n in e)t[n]=i(e[n]);else if(e&&"function"==typeof e.hasOwnProperty)for(n in e)e.hasOwnProperty(n)&&(t[n]=i(e[n]));else for(n in e)qr.call(e,n)&&(t[n]=i(e[n]));return s(t,r),t}function i(e){if(!y(e))return e;var t=a.indexOf(e);if(t!==-1)return u[t];if(A(e)||k(e))throw Qr("cpws","Can't copy! Making copies of Window or Scope instances is not supported.");var r=!1,i=o(e);return void 0===i&&(i=ri(e)?[]:Object.create(Xr(e)),r=!0),a.push(e),u.push(i),r?n(e,i):i}function o(e){switch(Kr.call(e)){case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Float32Array]":case"[object Float64Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return new e.constructor(i(e.buffer),e.byteOffset,e.length);case"[object ArrayBuffer]":if(!e.slice){var t=new ArrayBuffer(e.byteLength);return new Uint8Array(t).set(new Uint8Array(e)),t}return e.slice(0);case"[object Boolean]":case"[object Number]":case"[object String]":case"[object Date]":return new e.constructor(e.valueOf());case"[object RegExp]":var n=new RegExp(e.source,e.toString().match(/[^\/]*$/)[0]);return n.lastIndex=e.lastIndex,n;case"[object Blob]":return new e.constructor([e],{type:e.type})}if(S(e.cloneNode))return e.cloneNode(!0)}var a=[],u=[];if(t){if(j(t)||I(t))throw Qr("cpta","Can't copy! TypedArray destination cannot be mutated.");if(e===t)throw Qr("cpi","Can't copy! Source and destination are identical.");return ri(t)?t.length=0:r(t,function(e,n){"$$hashKey"!==n&&delete t[n]}),a.push(e),u.push(t),n(e,t)}return i(e)}function U(e,t){if(e===t)return!0;if(null===e||null===t)return!1;if(e!==e&&t!==t)return!0;var n,r,i,o=typeof e,a=typeof t;if(o===a&&"object"===o){if(!ri(e)){if(C(e))return!!C(t)&&U(e.getTime(),t.getTime());if(E(e))return!!E(t)&&e.toString()===t.toString();if(k(e)||k(t)||A(e)||A(t)||ri(t)||C(t)||E(t))return!1;i=$e();for(r in e)if("$"!==r.charAt(0)&&!S(e[r])){if(!U(e[r],t[r]))return!1;i[r]=!0}for(r in t)if(!(r in i)&&"$"!==r.charAt(0)&&g(t[r])&&!S(t[r]))return!1;return!0}if(!ri(t))return!1;if((n=e.length)===t.length){for(r=0;r<n;r++)if(!U(e[r],t[r]))return!1;return!0}}return!1}function F(e,t,n){return e.concat(Zr.call(t,n))}function L(e,t){return Zr.call(e,t||0)}function H(e,t){var n=arguments.length>2?L(arguments,2):[];return!S(t)||t instanceof RegExp?t:n.length?function(){return arguments.length?t.apply(e,F(n,arguments,0)):t.apply(e,n)}:function(){return arguments.length?t.apply(e,arguments):t.call(e)}}function B(t,n){var r=n;return"string"==typeof t&&"$"===t.charAt(0)&&"$"===t.charAt(1)?r=void 0:A(n)?r="$WINDOW":n&&e.document===n?r="$DOCUMENT":k(n)&&(r="$SCOPE"),r}function z(e,t){if(!m(e))return x(t)||(t=t?2:null),JSON.stringify(e,B,t)}function W(e){return w(e)?JSON.parse(e):e}function G(e,t){e=e.replace(ci,"");var n=Date.parse("Jan 01, 1970 00:00:00 "+e)/6e4;return ni(n)?t:n}function Z(e,t){return e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+t),e}function J(e,t,n){n=n?-1:1;var r=e.getTimezoneOffset(),i=G(t,r);return Z(e,n*(i-r))}function Y(e){e=zr(e).clone();try{e.empty()}catch(e){}var t=zr("<div>").append(e).html();try{return e[0].nodeType===vi?Ur(t):t.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(e,t){return"<"+Ur(t)})}catch(e){return Ur(t)}}function K(e){try{return decodeURIComponent(e)}catch(e){}}function X(e){var t={};return r((e||"").split("&"),function(e){var n,r,i;e&&(r=e=e.replace(/\+/g,"%20"),n=e.indexOf("="),n!==-1&&(r=e.substring(0,n),i=e.substring(n+1)),r=K(r),g(r)&&(i=!g(i)||K(i),qr.call(t,r)?ri(t[r])?t[r].push(i):t[r]=[t[r],i]:t[r]=i))}),t}function Q(e){var t=[];return r(e,function(e,n){ri(e)?r(e,function(e){t.push(te(n,!0)+(e===!0?"":"="+te(e,!0)))}):t.push(te(n,!0)+(e===!0?"":"="+te(e,!0)))}),t.length?t.join("&"):""}function ee(e){return te(e,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function te(e,t){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,t?"%20":"+")}function ne(e,t){var n,r,i=li.length;for(r=0;r<i;++r)if(n=li[r]+t,w(n=e.getAttribute(n)))return n;return null}function re(e){if(!e.currentScript)return!0;var t=e.currentScript.getAttribute("src"),n=e.createElement("a");n.href=t;var r=n.protocol,i=e.location.protocol;if(i===r)return!0;switch(r){case"http:":case"https:":case"ftp:":case"blob:":case"file:":case"data:":return!0;default:return!1}}function ie(t,n){var i,o,a={};if(r(li,function(e){var n=e+"app";!i&&t.hasAttribute&&t.hasAttribute(n)&&(i=t,o=t.getAttribute(n))}),r(li,function(e){var n,r=e+"app";!i&&(n=t.querySelector("["+r.replace(":","\\:")+"]"))&&(i=n,o=n.getAttribute(r))}),i){if(!fi)return void e.console.error("Angular: disabling automatic bootstrap. <script> protocol indicates an extension, document.location.href does not match.");a.strictDi=null!==ne(i,"strict-di"),n(i,o?[o]:[],a)}}function oe(t,n,i){y(i)||(i={});var o={strictDi:!1};i=c(o,i);var a=function(){if(t=zr(t),t.injector()){var r=t[0]===e.document?"document":Y(t);throw Qr("btstrpd","App already bootstrapped with this element '{0}'",r.replace(/</,"&lt;").replace(/>/,"&gt;"))}n=n||[],n.unshift(["$provide",function(e){e.value("$rootElement",t)}]),i.debugInfoEnabled&&n.push(["$compileProvider",function(e){e.debugInfoEnabled(!0)}]),n.unshift("ng");var o=it(n,i.strictDi);return o.invoke(["$rootScope","$rootElement","$compile","$injector",function(e,t,n,r){e.$apply(function(){t.data("$injector",r),n(t)(e)})}]),o},s=/^NG_ENABLE_DEBUG_INFO!/,u=/^NG_DEFER_BOOTSTRAP!/;return e&&s.test(e.name)&&(i.debugInfoEnabled=!0,e.name=e.name.replace(s,"")),e&&!u.test(e.name)?a():(e.name=e.name.replace(u,""),ei.resumeBootstrap=function(e){return r(e,function(e){n.push(e)}),a()},void(S(ei.resumeDeferredBootstrap)&&ei.resumeDeferredBootstrap()))}function ae(){e.name="NG_ENABLE_DEBUG_INFO!"+e.name,e.location.reload()}function se(e){var t=ei.element(e).injector();if(!t)throw Qr("test","no injector found for element argument to getTestability");return t.get("$$testability")}function ue(e,t){return t=t||"_",e.replace(hi,function(e,n){return(n?t:"")+e.toLowerCase()})}function ce(){var t;if(!pi){var n=ui();Wr=m(n)?e.jQuery:n?e[n]:void 0,Wr&&Wr.fn.on?(zr=Wr,c(Wr.fn,{scope:Di.scope,isolateScope:Di.isolateScope,controller:Di.controller,injector:Di.injector,inheritedData:Di.inheritedData}),t=Wr.cleanData,Wr.cleanData=function(e){for(var n,r,i=0;null!=(r=e[i]);i++)n=Wr._data(r,"events"),n&&n.$destroy&&Wr(r).triggerHandler("$destroy");t(e)}):zr=Te,ei.element=zr,pi=!0}}function le(e,t,n){if(!e)throw Qr("areq","Argument '{0}' is {1}",t||"?",n||"required");return e}function fe(e,t,n){return n&&ri(e)&&(e=e[e.length-1]),le(S(e),t,"not a function, got "+(e&&"object"==typeof e?e.constructor.name||"Object":typeof e)),e}function he(e,t){if("hasOwnProperty"===e)throw Qr("badname","hasOwnProperty is not a valid {0} name",t)}function pe(e,t,n){if(!t)return e;for(var r,i=t.split("."),o=e,a=i.length,s=0;s<a;s++)r=i[s],e&&(e=(o=e)[r]);return!n&&S(e)?H(o,e):e}function de(e){for(var t,n=e[0],r=e[e.length-1],i=1;n!==r&&(n=n.nextSibling);i++)(t||e[i]!==n)&&(t||(t=zr(Zr.call(e,0,i))),t.push(n));return t||e}function $e(){return Object.create(null)}function ve(e){function n(e,t,n){return e[t]||(e[t]=n())}var r=t("$injector"),i=t("ng"),o=n(e,"angular",Object);return o.$$minErr=o.$$minErr||t,n(o,"module",function(){var e={};return function(t,o,a){var s=function(e,t){if("hasOwnProperty"===e)throw i("badname","hasOwnProperty is not a valid {0} name",t)};return s(t,"module"),o&&e.hasOwnProperty(t)&&(e[t]=null),n(e,t,function(){function e(e,t,n,r){return r||(r=i),function(){return r[n||"push"]([e,t,arguments]),l}}function n(e,n){return function(r,o){return o&&S(o)&&(o.$$moduleName=t),i.push([e,n,arguments]),l}}if(!o)throw r("nomod","Module '{0}' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.",t);var i=[],s=[],u=[],c=e("$injector","invoke","push",s),l={_invokeQueue:i,_configBlocks:s,_runBlocks:u,requires:o,name:t,provider:n("$provide","provider"),factory:n("$provide","factory"),service:n("$provide","service"),value:e("$provide","value"),constant:e("$provide","constant","unshift"),decorator:n("$provide","decorator"),animation:n("$animateProvider","register"),filter:n("$filterProvider","register"),controller:n("$controllerProvider","register"),directive:n("$compileProvider","directive"),component:n("$compileProvider","component"),config:c,run:function(e){return u.push(e),this}};return a&&c(a),l})}})}function me(e,t){if(ri(e)){t=t||[];for(var n=0,r=e.length;n<r;n++)t[n]=e[n]}else if(y(e)){t=t||{};for(var i in e)"$"===i.charAt(0)&&"$"===i.charAt(1)||(t[i]=e[i])}return t||e}function ge(e){var t=[];return JSON.stringify(e,function(e,n){if(n=B(e,n),y(n)){if(t.indexOf(n)>=0)return"...";t.push(n)}return n})}function ye(e){return"function"==typeof e?e.toString().replace(/ \{[\s\S]*$/,""):m(e)?"undefined":"string"!=typeof e?ge(e):e}function be(n){c(n,{bootstrap:oe,copy:q,extend:c,merge:l,equals:U,element:zr,forEach:r,injector:it,noop:p,bind:H,toJson:z,fromJson:W,identity:d,isUndefined:m,isDefined:g,isString:w,isFunction:S,isObject:y,isNumber:x,isElement:D,isArray:ri,version:bi,isDate:C,lowercase:Ur,uppercase:Fr,callbacks:{$$counter:0},getTestability:se,$$minErr:t,$$csp:si,reloadWithDebugInfo:ae}),(Gr=ve(e))("ng",["ngLocale"],["$provide",function(e){e.provider({$$sanitizeUri:An}),e.provider("$compile",$t).directive({a:ra,input:xa,textarea:xa,form:ua,script:ms,select:bs,option:ws,ngBind:Ea,ngBindHtml:ka,ngBindTemplate:Aa,ngClass:Ma,ngClassEven:Va,ngClassOdd:Ta,ngCloak:Na,ngController:ja,ngForm:ca,ngHide:ls,ngIf:Pa,ngInclude:Ra,ngInit:qa,ngNonBindable:ts,ngPluralize:os,ngRepeat:as,ngShow:cs,ngStyle:fs,ngSwitch:hs,ngSwitchWhen:ps,ngSwitchDefault:ds,ngOptions:is,ngTransclude:vs,ngModel:Xa,ngList:Ua,ngChange:Oa,pattern:Cs,ngPattern:Cs,required:xs,ngRequired:xs,minlength:Es,ngMinlength:Es,maxlength:Ss,ngMaxlength:Ss,ngValue:Sa,ngModelOptions:es}).directive({ngInclude:_a}).directive(ia).directive(Ia),e.provider({$anchorScroll:ot,$animate:Ki,$animateCss:eo,$$animateJs:Ji,$$animateQueue:Yi,$$AnimateRunner:Qi,$$animateAsyncRun:Xi,$browser:ft,$cacheFactory:ht,$controller:wt,$document:xt,$exceptionHandler:Ct,$filter:Un,$$forceReflow:ao,$interpolate:Rt,$interval:_t,$http:jt,$httpParamSerializer:Et,$httpParamSerializerJQLike:At,$httpBackend:Dt,$xhrFactory:It,$jsonpCallbacks:vo,$location:Qt,$log:en,$parse:bn,$rootScope:En,$q:wn,$$q:xn,$sce:Tn,$sceDelegate:Mn,$sniffer:Vn,$templateCache:pt,$templateRequest:Nn,$$testability:jn,$timeout:In,$window:Rn,$$rAF:Sn,$$jqLite:Ke,$$HashMap:qi,$$cookieReader:qn})}])}function we(){return++xi}function xe(e){return e.replace(Ei,function(e,t,n,r){return r?n.toUpperCase():n}).replace(Ai,"Moz$1")}function Ce(e){return!Ti.test(e)}function Se(e){var t=e.nodeType;return t===di||!t||t===gi}function Ee(e){for(var t in wi[e.ng339])return!0;return!1}function Ae(e){for(var t=0,n=e.length;t<n;t++)Ie(e[t])}function ke(e,t){var n,i,o,a,s=t.createDocumentFragment(),u=[];if(Ce(e))u.push(t.createTextNode(e));else{for(n=s.appendChild(t.createElement("div")),i=(Vi.exec(e)||["",""])[1].toLowerCase(),o=ji[i]||ji._default,n.innerHTML=o[1]+e.replace(Ni,"<$1></$2>")+o[2],a=o[0];a--;)n=n.lastChild;u=F(u,n.childNodes),n=s.firstChild,n.textContent=""}return s.textContent="",s.innerHTML="",r(u,function(e){s.appendChild(e)}),s}function Oe(t,n){n=n||e.document;var r;return(r=Mi.exec(t))?[n.createElement(r[1])]:(r=ke(t,n))?r.childNodes:[]}function Me(e,t){var n=e.parentNode;n&&n.replaceChild(t,e),t.appendChild(e)}function Te(e){if(e instanceof Te)return e;var t;if(w(e)&&(e=oi(e),t=!0),!(this instanceof Te)){if(t&&"<"!==e.charAt(0))throw Oi("nosel","Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element");return new Te(e)}t?Ue(this,Oe(e)):Ue(this,e)}function Ve(e){return e.cloneNode(!0)}function Ne(e,t){if(t||Ie(e),e.querySelectorAll)for(var n=e.querySelectorAll("*"),r=0,i=n.length;r<i;r++)Ie(n[r])}function je(e,t,n,i){if(g(i))throw Oi("offargs","jqLite#off() does not support the `selector` argument");var o=De(e),a=o&&o.events,s=o&&o.handle;if(s)if(t){var u=function(t){var r=a[t];g(n)&&_(r||[],n),g(n)&&r&&r.length>0||(Si(e,t,s),delete a[t])};r(t.split(" "),function(e){u(e),ki[e]&&u(ki[e])})}else for(t in a)"$destroy"!==t&&Si(e,t,s),delete a[t]}function Ie(e,t){var n=e.ng339,r=n&&wi[n];if(r){if(t)return void delete r.data[t];r.handle&&(r.events.$destroy&&r.handle({},"$destroy"),je(e)),delete wi[n],e.ng339=void 0}}function De(e,t){var n=e.ng339,r=n&&wi[n];return t&&!r&&(e.ng339=n=we(),r=wi[n]={events:{},data:{},handle:void 0}),r}function Pe(e,t,n){if(Se(e)){var r=g(n),i=!r&&t&&!y(t),o=!t,a=De(e,!i),s=a&&a.data;if(r)s[t]=n;else{if(o)return s;if(i)return s&&s[t];c(s,t)}}}function Re(e,t){return!!e.getAttribute&&(" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+t+" ")>-1}function _e(e,t){t&&e.setAttribute&&r(t.split(" "),function(t){e.setAttribute("class",oi((" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+oi(t)+" "," ")))})}function qe(e,t){if(t&&e.setAttribute){var n=(" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");r(t.split(" "),function(e){e=oi(e),n.indexOf(" "+e+" ")===-1&&(n+=e+" ")}),e.setAttribute("class",oi(n))}}function Ue(e,t){if(t)if(t.nodeType)e[e.length++]=t;else{var n=t.length;if("number"==typeof n&&t.window!==t){if(n)for(var r=0;r<n;r++)e[e.length++]=t[r]}else e[e.length++]=t}}function Fe(e,t){return Le(e,"$"+(t||"ngController")+"Controller")}function Le(e,t,n){e.nodeType===gi&&(e=e.documentElement);for(var r=ri(t)?t:[t];e;){for(var i=0,o=r.length;i<o;i++)if(g(n=zr.data(e,r[i])))return n;e=e.parentNode||e.nodeType===yi&&e.host}}function He(e){for(Ne(e,!0);e.firstChild;)e.removeChild(e.firstChild)}function Be(e,t){t||Ne(e);var n=e.parentNode;n&&n.removeChild(e)}function ze(t,n){n=n||e,"complete"===n.document.readyState?n.setTimeout(t):zr(n).on("load",t)}function We(e,t){var n=Pi[t.toLowerCase()];return n&&Ri[R(e)]&&n}function Ge(e){return _i[e]}function Ze(e,t){var n=function(n,r){n.isDefaultPrevented=function(){return n.defaultPrevented};var i=t[r||n.type],o=i?i.length:0;if(o){if(m(n.immediatePropagationStopped)){var a=n.stopImmediatePropagation;n.stopImmediatePropagation=function(){n.immediatePropagationStopped=!0,n.stopPropagation&&n.stopPropagation(),a&&a.call(n)}}n.isImmediatePropagationStopped=function(){return n.immediatePropagationStopped===!0};var s=i.specialHandlerWrapper||Je;o>1&&(i=me(i));for(var u=0;u<o;u++)n.isImmediatePropagationStopped()||s(e,n,i[u])}};return n.elem=e,n}function Je(e,t,n){n.call(e,t)}function Ye(e,t,n){var r=t.relatedTarget;r&&(r===e||Ii.call(e,r))||n.call(e,t)}function Ke(){this.$get=function(){return c(Te,{hasClass:function(e,t){return e.attr&&(e=e[0]),Re(e,t)},addClass:function(e,t){return e.attr&&(e=e[0]),qe(e,t)},removeClass:function(e,t){return e.attr&&(e=e[0]),_e(e,t)}})}}function Xe(e,t){var n=e&&e.$$hashKey;if(n)return"function"==typeof n&&(n=e.$$hashKey()),n;var r=typeof e;return n="function"===r||"object"===r&&null!==e?e.$$hashKey=r+":"+(t||a)():r+":"+e}function Qe(e,t){if(t){var n=0;this.nextUid=function(){return++n}}r(e,this.put,this)}function et(e){return Function.prototype.toString.call(e)+" "}function tt(e){var t=et(e).replace(Bi,""),n=t.match(Ui)||t.match(Fi);return n}function nt(e){var t=tt(e);return t?"function("+(t[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function rt(e,t,n){var i,o,a;if("function"==typeof e){if(!(i=e.$inject)){if(i=[],e.length){if(t)throw w(n)&&n||(n=e.name||nt(e)),zi("strictdi","{0} is not using explicit annotation and cannot be invoked in strict mode",n);o=tt(e),r(o[1].split(Li),function(e){e.replace(Hi,function(e,t,n){i.push(n)})})}e.$inject=i}}else ri(e)?(a=e.length-1,fe(e[a],"fn"),i=e.slice(0,a)):fe(e,"fn",!0);return i}function it(e,t){function n(e){return function(t,n){return y(t)?void r(t,o(e)):e(t,n)}}function i(e,t){if(he(e,"service"),(S(t)||ri(t))&&(t=C.instantiate(t)),!t.$get)throw zi("pget","Provider '{0}' must define $get factory method.",e);return x[e+v]=t}function a(e,t){return function(){var n=k.invoke(t,this);if(m(n))throw zi("undef","Provider '{0}' must return a value from $get factory method.",e);return n}}function s(e,t,n){return i(e,{$get:n!==!1?a(e,t):t})}function u(e,t){return s(e,["$injector",function(e){return e.instantiate(t)}])}function c(e,t){return s(e,$(t),!1)}function l(e,t){he(e,"constant"),x[e]=t,E[e]=t}function f(e,t){var n=C.get(e+v),r=n.$get;n.$get=function(){var e=k.invoke(r,n);return k.invoke(t,null,{$delegate:e})}}function h(e){le(m(e)||ri(e),"modulesToLoad","not an array");var t,n=[];return r(e,function(e){function r(e){var t,n;for(t=0,n=e.length;t<n;t++){var r=e[t],i=C.get(r[0]);i[r[1]].apply(i,r[2])}}if(!b.get(e)){b.put(e,!0);try{w(e)?(t=Gr(e),n=n.concat(h(t.requires)).concat(t._runBlocks),r(t._invokeQueue),r(t._configBlocks)):S(e)?n.push(C.invoke(e)):ri(e)?n.push(C.invoke(e)):fe(e,"module")}catch(t){throw ri(e)&&(e=e[e.length-1]),t.message&&t.stack&&t.stack.indexOf(t.message)===-1&&(t=t.message+"\n"+t.stack),zi("modulerr","Failed to instantiate module {0} due to:\n{1}",e,t.stack||t.message||t)}}}),n}function p(e,n){function r(t,r){if(e.hasOwnProperty(t)){if(e[t]===d)throw zi("cdep","Circular dependency found: {0}",t+" <- "+g.join(" <- "));return e[t]}try{return g.unshift(t),e[t]=d,e[t]=n(t,r),e[t]}catch(n){throw e[t]===d&&delete e[t],n}finally{g.shift()}}function i(e,n,i){for(var o=[],a=it.$$annotate(e,t,i),s=0,u=a.length;s<u;s++){var c=a[s];if("string"!=typeof c)throw zi("itkn","Incorrect injection token! Expected service name as string, got {0}",c);o.push(n&&n.hasOwnProperty(c)?n[c]:r(c,i))}return o}function o(e){return!(Br<=11)&&("function"==typeof e&&/^(?:class\b|constructor\()/.test(et(e)))}function a(e,t,n,r){"string"==typeof n&&(r=n,n=null);var a=i(e,n,r);return ri(e)&&(e=e[e.length-1]),o(e)?(a.unshift(null),new(Function.prototype.bind.apply(e,a))):e.apply(t,a)}function s(e,t,n){var r=ri(e)?e[e.length-1]:e,o=i(e,t,n);return o.unshift(null),new(Function.prototype.bind.apply(r,o))}return{invoke:a,instantiate:s,get:r,annotate:it.$$annotate,has:function(t){return x.hasOwnProperty(t+v)||e.hasOwnProperty(t)}}}t=t===!0;var d={},v="Provider",g=[],b=new Qe([],(!0)),x={$provide:{provider:n(i),factory:n(s),service:n(u),value:n(c),constant:n(l),decorator:f}},C=x.$injector=p(x,function(e,t){throw ei.isString(t)&&g.push(t),zi("unpr","Unknown provider: {0}",g.join(" <- "))}),E={},A=p(E,function(e,t){var n=C.get(e+v,t);return k.invoke(n.$get,n,void 0,e)}),k=A;x["$injector"+v]={$get:$(A)};var O=h(e);return k=A.get("$injector"),k.strictDi=t,r(O,function(e){e&&k.invoke(e)}),k}function ot(){var e=!0;this.disableAutoScrolling=function(){e=!1},this.$get=["$window","$location","$rootScope",function(t,n,r){function i(e){var t=null;return Array.prototype.some.call(e,function(e){if("a"===R(e))return t=e,!0}),t}function o(){var e=s.yOffset;if(S(e))e=e();else if(D(e)){var n=e[0],r=t.getComputedStyle(n);e="fixed"!==r.position?0:n.getBoundingClientRect().bottom}else x(e)||(e=0);return e}function a(e){if(e){e.scrollIntoView();var n=o();if(n){var r=e.getBoundingClientRect().top;t.scrollBy(0,r-n)}}else t.scrollTo(0,0)}function s(e){e=w(e)?e:n.hash();var t;e?(t=u.getElementById(e))?a(t):(t=i(u.getElementsByName(e)))?a(t):"top"===e&&a(null):a(null)}var u=t.document;return e&&r.$watch(function(){return n.hash()},function(e,t){e===t&&""===e||ze(function(){r.$evalAsync(s)})}),s}]}function at(e,t){return e||t?e?t?(ri(e)&&(e=e.join(" ")),ri(t)&&(t=t.join(" ")),e+" "+t):e:t:""}function st(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.nodeType===Gi)return n}}function ut(e){w(e)&&(e=e.split(" "));var t=$e();return r(e,function(e){e.length&&(t[e]=!0)}),t}function ct(e){return y(e)?e:{}}function lt(e,t,n,i){function o(e){try{e.apply(null,L(arguments,1))}finally{if(g--,0===g)for(;y.length;)try{y.pop()()}catch(e){n.error(e)}}}function a(e){var t=e.indexOf("#");return t===-1?"":e.substr(t)}function s(){S=null,u(),c()}function u(){b=E(),b=m(b)?null:b,U(b,O)&&(b=O),O=b}function c(){x===l.url()&&w===b||(x=l.url(),w=b,r(A,function(e){e(l.url(),b)}))}var l=this,f=e.location,h=e.history,d=e.setTimeout,$=e.clearTimeout,v={};l.isMock=!1;var g=0,y=[];l.$$completeOutstandingRequest=o,l.$$incOutstandingRequestCount=function(){g++},l.notifyWhenNoOutstandingRequests=function(e){0===g?e():y.push(e)};var b,w,x=f.href,C=t.find("base"),S=null,E=i.history?function(){try{return h.state}catch(e){}}:p;u(),w=b,l.url=function(t,n,r){if(m(r)&&(r=null),f!==e.location&&(f=e.location),h!==e.history&&(h=e.history),t){var o=w===r;if(x===t&&(!i.history||o))return l;var s=x&&Bt(x)===Bt(t);return x=t,w=r,!i.history||s&&o?(s||(S=t),n?f.replace(t):s?f.hash=a(t):f.href=t,f.href!==t&&(S=t)):(h[n?"replaceState":"pushState"](r,"",t),u(),w=b),S&&(S=t),l}return S||f.href.replace(/%27/g,"'")},l.state=function(){return b};var A=[],k=!1,O=null;l.onUrlChange=function(t){return k||(i.history&&zr(e).on("popstate",s),zr(e).on("hashchange",s),k=!0),A.push(t),t},l.$$applicationDestroyed=function(){zr(e).off("hashchange popstate",s)},l.$$checkUrlChange=c,l.baseHref=function(){var e=C.attr("href");return e?e.replace(/^(https?:)?\/\/[^\/]*/,""):""},l.defer=function(e,t){var n;return g++,n=d(function(){delete v[n],o(e)},t||0),v[n]=!0,n},l.defer.cancel=function(e){return!!v[e]&&(delete v[e],$(e),o(p),!0)}}function ft(){this.$get=["$window","$log","$sniffer","$document",function(e,t,n,r){return new lt(e,r,t,n)}]}function ht(){this.$get=function(){function e(e,r){function i(e){e!==h&&(p?p===e&&(p=e.n):p=e,o(e.n,e.p),o(e,h),h=e,h.n=null)}function o(e,t){e!==t&&(e&&(e.p=t),t&&(t.n=e))}if(e in n)throw t("$cacheFactory")("iid","CacheId '{0}' is already taken!",e);var a=0,s=c({},r,{id:e}),u=$e(),l=r&&r.capacity||Number.MAX_VALUE,f=$e(),h=null,p=null;return n[e]={put:function(e,t){if(!m(t)){if(l<Number.MAX_VALUE){var n=f[e]||(f[e]={key:e});i(n)}return e in u||a++,u[e]=t,a>l&&this.remove(p.key),t}},get:function(e){if(l<Number.MAX_VALUE){var t=f[e];if(!t)return;i(t)}return u[e]},remove:function(e){if(l<Number.MAX_VALUE){var t=f[e];if(!t)return;t===h&&(h=t.p),t===p&&(p=t.n),o(t.n,t.p),delete f[e]}e in u&&(delete u[e],a--)},removeAll:function(){u=$e(),a=0,f=$e(),h=p=null},destroy:function(){u=null,s=null,f=null,delete n[e]},info:function(){return c({},s,{size:a})}}}var n={};return e.info=function(){var e={};return r(n,function(t,n){e[n]=t.info()}),e},e.get=function(e){return n[e]},e}}function pt(){this.$get=["$cacheFactory",function(e){return e("templates")}]}function dt(){}function $t(t,n){function i(e,t,n){var i=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,o=$e();return r(e,function(e,r){if(e in A)return void(o[r]=A[e]);var a=e.match(i);if(!a)throw to("iscp","Invalid {3} for directive '{0}'. Definition: {... {1}: '{2}' ...}",t,r,e,n?"controller bindings definition":"isolate scope definition");o[r]={mode:a[1][0],collection:"*"===a[2],optional:"?"===a[3],attrName:a[4]||r},a[4]&&(A[e]=o[r])}),o}function a(e,t){var n={isolateScope:null,bindToController:null};if(y(e.scope)&&(e.bindToController===!0?(n.bindToController=i(e.scope,t,!0),n.isolateScope={}):n.isolateScope=i(e.scope,t,!1)),y(e.bindToController)&&(n.bindToController=i(e.bindToController,t,!0)),y(n.bindToController)){var r=e.controller,o=e.controllerAs;if(!r)throw to("noctrl","Cannot bind to controller without directive '{0}'s controller.",t);if(!bt(r,o))throw to("noident","Cannot bind to controller without identifier for directive '{0}'.",t)}return n}function s(e){var t=e.charAt(0);if(!t||t!==Ur(t))throw to("baddir","Directive/Component name '{0}' is invalid. The first character must be a lowercase letter",e);if(e!==e.trim())throw to("baddir","Directive/Component name '{0}' is invalid. The name should not contain leading or trailing whitespaces",e)}function u(e){var t=e.require||e.controller&&e.name;return!ri(t)&&y(t)&&r(t,function(e,n){var r=e.match(C),i=e.substring(r[0].length);i||(t[n]=r[0]+n)}),t}var l={},f="Directive",v=/^\s*directive:\s*([\w\-]+)\s+(.*)$/,b=/(([\w\-]+)(?::([^;]+))?;?)/,x=P("ngSrc,ngSrcset,src,srcset"),C=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,E=/^(on[a-z]+|formaction)$/,A=$e();this.directive=function e(n,i){return he(n,"directive"),w(n)?(s(n),le(i,"directiveFactory"),l.hasOwnProperty(n)||(l[n]=[],t.factory(n+f,["$injector","$exceptionHandler",function(e,t){var i=[];return r(l[n],function(r,o){try{var a=e.invoke(r);S(a)?a={compile:$(a)}:!a.compile&&a.link&&(a.compile=$(a.link)),a.priority=a.priority||0,a.index=o,a.name=a.name||n,a.require=u(a),a.restrict=a.restrict||"EA",a.$$moduleName=r.$$moduleName,i.push(a)}catch(e){t(e)}}),i}])),l[n].push(i)):r(n,o(e)),this},this.component=function(e,t){function n(e){function n(t){return S(t)||ri(t)?function(n,r){return e.invoke(t,this,{$element:n,$attrs:r})}:t}var o=t.template||t.templateUrl?t.template:"",a={controller:i,controllerAs:bt(t.controller)||t.controllerAs||"$ctrl",template:n(o),templateUrl:n(t.templateUrl),transclude:t.transclude,scope:{},bindToController:t.bindings||{},restrict:"E",require:t.require};return r(t,function(e,t){"$"===t.charAt(0)&&(a[t]=e)}),a}var i=t.controller||function(){};return r(t,function(e,t){"$"===t.charAt(0)&&(n[t]=e,S(i)&&(i[t]=e))}),n.$inject=["$injector"],this.directive(e,n)},this.aHrefSanitizationWhitelist=function(e){return g(e)?(n.aHrefSanitizationWhitelist(e),this):n.aHrefSanitizationWhitelist()},this.imgSrcSanitizationWhitelist=function(e){return g(e)?(n.imgSrcSanitizationWhitelist(e),this):n.imgSrcSanitizationWhitelist()};var O=!0;this.debugInfoEnabled=function(e){return g(e)?(O=e,this):O};var M=10;this.onChangesTtl=function(e){return arguments.length?(M=e,this):M};var T=!0;this.commentDirectivesEnabled=function(e){return arguments.length?(T=e,this):T};var N=!0;this.cssClassDirectivesEnabled=function(e){return arguments.length?(N=e,this):N},this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(t,n,i,o,s,u,$,A,j,I){function D(){try{if(!--ke)throw we=void 0,to("infchng","{0} $onChanges() iterations reached. Aborting!\n",M);$.$apply(function(){for(var e=[],t=0,n=we.length;t<n;++t)try{we[t]()}catch(t){e.push(t)}if(we=void 0,e.length)throw e})}finally{ke++}}function P(e,t){if(t){var n,r,i,o=Object.keys(t);for(n=0,r=o.length;n<r;n++)i=o[n],this[i]=t[i]}else this.$attr={};this.$$element=e}function q(e,t,n){Se.innerHTML="<span "+t+">";var r=Se.firstChild.attributes,i=r[0];r.removeNamedItem(i.name),i.value=n,e.attributes.setNamedItem(i)}function F(e,t){try{e.addClass(t)}catch(e){}}function B(t,n,r,i,o){t instanceof zr||(t=zr(t));for(var a=/\S+/,s=0,u=t.length;s<u;s++){var c=t[s];c.nodeType===vi&&c.nodeValue.match(a)&&Me(c,t[s]=e.document.createElement("span"))}var l=W(t,n,t,r,i,o);B.$$addScopeClass(t);var f=null;return function(e,n,r){le(e,"scope"),o&&o.needsNewScope&&(e=e.$parent.$new()),r=r||{};var i=r.parentBoundTranscludeFn,a=r.transcludeControllers,s=r.futureParentElement;i&&i.$$boundTransclude&&(i=i.$$boundTransclude),f||(f=z(s));var u;if(u="html"!==f?zr(pe(f,zr("<div>").append(t).html())):n?Di.clone.call(t):t,a)for(var c in a)u.data("$"+c+"Controller",a[c].instance);return B.$$addScopeInfo(u,e),n&&n(u,e),l&&l(e,u,u,i),u}}function z(e){var t=e&&e[0];return t&&"foreignobject"!==R(t)&&Kr.call(t).match(/SVG/)?"svg":"html"}function W(e,t,n,r,i,o){function a(e,n,r,i){var o,a,s,u,c,l,f,h,$;if(p){var v=n.length;for($=new Array(v),c=0;c<d.length;c+=3)f=d[c],$[f]=n[f]}else $=n;for(c=0,l=d.length;c<l;)s=$[d[c++]],o=d[c++],a=d[c++],o?(o.scope?(u=e.$new(),B.$$addScopeInfo(zr(s),u)):u=e,h=o.transcludeOnThisElement?G(e,o.transclude,i):!o.templateOnThisElement&&i?i:!i&&t?G(e,t):null,o(a,u,s,r,h)):a&&a(e,s.childNodes,void 0,i)}for(var s,u,c,l,f,h,p,d=[],$=0;$<e.length;$++)s=new P,u=Z(e[$],[],s,0===$?r:void 0,i),c=u.length?ee(u,e[$],s,t,n,null,[],[],o):null,c&&c.scope&&B.$$addScopeClass(s.$$element),f=c&&c.terminal||!(l=e[$].childNodes)||!l.length?null:W(l,c?(c.transcludeOnThisElement||!c.templateOnThisElement)&&c.transclude:t),(c||f)&&(d.push($,c,f),h=!0,p=p||c),o=null;return h?a:null}function G(e,t,n){function r(r,i,o,a,s){return r||(r=e.$new(!1,s),r.$$transcluded=!0),t(r,i,{parentBoundTranscludeFn:n,transcludeControllers:o,futureParentElement:a})}var i=r.$$slots=$e();for(var o in t.$$slots)t.$$slots[o]?i[o]=G(e,t.$$slots[o],n):i[o]=null;return r}function Z(e,t,n,r,i){var o,a,s,u=e.nodeType,c=n.$attr;switch(u){case di:a=R(e),ie(t,mt(a),"E",r,i);for(var l,f,h,p,d,$,v=e.attributes,m=0,g=v&&v.length;m<g;m++){var x=!1,C=!1;l=v[m],f=l.name,d=oi(l.value),p=mt(f),$=je.test(p),$&&(f=f.replace(ro,"").substr(8).replace(/_(.)/g,function(e,t){return t.toUpperCase()}));var S=p.match(Ie);S&&oe(S[1])&&(x=f,
C=f.substr(0,f.length-5)+"end",f=f.substr(0,f.length-6)),h=mt(f.toLowerCase()),c[h]=f,!$&&n.hasOwnProperty(h)||(n[h]=d,We(e,h)&&(n[h]=!0)),ve(e,t,d,h,$),ie(t,h,"A",r,i,x,C)}if("input"===a&&"hidden"===e.getAttribute("type")&&e.setAttribute("autocomplete","off"),!Ae)break;if(s=e.className,y(s)&&(s=s.animVal),w(s)&&""!==s)for(;o=b.exec(s);)h=mt(o[2]),ie(t,h,"C",r,i)&&(n[h]=oi(o[3])),s=s.substr(o.index+o[0].length);break;case vi:if(11===Br)for(;e.parentNode&&e.nextSibling&&e.nextSibling.nodeType===vi;)e.nodeValue=e.nodeValue+e.nextSibling.nodeValue,e.parentNode.removeChild(e.nextSibling);he(t,e.nodeValue);break;case mi:if(!Ee)break;J(e,t,n,r,i)}return t.sort(ce),t}function J(e,t,n,r,i){try{var o=v.exec(e.nodeValue);if(o){var a=mt(o[1]);ie(t,a,"M",r,i)&&(n[a]=oi(o[2]))}}catch(e){}}function K(e,t,n){var r=[],i=0;if(t&&e.hasAttribute&&e.hasAttribute(t)){do{if(!e)throw to("uterdir","Unterminated attribute, found '{0}' but no matching '{1}' found.",t,n);e.nodeType===di&&(e.hasAttribute(t)&&i++,e.hasAttribute(n)&&i--),r.push(e),e=e.nextSibling}while(i>0)}else r.push(e);return zr(r)}function X(e,t,n){return function(r,i,o,a,s){return i=K(i[0],t,n),e(r,i,o,a,s)}}function Q(e,t,n,r,i,o){var a;return e?B(t,n,r,i,o):function(){return a||(a=B(t,n,r,i,o),t=n=o=null),a.apply(this,arguments)}}function ee(e,t,n,o,a,s,u,l,f){function h(e,t,n,r){e&&(n&&(e=X(e,n,r)),e.require=d.require,e.directiveName=$,(E===d||d.$$isolateScope)&&(e=ge(e,{isolateScope:!0})),u.push(e)),t&&(n&&(t=X(t,n,r)),t.require=d.require,t.directiveName=$,(E===d||d.$$isolateScope)&&(t=ge(t,{isolateScope:!0})),l.push(t))}function p(e,o,a,s,f){function h(e,t,n,r){var i;if(k(e)||(r=n,n=t,t=e,e=void 0),V&&(i=b),n||(n=V?O.parent():O),!r)return f(e,t,i,n,_);var o=f.$$slots[r];if(o)return o(e,t,i,n,_);if(m(o))throw to("noslot",'No parent directive that requires a transclusion with slot name "{0}". Element: {1}',r,Y(O))}var p,d,$,v,g,b,w,O,M,T;t===a?(M=n,O=n.$$element):(O=zr(a),M=new P(O,n)),g=o,E?v=o.$new(!0):x&&(g=o.$parent),f&&(w=h,w.$$boundTransclude=f,w.isSlotFilled=function(e){return!!f.$$slots[e]}),C&&(b=ne(O,M,w,C,v,o,E)),E&&(B.$$addScopeInfo(O,v,!0,!(A&&(A===E||A===E.$$originalDirective))),B.$$addScopeClass(O,!0),v.$$isolateBindings=E.$$isolateBindings,T=be(o,M,v,v.$$isolateBindings,E),T.removeWatches&&v.$on("$destroy",T.removeWatches));for(var N in b){var j=C[N],I=b[N],D=j.$$bindings.bindToController;I.identifier&&D?I.bindingInfo=be(g,M,I.instance,D,j):I.bindingInfo={};var R=I();R!==I.instance&&(I.instance=R,O.data("$"+j.name+"Controller",R),I.bindingInfo.removeWatches&&I.bindingInfo.removeWatches(),I.bindingInfo=be(g,M,I.instance,D,j))}for(r(C,function(e,t){var n=e.require;e.bindToController&&!ri(n)&&y(n)&&c(b[t].instance,te(t,n,O,b))}),r(b,function(e){var t=e.instance;if(S(t.$onChanges))try{t.$onChanges(e.bindingInfo.initialChanges)}catch(e){i(e)}if(S(t.$onInit))try{t.$onInit()}catch(e){i(e)}S(t.$doCheck)&&(g.$watch(function(){t.$doCheck()}),t.$doCheck()),S(t.$onDestroy)&&g.$on("$destroy",function(){t.$onDestroy()})}),p=0,d=u.length;p<d;p++)$=u[p],ye($,$.isolateScope?v:o,O,M,$.require&&te($.directiveName,$.require,O,b),w);var _=o;for(E&&(E.template||null===E.templateUrl)&&(_=v),e&&e(_,a.childNodes,void 0,f),p=l.length-1;p>=0;p--)$=l[p],ye($,$.isolateScope?v:o,O,M,$.require&&te($.directiveName,$.require,O,b),w);r(b,function(e){var t=e.instance;S(t.$postLink)&&t.$postLink()})}f=f||{};for(var d,$,v,g,b,w=-Number.MAX_VALUE,x=f.newScopeDirective,C=f.controllerDirectives,E=f.newIsolateScopeDirective,A=f.templateDirective,O=f.nonTlbTranscludeDirective,M=!1,T=!1,V=f.hasElementTranscludeDirective,N=n.$$element=zr(t),j=s,I=o,D=!1,_=!1,q=0,U=e.length;q<U;q++){d=e[q];var F=d.$$start,z=d.$$end;if(F&&(N=K(t,F,z)),v=void 0,w>d.priority)break;if(b=d.scope,b&&(d.templateUrl||(y(b)?(fe("new/isolated scope",E||x,d,N),E=d):fe("new/isolated scope",E,d,N)),x=x||d),$=d.name,!D&&(d.replace&&(d.templateUrl||d.template)||d.transclude&&!d.$$tlb)){for(var W,G=q+1;W=e[G++];)if(W.transclude&&!W.$$tlb||W.replace&&(W.templateUrl||W.template)){_=!0;break}D=!0}if(!d.templateUrl&&d.controller&&(b=d.controller,C=C||$e(),fe("'"+$+"' controller",C[$],d,N),C[$]=d),b=d.transclude)if(M=!0,d.$$tlb||(fe("transclusion",O,d,N),O=d),"element"===b)V=!0,w=d.priority,v=N,N=n.$$element=zr(B.$$createComment($,n[$])),t=N[0],me(a,L(v),t),v[0].$$parentNode=v[0].parentNode,I=Q(_,v,o,w,j&&j.name,{nonTlbTranscludeDirective:O});else{var J=$e();if(v=zr(Ve(t)).contents(),y(b)){v=[];var ee=$e(),ie=$e();r(b,function(e,t){var n="?"===e.charAt(0);e=n?e.substring(1):e,ee[e]=t,J[t]=null,ie[t]=n}),r(N.contents(),function(e){var t=ee[mt(R(e))];t?(ie[t]=!0,J[t]=J[t]||[],J[t].push(e)):v.push(e)}),r(ie,function(e,t){if(!e)throw to("reqslot","Required transclusion slot `{0}` was not filled.",t)});for(var oe in J)J[oe]&&(J[oe]=Q(_,J[oe],o))}N.empty(),I=Q(_,v,o,void 0,void 0,{needsNewScope:d.$$isolateScope||d.$$newScope}),I.$$slots=J}if(d.template)if(T=!0,fe("template",A,d,N),A=d,b=S(d.template)?d.template(N,n):d.template,b=Ne(b),d.replace){if(j=d,v=Ce(b)?[]:yt(pe(d.templateNamespace,oi(b))),t=v[0],1!==v.length||t.nodeType!==di)throw to("tplrt","Template for directive '{0}' must have exactly one root element. {1}",$,"");me(a,N,t);var ue={$attr:{}},ce=Z(t,[],ue),le=e.splice(q+1,e.length-(q+1));(E||x)&&re(ce,E,x),e=e.concat(ce).concat(le),ae(n,ue),U=e.length}else N.html(b);if(d.templateUrl)T=!0,fe("template",A,d,N),A=d,d.replace&&(j=d),p=se(e.splice(q,e.length-q),N,n,a,M&&I,u,l,{controllerDirectives:C,newScopeDirective:x!==d&&x,newIsolateScopeDirective:E,templateDirective:A,nonTlbTranscludeDirective:O}),U=e.length;else if(d.compile)try{g=d.compile(N,n,I);var he=d.$$originalDirective||d;S(g)?h(null,H(he,g),F,z):g&&h(H(he,g.pre),H(he,g.post),F,z)}catch(e){i(e,Y(N))}d.terminal&&(p.terminal=!0,w=Math.max(w,d.priority))}return p.scope=x&&x.scope===!0,p.transcludeOnThisElement=M,p.templateOnThisElement=T,p.transclude=I,f.hasElementTranscludeDirective=V,p}function te(e,t,n,i){var o;if(w(t)){var a=t.match(C),s=t.substring(a[0].length),u=a[1]||a[3],c="?"===a[2];if("^^"===u?n=n.parent():(o=i&&i[s],o=o&&o.instance),!o){var l="$"+s+"Controller";o=u?n.inheritedData(l):n.data(l)}if(!o&&!c)throw to("ctreq","Controller '{0}', required by directive '{1}', can't be found!",s,e)}else if(ri(t)){o=[];for(var f=0,h=t.length;f<h;f++)o[f]=te(e,t[f],n,i)}else y(t)&&(o={},r(t,function(t,r){o[r]=te(e,t,n,i)}));return o||null}function ne(e,t,n,r,i,o,a){var s=$e();for(var c in r){var l=r[c],f={$scope:l===a||l.$$isolateScope?i:o,$element:e,$attrs:t,$transclude:n},h=l.controller;"@"===h&&(h=t[l.name]);var p=u(h,f,!0,l.controllerAs);s[l.name]=p,e.data("$"+l.name+"Controller",p.instance)}return s}function re(e,t,n){for(var r=0,i=e.length;r<i;r++)e[r]=h(e[r],{$$isolateScope:t,$$newScope:n})}function ie(e,n,r,o,s,u,c){if(n===s)return null;var p=null;if(l.hasOwnProperty(n))for(var d,$=t.get(n+f),v=0,g=$.length;v<g;v++)try{if(d=$[v],(m(o)||o>d.priority)&&d.restrict.indexOf(r)!==-1){if(u&&(d=h(d,{$$start:u,$$end:c})),!d.$$bindings){var b=d.$$bindings=a(d,d.name);y(b.isolateScope)&&(d.$$isolateBindings=b.isolateScope)}e.push(d),p=d}}catch(e){i(e)}return p}function oe(e){if(l.hasOwnProperty(e))for(var n,r=t.get(e+f),i=0,o=r.length;i<o;i++)if(n=r[i],n.multiElement)return!0;return!1}function ae(e,t){var n=t.$attr,i=e.$attr;r(e,function(r,i){"$"!==i.charAt(0)&&(t[i]&&t[i]!==r&&(r+=("style"===i?";":" ")+t[i]),e.$set(i,r,!0,n[i]))}),r(t,function(t,r){e.hasOwnProperty(r)||"$"===r.charAt(0)||(e[r]=t,"class"!==r&&"style"!==r&&(i[r]=n[r]))})}function se(e,t,n,i,a,s,u,c){var l,f,p=[],d=t[0],$=e.shift(),v=h($,{templateUrl:null,transclude:null,replace:null,$$originalDirective:$}),m=S($.templateUrl)?$.templateUrl(t,n):$.templateUrl,g=$.templateNamespace;return t.empty(),o(m).then(function(o){var h,b,w,x;if(o=Ne(o),$.replace){if(w=Ce(o)?[]:yt(pe(g,oi(o))),h=w[0],1!==w.length||h.nodeType!==di)throw to("tplrt","Template for directive '{0}' must have exactly one root element. {1}",$.name,m);b={$attr:{}},me(i,t,h);var C=Z(h,[],b);y($.scope)&&re(C,!0),e=C.concat(e),ae(n,b)}else h=d,t.html(o);for(e.unshift(v),l=ee(e,h,n,a,t,$,s,u,c),r(i,function(e,n){e===h&&(i[n]=t[0])}),f=W(t[0].childNodes,a);p.length;){var S=p.shift(),E=p.shift(),A=p.shift(),k=p.shift(),O=t[0];if(!S.$$destroyed){if(E!==d){var M=E.className;c.hasElementTranscludeDirective&&$.replace||(O=Ve(h)),me(A,zr(E),O),F(zr(O),M)}x=l.transcludeOnThisElement?G(S,l.transclude,k):k,l(f,S,O,i,x)}}p=null}),function(e,t,n,r,i){var o=i;t.$$destroyed||(p?p.push(t,n,r,o):(l.transcludeOnThisElement&&(o=G(t,l.transclude,i)),l(f,t,n,r,o)))}}function ce(e,t){var n=t.priority-e.priority;return 0!==n?n:e.name!==t.name?e.name<t.name?-1:1:e.index-t.index}function fe(e,t,n,r){function i(e){return e?" (module: "+e+")":""}if(t)throw to("multidir","Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}",t.name,i(t.$$moduleName),n.name,i(n.$$moduleName),e,Y(r))}function he(e,t){var r=n(t,!0);r&&e.push({priority:0,compile:function(e){var t=e.parent(),n=!!t.length;return n&&B.$$addBindingClass(t),function(e,t){var i=t.parent();n||B.$$addBindingClass(i),B.$$addBindingInfo(i,r.expressions),e.$watch(r,function(e){t[0].nodeValue=e})}}})}function pe(t,n){switch(t=Ur(t||"html")){case"svg":case"math":var r=e.document.createElement("div");return r.innerHTML="<"+t+">"+n+"</"+t+">",r.childNodes[0].childNodes;default:return n}}function de(e,t){if("srcdoc"===t)return A.HTML;var n=R(e);if("src"===t||"ngSrc"===t){if(["img","video","audio","source","track"].indexOf(n)===-1)return A.RESOURCE_URL}else if("xlinkHref"===t||"form"===n&&"action"===t)return A.RESOURCE_URL}function ve(e,t,r,i,o){var a=de(e,i);o=x[i]||o;var s=n(r,!0,a,o);if(s){if("multiple"===i&&"select"===R(e))throw to("selmulti","Binding to the 'multiple' attribute is not supported. Element: {0}",Y(e));t.push({priority:100,compile:function(){return{pre:function(e,t,u){var c=u.$$observers||(u.$$observers=$e());if(E.test(i))throw to("nodomevents","Interpolations for HTML DOM event attributes are disallowed.  Please use the ng- versions (such as ng-click instead of onclick) instead.");var l=u[i];l!==r&&(s=l&&n(l,!0,a,o),r=l),s&&(u[i]=s(e),(c[i]||(c[i]=[])).$$inter=!0,(u.$$observers&&u.$$observers[i].$$scope||e).$watch(s,function(e,t){"class"===i&&e!==t?u.$updateClass(e,t):u.$set(i,e)}))}}}})}}function me(t,n,r){var i,o,a=n[0],s=n.length,u=a.parentNode;if(t)for(i=0,o=t.length;i<o;i++)if(t[i]===a){t[i++]=r;for(var c=i,l=c+s-1,f=t.length;c<f;c++,l++)l<f?t[c]=t[l]:delete t[c];t.length-=s-1,t.context===a&&(t.context=r);break}u&&u.replaceChild(r,a);var h=e.document.createDocumentFragment();for(i=0;i<s;i++)h.appendChild(n[i]);for(zr.hasData(a)&&(zr.data(r,zr.data(a)),zr(a).off("$destroy")),zr.cleanData(h.querySelectorAll("*")),i=1;i<s;i++)delete n[i];n[0]=r,n.length=1}function ge(e,t){return c(function(){return e.apply(null,arguments)},e,t)}function ye(e,t,n,r,o,a){try{e(t,n,r,o,a)}catch(e){i(e,Y(n))}}function be(e,t,i,o,a){function u(t,n,r){S(i.$onChanges)&&n!==r&&(we||(e.$$postDigest(D),we=[]),l||(l={},we.push(c)),l[t]&&(r=l[t].previousValue),l[t]=new vt(r,n))}function c(){i.$onChanges(l),l=void 0}var l,f=[],h={};return r(o,function(r,o){var c,l,d,$,v,m=r.attrName,g=r.optional,y=r.mode;switch(y){case"@":g||qr.call(t,m)||(i[o]=t[m]=void 0),t.$observe(m,function(e){if(w(e)||V(e)){var t=i[o];u(o,e,t),i[o]=e}}),t.$$observers[m].$$scope=e,c=t[m],w(c)?i[o]=n(c)(e):V(c)&&(i[o]=c),h[o]=new vt(no,i[o]);break;case"=":if(!qr.call(t,m)){if(g)break;t[m]=void 0}if(g&&!t[m])break;l=s(t[m]),$=l.literal?U:function(e,t){return e===t||e!==e&&t!==t},d=l.assign||function(){throw c=i[o]=l(e),to("nonassign","Expression '{0}' in attribute '{1}' used with directive '{2}' is non-assignable!",t[m],m,a.name)},c=i[o]=l(e);var b=function(t){return $(t,i[o])||($(t,c)?d(e,t=i[o]):i[o]=t),c=t};b.$stateful=!0,v=r.collection?e.$watchCollection(t[m],b):e.$watch(s(t[m],b),null,l.literal),f.push(v);break;case"<":if(!qr.call(t,m)){if(g)break;t[m]=void 0}if(g&&!t[m])break;l=s(t[m]);var x=i[o]=l(e);h[o]=new vt(no,i[o]),v=e.$watch(l,function(e,t){if(t===e){if(t===x)return;t=x}u(o,e,t),i[o]=e},l.literal),f.push(v);break;case"&":if(l=t.hasOwnProperty(m)?s(t[m]):p,l===p&&g)break;i[o]=function(t){return l(e,t)}}}),{initialChanges:h,removeWatches:f.length&&function(){for(var e=0,t=f.length;e<t;++e)f[e]()}}}var we,xe=/^\w/,Se=e.document.createElement("div"),Ee=T,Ae=N,ke=M;P.prototype={$normalize:mt,$addClass:function(e){e&&e.length>0&&j.addClass(this.$$element,e)},$removeClass:function(e){e&&e.length>0&&j.removeClass(this.$$element,e)},$updateClass:function(e,t){var n=gt(e,t);n&&n.length&&j.addClass(this.$$element,n);var r=gt(t,e);r&&r.length&&j.removeClass(this.$$element,r)},$set:function(e,t,n,o){var a,s=this.$$element[0],u=We(s,e),c=Ge(e),l=e;if(u?(this.$$element.prop(e,t),o=u):c&&(this[c]=t,l=c),this[e]=t,o?this.$attr[e]=o:(o=this.$attr[e],o||(this.$attr[e]=o=ue(e,"-"))),a=R(this.$$element),"a"===a&&("href"===e||"xlinkHref"===e)||"img"===a&&"src"===e)this[e]=t=I(t,"src"===e);else if("img"===a&&"srcset"===e&&g(t)){for(var f="",h=oi(t),p=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,d=/\s/.test(h)?p:/(,)/,$=h.split(d),v=Math.floor($.length/2),y=0;y<v;y++){var b=2*y;f+=I(oi($[b]),!0),f+=" "+oi($[b+1])}var w=oi($[2*y]).split(/\s/);f+=I(oi(w[0]),!0),2===w.length&&(f+=" "+oi(w[1])),this[e]=t=f}n!==!1&&(null===t||m(t)?this.$$element.removeAttr(o):xe.test(o)?this.$$element.attr(o,t):q(this.$$element[0],o,t));var x=this.$$observers;x&&r(x[l],function(e){try{e(t)}catch(e){i(e)}})},$observe:function(e,t){var n=this,r=n.$$observers||(n.$$observers=$e()),i=r[e]||(r[e]=[]);return i.push(t),$.$evalAsync(function(){i.$$inter||!n.hasOwnProperty(e)||m(n[e])||t(n[e])}),function(){_(i,t)}}};var Oe=n.startSymbol(),Te=n.endSymbol(),Ne="{{"===Oe&&"}}"===Te?d:function(e){return e.replace(/\{\{/g,Oe).replace(/}}/g,Te)},je=/^ngAttr[A-Z]/,Ie=/^(.+)Start$/;return B.$$addBindingInfo=O?function(e,t){var n=e.data("$binding")||[];ri(t)?n=n.concat(t):n.push(t),e.data("$binding",n)}:p,B.$$addBindingClass=O?function(e){F(e,"ng-binding")}:p,B.$$addScopeInfo=O?function(e,t,n,r){var i=n?r?"$isolateScopeNoTemplate":"$isolateScope":"$scope";e.data(i,t)}:p,B.$$addScopeClass=O?function(e,t){F(e,t?"ng-isolate-scope":"ng-scope")}:p,B.$$createComment=function(t,n){var r="";return O&&(r=" "+(t||"")+": ",n&&(r+=n+" ")),e.document.createComment(r)},B}]}function vt(e,t){this.previousValue=e,this.currentValue=t}function mt(e){return xe(e.replace(ro,""))}function gt(e,t){var n="",r=e.split(/\s+/),i=t.split(/\s+/);e:for(var o=0;o<r.length;o++){for(var a=r[o],s=0;s<i.length;s++)if(a===i[s])continue e;n+=(n.length>0?" ":"")+a}return n}function yt(e){e=zr(e);var t=e.length;if(t<=1)return e;for(;t--;){var n=e[t];n.nodeType===mi&&Jr.call(e,t,1)}return e}function bt(e,t){if(t&&w(t))return t;if(w(e)){var n=oo.exec(e);if(n)return n[3]}}function wt(){var e={},n=!1;this.has=function(t){return e.hasOwnProperty(t)},this.register=function(t,n){he(t,"controller"),y(t)?c(e,t):e[t]=n},this.allowGlobals=function(){n=!0},this.$get=["$injector","$window",function(r,i){function o(e,n,r,i){if(!e||!y(e.$scope))throw t("$controller")("noscp","Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.",i,n);e.$scope[n]=r}return function(t,a,s,u){var l,f,h,p;if(s=s===!0,u&&w(u)&&(p=u),w(t)){if(f=t.match(oo),!f)throw io("ctrlfmt","Badly formed controller string '{0}'. Must match `__name__ as __id__` or `__name__`.",t);h=f[1],p=p||f[3],t=e.hasOwnProperty(h)?e[h]:pe(a.$scope,h,!0)||(n?pe(i,h,!0):void 0),fe(t,h,!0)}if(s){var d=(ri(t)?t[t.length-1]:t).prototype;return l=Object.create(d||null),p&&o(a,p,l,h||t.name),c(function(){var e=r.invoke(t,l,a,h);return e!==l&&(y(e)||S(e))&&(l=e,p&&o(a,p,l,h||t.name)),l},{instance:l,identifier:p})}return l=r.instantiate(t,a,h),p&&o(a,p,l,h||t.name),l}}]}function xt(){this.$get=["$window",function(e){return zr(e.document)}]}function Ct(){this.$get=["$log",function(e){return function(t,n){e.error.apply(e,arguments)}}]}function St(e){return y(e)?C(e)?e.toISOString():z(e):e}function Et(){this.$get=function(){return function(e){if(!e)return"";var t=[];return i(e,function(e,n){null===e||m(e)||(ri(e)?r(e,function(e){t.push(te(n)+"="+te(St(e)))}):t.push(te(n)+"="+te(St(e))))}),t.join("&")}}}function At(){this.$get=function(){return function(e){function t(e,o,a){null===e||m(e)||(ri(e)?r(e,function(e,n){t(e,o+"["+(y(e)?n:"")+"]")}):y(e)&&!C(e)?i(e,function(e,n){t(e,o+(a?"":"[")+n+(a?"":"]"))}):n.push(te(o)+"="+te(St(e))))}if(!e)return"";var n=[];return t(e,"",!0),n.join("&")}}}function kt(e,t){if(w(e)){var n=e.replace(fo,"").trim();if(n){var r=t("Content-Type");(r&&0===r.indexOf(so)||Ot(n))&&(e=W(n))}}return e}function Ot(e){var t=e.match(co);return t&&lo[t[0]].test(e)}function Mt(e){function t(e,t){e&&(i[e]=i[e]?i[e]+", "+t:t)}var n,i=$e();return w(e)?r(e.split("\n"),function(e){n=e.indexOf(":"),t(Ur(oi(e.substr(0,n))),oi(e.substr(n+1)))}):y(e)&&r(e,function(e,n){t(Ur(n),oi(e))}),i}function Tt(e){var t;return function(n){if(t||(t=Mt(e)),n){var r=t[Ur(n)];return void 0===r&&(r=null),r}return t}}function Vt(e,t,n,i){return S(i)?i(e,t,n):(r(i,function(r){e=r(e,t,n)}),e)}function Nt(e){return 200<=e&&e<300}function jt(){var e=this.defaults={transformResponse:[kt],transformRequest:[function(e){return!y(e)||O(e)||T(e)||M(e)?e:z(e)}],headers:{common:{Accept:"application/json, text/plain, */*"},post:me(uo),put:me(uo),patch:me(uo)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},n=!1;this.useApplyAsync=function(e){return g(e)?(n=!!e,this):n};var i=!0;this.useLegacyPromiseExtensions=function(e){return g(e)?(i=!!e,this):i};var o=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",function(a,s,u,l,f,h){function p(n){function o(e,t){for(var n=0,r=t.length;n<r;){var i=t[n++],o=t[n++];e=e.then(i,o)}return t.length=0,e}function a(e,t){var n,i={};return r(e,function(e,r){S(e)?(n=e(t),null!=n&&(i[r]=n)):i[r]=e}),i}function s(t){var n,r,i,o=e.headers,s=c({},t.headers);o=c({},o.common,o[Ur(t.method)]);e:for(n in o){r=Ur(n);for(i in s)if(Ur(i)===r)continue e;s[n]=o[n]}return a(s,me(t))}function u(t){var n=t.headers,i=Vt(t.data,Tt(n),void 0,t.transformRequest);return m(i)&&r(n,function(e,t){"content-type"===Ur(t)&&delete n[t]}),m(t.withCredentials)&&!m(e.withCredentials)&&(t.withCredentials=e.withCredentials),v(t,i).then(l,l)}function l(e){var t=c({},e);return t.data=Vt(e.data,e.headers,e.status,p.transformResponse),Nt(e.status)?t:f.reject(t)}if(!y(n))throw t("$http")("badreq","Http request configuration must be an object.  Received: {0}",n);if(!w(n.url))throw t("$http")("badreq","Http request configuration url must be a string.  Received: {0}",n.url);var p=c({method:"get",transformRequest:e.transformRequest,transformResponse:e.transformResponse,paramSerializer:e.paramSerializer},n);p.headers=s(n),p.method=Fr(p.method),p.paramSerializer=w(p.paramSerializer)?h.get(p.paramSerializer):p.paramSerializer;var d=[],$=[],g=f.when(p);return r(C,function(e){(e.request||e.requestError)&&d.unshift(e.request,e.requestError),(e.response||e.responseError)&&$.push(e.response,e.responseError)}),g=o(g,d),g=g.then(u),g=o(g,$),i?(g.success=function(e){return fe(e,"fn"),g.then(function(t){e(t.data,t.status,t.headers,p)}),g},g.error=function(e){return fe(e,"fn"),g.then(null,function(t){e(t.data,t.status,t.headers,p)}),g}):(g.success=po("success"),g.error=po("error")),g}function d(e){r(arguments,function(e){p[e]=function(t,n){return p(c({},n||{},{method:e,url:t}))}})}function $(e){r(arguments,function(e){p[e]=function(t,n,r){return p(c({},r||{},{method:e,url:t,data:n}))}})}function v(t,i){function o(e){if(e){var t={};return r(e,function(e,r){t[r]=function(t){function r(){e(t)}n?l.$applyAsync(r):l.$$phase?r():l.$apply(r)}}),t}}function u(e,t,r,i){function o(){c(t,e,r,i)}$&&(Nt(e)?$.put(E,[e,t,Mt(r),i]):$.remove(E)),n?l.$applyAsync(o):(o(),l.$$phase||l.$apply())}function c(e,n,r,i){n=n>=-1?n:0,(Nt(n)?w.resolve:w.reject)({data:e,status:n,headers:Tt(r),config:t,statusText:i})}function h(e){c(e.data,e.status,me(e.headers()),e.statusText)}function d(){var e=p.pendingRequests.indexOf(t);e!==-1&&p.pendingRequests.splice(e,1)}var $,v,w=f.defer(),C=w.promise,S=t.headers,E=b(t.url,t.paramSerializer(t.params));if(p.pendingRequests.push(t),C.then(d,d),!t.cache&&!e.cache||t.cache===!1||"GET"!==t.method&&"JSONP"!==t.method||($=y(t.cache)?t.cache:y(e.cache)?e.cache:x),$&&(v=$.get(E),g(v)?N(v)?v.then(h,h):ri(v)?c(v[1],v[0],me(v[2]),v[3]):c(v,200,{},"OK"):$.put(E,C)),m(v)){var A=Pn(t.url)?s()[t.xsrfCookieName||e.xsrfCookieName]:void 0;A&&(S[t.xsrfHeaderName||e.xsrfHeaderName]=A),a(t.method,E,i,u,S,t.timeout,t.withCredentials,t.responseType,o(t.eventHandlers),o(t.uploadEventHandlers))}return C}function b(e,t){return t.length>0&&(e+=(e.indexOf("?")===-1?"?":"&")+t),e}var x=u("$http");e.paramSerializer=w(e.paramSerializer)?h.get(e.paramSerializer):e.paramSerializer;var C=[];return r(o,function(e){C.unshift(w(e)?h.get(e):h.invoke(e))}),p.pendingRequests=[],d("get","delete","head","jsonp"),$("post","put","patch"),p.defaults=e,p}]}function It(){this.$get=function(){return function(){return new e.XMLHttpRequest}}}function Dt(){this.$get=["$browser","$jsonpCallbacks","$document","$xhrFactory",function(e,t,n,r){return Pt(e,r,e.defer,t,n[0])}]}function Pt(e,t,n,i,o){function a(e,t,n){e=e.replace("JSON_CALLBACK",t);var r=o.createElement("script"),a=null;return r.type="text/javascript",r.src=e,r.async=!0,a=function(e){Si(r,"load",a),Si(r,"error",a),o.body.removeChild(r),r=null;var s=-1,u="unknown";e&&("load"!==e.type||i.wasCalled(t)||(e={type:"error"}),u=e.type,s="error"===e.type?404:200),n&&n(s,u)},Ci(r,"load",a),Ci(r,"error",a),o.body.appendChild(r),a}return function(o,s,u,c,l,f,h,d,$,v){function y(){x&&x(),C&&C.abort()}function b(t,r,i,o,a){g(E)&&n.cancel(E),x=C=null,t(r,i,o,a),e.$$completeOutstandingRequest(p)}if(e.$$incOutstandingRequestCount(),s=s||e.url(),"jsonp"===Ur(o))var w=i.createCallback(s),x=a(s,w,function(e,t){var n=200===e&&i.getResponse(w);b(c,e,n,"",t),i.removeCallback(w)});else{var C=t(o,s);C.open(o,s,!0),r(l,function(e,t){g(e)&&C.setRequestHeader(t,e)}),C.onload=function(){var e=C.statusText||"",t="response"in C?C.response:C.responseText,n=1223===C.status?204:C.status;0===n&&(n=t?200:"file"===Dn(s).protocol?404:0),b(c,n,t,C.getAllResponseHeaders(),e)};var S=function(){b(c,-1,null,null,"")};if(C.onerror=S,C.onabort=S,C.ontimeout=S,r($,function(e,t){C.addEventListener(t,e)}),r(v,function(e,t){C.upload.addEventListener(t,e)}),h&&(C.withCredentials=!0),d)try{C.responseType=d}catch(e){if("json"!==d)throw e}C.send(m(u)?null:u)}if(f>0)var E=n(y,f);else N(f)&&f.then(y)}}function Rt(){var e="{{",t="}}";this.startSymbol=function(t){return t?(e=t,this):e},this.endSymbol=function(e){return e?(t=e,this):t},this.$get=["$parse","$exceptionHandler","$sce",function(n,r,i){function o(e){return"\\\\\\"+e}function a(n){return n.replace(p,e).replace(d,t)}function s(e){if(null==e)return"";switch(typeof e){case"string":break;case"number":e=""+e;break;default:e=z(e)}return e}function u(e,t,n,r){var i=e.$watch(function(e){return i(),r(e)},t,n);return i}function l(o,l,p,d){function v(e){try{return e=N(e),d&&!g(e)?e:s(e)}catch(e){r($o.interr(o,e))}}if(!o.length||o.indexOf(e)===-1){var y;if(!l){var b=a(o);y=$(b),y.exp=o,y.expressions=[],y.$$watchDelegate=u}return y}d=!!d;for(var w,x,C,E=0,A=[],k=[],O=o.length,M=[],T=[];E<O;){if((w=o.indexOf(e,E))===-1||(x=o.indexOf(t,w+f))===-1){E!==O&&M.push(a(o.substring(E)));break}E!==w&&M.push(a(o.substring(E,w))),C=o.substring(w+f,x),A.push(C),k.push(n(C,v)),E=x+h,T.push(M.length),M.push("")}if(p&&M.length>1&&$o.throwNoconcat(o),!l||A.length){var V=function(e){for(var t=0,n=A.length;t<n;t++){if(d&&m(e[t]))return;M[T[t]]=e[t]}return M.join("")},N=function(e){return p?i.getTrusted(p,e):i.valueOf(e)};return c(function(e){var t=0,n=A.length,i=new Array(n);try{for(;t<n;t++)i[t]=k[t](e);return V(i)}catch(e){r($o.interr(o,e))}},{exp:o,expressions:A,$$watchDelegate:function(e,t){var n;return e.$watchGroup(k,function(r,i){var o=V(r);S(t)&&t.call(this,o,r!==i?n:o,e),n=o})}})}}var f=e.length,h=t.length,p=new RegExp(e.replace(/./g,o),"g"),d=new RegExp(t.replace(/./g,o),"g");return l.startSymbol=function(){return e},l.endSymbol=function(){return t},l}]}function _t(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(e,t,n,r,i){function o(o,s,u,c){function l(){f?o.apply(null,h):o($)}var f=arguments.length>4,h=f?L(arguments,4):[],p=t.setInterval,d=t.clearInterval,$=0,v=g(c)&&!c,m=(v?r:n).defer(),y=m.promise;return u=g(u)?u:0,y.$$intervalId=p(function(){v?i.defer(l):e.$evalAsync(l),m.notify($++),u>0&&$>=u&&(m.resolve($),d(y.$$intervalId),delete a[y.$$intervalId]),v||e.$apply()},s),a[y.$$intervalId]=m,y}var a={};return o.cancel=function(e){return!!(e&&e.$$intervalId in a)&&(a[e.$$intervalId].reject("canceled"),t.clearInterval(e.$$intervalId),delete a[e.$$intervalId],!0)},o}]}function qt(e){for(var t=e.split("/"),n=t.length;n--;)t[n]=ee(t[n]);return t.join("/")}function Ut(e,t){var n=Dn(e);t.$$protocol=n.protocol,t.$$host=n.hostname,t.$$port=f(n.port)||go[n.protocol]||null}function Ft(e,t){if(bo.test(e))throw yo("badpath",'Invalid url "{0}".',e);var n="/"!==e.charAt(0);n&&(e="/"+e);var r=Dn(e);t.$$path=decodeURIComponent(n&&"/"===r.pathname.charAt(0)?r.pathname.substring(1):r.pathname),t.$$search=X(r.search),t.$$hash=decodeURIComponent(r.hash),t.$$path&&"/"!==t.$$path.charAt(0)&&(t.$$path="/"+t.$$path)}function Lt(e,t){return 0===e.lastIndexOf(t,0)}function Ht(e,t){if(Lt(t,e))return t.substr(e.length)}function Bt(e){var t=e.indexOf("#");return t===-1?e:e.substr(0,t)}function zt(e){return e.replace(/(#.+)|#$/,"$1")}function Wt(e){return e.substr(0,Bt(e).lastIndexOf("/")+1)}function Gt(e){return e.substring(0,e.indexOf("/",e.indexOf("//")+2))}function Zt(e,t,n){this.$$html5=!0,n=n||"",Ut(e,this),this.$$parse=function(e){var n=Ht(t,e);if(!w(n))throw yo("ipthprfx",'Invalid url "{0}", missing path prefix "{1}".',e,t);Ft(n,this),this.$$path||(this.$$path="/"),this.$$compose()},this.$$compose=function(){var e=Q(this.$$search),n=this.$$hash?"#"+ee(this.$$hash):"";this.$$url=qt(this.$$path)+(e?"?"+e:"")+n,this.$$absUrl=t+this.$$url.substr(1)},this.$$parseLinkUrl=function(r,i){if(i&&"#"===i[0])return this.hash(i.slice(1)),!0;var o,a,s;return g(o=Ht(e,r))?(a=o,s=n&&g(o=Ht(n,o))?t+(Ht("/",o)||o):e+a):g(o=Ht(t,r))?s=t+o:t===r+"/"&&(s=t),s&&this.$$parse(s),!!s}}function Jt(e,t,n){Ut(e,this),this.$$parse=function(r){function i(e,t,n){var r,i=/^\/[A-Z]:(\/.*)/;return Lt(t,n)&&(t=t.replace(n,"")),i.exec(t)?e:(r=i.exec(e),r?r[1]:e)}var o,a=Ht(e,r)||Ht(t,r);m(a)||"#"!==a.charAt(0)?this.$$html5?o=a:(o="",m(a)&&(e=r,this.replace())):(o=Ht(n,a),m(o)&&(o=a)),Ft(o,this),this.$$path=i(this.$$path,o,e),this.$$compose()},this.$$compose=function(){var t=Q(this.$$search),r=this.$$hash?"#"+ee(this.$$hash):"";this.$$url=qt(this.$$path)+(t?"?"+t:"")+r,this.$$absUrl=e+(this.$$url?n+this.$$url:"")},this.$$parseLinkUrl=function(t,n){return Bt(e)===Bt(t)&&(this.$$parse(t),!0)}}function Yt(e,t,n){this.$$html5=!0,Jt.apply(this,arguments),this.$$parseLinkUrl=function(r,i){if(i&&"#"===i[0])return this.hash(i.slice(1)),!0;var o,a;return e===Bt(r)?o=r:(a=Ht(t,r))?o=e+n+a:t===r+"/"&&(o=t),o&&this.$$parse(o),!!o},this.$$compose=function(){var t=Q(this.$$search),r=this.$$hash?"#"+ee(this.$$hash):"";this.$$url=qt(this.$$path)+(t?"?"+t:"")+r,this.$$absUrl=e+n+this.$$url}}function Kt(e){return function(){return this[e]}}function Xt(e,t){return function(n){return m(n)?this[e]:(this[e]=t(n),this.$$compose(),this)}}function Qt(){var e="",t={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(t){return g(t)?(e=t,this):e},this.html5Mode=function(e){return V(e)?(t.enabled=e,this):y(e)?(V(e.enabled)&&(t.enabled=e.enabled),V(e.requireBase)&&(t.requireBase=e.requireBase),V(e.rewriteLinks)&&(t.rewriteLinks=e.rewriteLinks),this):t},this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(n,r,i,o,a){function s(e,t,n){var i=c.url(),o=c.$$state;try{r.url(e,t,n),c.$$state=r.state()}catch(e){throw c.url(i),c.$$state=o,e}}function u(e,t){n.$broadcast("$locationChangeSuccess",c.absUrl(),e,c.$$state,t)}var c,l,f,h=r.baseHref(),p=r.url();if(t.enabled){if(!h&&t.requireBase)throw yo("nobase","$location in HTML5 mode requires a <base> tag to be present!");f=Gt(p)+(h||"/"),l=i.history?Zt:Yt}else f=Bt(p),l=Jt;var d=Wt(f);c=new l(f,d,"#"+e),c.$$parseLinkUrl(p,p),c.$$state=r.state();var $=/^\s*(javascript|mailto):/i;o.on("click",function(e){if(t.rewriteLinks&&!e.ctrlKey&&!e.metaKey&&!e.shiftKey&&2!==e.which&&2!==e.button){for(var i=zr(e.target);"a"!==R(i[0]);)if(i[0]===o[0]||!(i=i.parent())[0])return;var s=i.prop("href"),u=i.attr("href")||i.attr("xlink:href");y(s)&&"[object SVGAnimatedString]"===s.toString()&&(s=Dn(s.animVal).href),$.test(s)||!s||i.attr("target")||e.isDefaultPrevented()||c.$$parseLinkUrl(s,u)&&(e.preventDefault(),c.absUrl()!==r.url()&&(n.$apply(),a.angular["ff-684208-preventDefault"]=!0))}}),zt(c.absUrl())!==zt(p)&&r.url(c.absUrl(),!0);var v=!0;return r.onUrlChange(function(e,t){return m(Ht(d,e))?void(a.location.href=e):(n.$evalAsync(function(){var r,i=c.absUrl(),o=c.$$state;e=zt(e),c.$$parse(e),c.$$state=t,r=n.$broadcast("$locationChangeStart",e,i,t,o).defaultPrevented,c.absUrl()===e&&(r?(c.$$parse(i),c.$$state=o,s(i,!1,o)):(v=!1,u(i,o)))}),void(n.$$phase||n.$digest()))}),n.$watch(function(){var e=zt(r.url()),t=zt(c.absUrl()),o=r.state(),a=c.$$replace,l=e!==t||c.$$html5&&i.history&&o!==c.$$state;(v||l)&&(v=!1,n.$evalAsync(function(){var t=c.absUrl(),r=n.$broadcast("$locationChangeStart",t,e,c.$$state,o).defaultPrevented;c.absUrl()===t&&(r?(c.$$parse(e),c.$$state=o):(l&&s(t,a,o===c.$$state?null:c.$$state),u(e,o)))})),c.$$replace=!1}),c}]}function en(){var e=!0,t=this;this.debugEnabled=function(t){return g(t)?(e=t,this):e},this.$get=["$window",function(n){function i(e){return e instanceof Error&&(e.stack?e=e.message&&e.stack.indexOf(e.message)===-1?"Error: "+e.message+"\n"+e.stack:e.stack:e.sourceURL&&(e=e.message+"\n"+e.sourceURL+":"+e.line)),e}function o(e){var t=n.console||{},o=t[e]||t.log||p,a=!1;try{a=!!o.apply}catch(e){}return a?function(){var e=[];return r(arguments,function(t){e.push(i(t))}),o.apply(t,e)}:function(e,t){o(e,null==t?"":t)}}return{log:o("log"),info:o("info"),warn:o("warn"),error:o("error"),debug:function(){var n=o("debug");return function(){e&&n.apply(t,arguments)}}()}}]}function tn(e,t){if("__defineGetter__"===e||"__defineSetter__"===e||"__lookupGetter__"===e||"__lookupSetter__"===e||"__proto__"===e)throw xo("isecfld","Attempting to access a disallowed field in Angular expressions! Expression: {0}",t);return e}function nn(e){return e+""}function rn(e,t){if(e){if(e.constructor===e)throw xo("isecfn","Referencing Function in Angular expressions is disallowed! Expression: {0}",t);if(e.window===e)throw xo("isecwindow","Referencing the Window in Angular expressions is disallowed! Expression: {0}",t);if(e.children&&(e.nodeName||e.prop&&e.attr&&e.find))throw xo("isecdom","Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}",t);if(e===Object)throw xo("isecobj","Referencing Object in Angular expressions is disallowed! Expression: {0}",t)}return e}function on(e,t){if(e){if(e.constructor===e)throw xo("isecfn","Referencing Function in Angular expressions is disallowed! Expression: {0}",t);if(e===Do||e===Po||e===Ro)throw xo("isecff","Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}",t)}}function an(e,t){if(e&&(e===Co||e===So||e===Eo||e===Ao||e===ko||e===Oo||e===Mo||e===To||e===Vo||e===No||e===jo||e===Io))throw xo("isecaf","Assigning to a constructor or its prototype is disallowed! Expression: {0}",t)}function sn(e,t){return"undefined"!=typeof e?e:t}function un(e,t){return"undefined"==typeof e?t:"undefined"==typeof t?e:e+t}function cn(e,t){var n=e(t);return!n.$stateful}function ln(e,t){var n,i,o;switch(e.type){case Lo.Program:n=!0,r(e.body,function(e){ln(e.expression,t),
n=n&&e.expression.constant}),e.constant=n;break;case Lo.Literal:e.constant=!0,e.toWatch=[];break;case Lo.UnaryExpression:ln(e.argument,t),e.constant=e.argument.constant,e.toWatch=e.argument.toWatch;break;case Lo.BinaryExpression:ln(e.left,t),ln(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=e.left.toWatch.concat(e.right.toWatch);break;case Lo.LogicalExpression:ln(e.left,t),ln(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=e.constant?[]:[e];break;case Lo.ConditionalExpression:ln(e.test,t),ln(e.alternate,t),ln(e.consequent,t),e.constant=e.test.constant&&e.alternate.constant&&e.consequent.constant,e.toWatch=e.constant?[]:[e];break;case Lo.Identifier:e.constant=!1,e.toWatch=[e];break;case Lo.MemberExpression:ln(e.object,t),e.computed&&ln(e.property,t),e.constant=e.object.constant&&(!e.computed||e.property.constant),e.toWatch=[e];break;case Lo.CallExpression:o=!!e.filter&&cn(t,e.callee.name),n=o,i=[],r(e.arguments,function(e){ln(e,t),n=n&&e.constant,e.constant||i.push.apply(i,e.toWatch)}),e.constant=n,e.toWatch=o?i:[e];break;case Lo.AssignmentExpression:ln(e.left,t),ln(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=[e];break;case Lo.ArrayExpression:n=!0,i=[],r(e.elements,function(e){ln(e,t),n=n&&e.constant,e.constant||i.push.apply(i,e.toWatch)}),e.constant=n,e.toWatch=i;break;case Lo.ObjectExpression:n=!0,i=[],r(e.properties,function(e){ln(e.value,t),n=n&&e.value.constant&&!e.computed,e.value.constant||i.push.apply(i,e.value.toWatch)}),e.constant=n,e.toWatch=i;break;case Lo.ThisExpression:e.constant=!1,e.toWatch=[];break;case Lo.LocalsExpression:e.constant=!1,e.toWatch=[]}}function fn(e){if(1===e.length){var t=e[0].expression,n=t.toWatch;return 1!==n.length?n:n[0]!==t?n:void 0}}function hn(e){return e.type===Lo.Identifier||e.type===Lo.MemberExpression}function pn(e){if(1===e.body.length&&hn(e.body[0].expression))return{type:Lo.AssignmentExpression,left:e.body[0].expression,right:{type:Lo.NGValueParameter},operator:"="}}function dn(e){return 0===e.body.length||1===e.body.length&&(e.body[0].expression.type===Lo.Literal||e.body[0].expression.type===Lo.ArrayExpression||e.body[0].expression.type===Lo.ObjectExpression)}function $n(e){return e.constant}function vn(e,t){this.astBuilder=e,this.$filter=t}function mn(e,t){this.astBuilder=e,this.$filter=t}function gn(e){return"constructor"===e}function yn(e){return S(e.valueOf)?e.valueOf():_o.call(e)}function bn(){var e,t,n=$e(),i=$e(),o={true:!0,false:!1,null:null,undefined:void 0};this.addLiteral=function(e,t){o[e]=t},this.setIdentifierFns=function(n,r){return e=n,t=r,this},this.$get=["$filter",function(a){function s(e,t,r){var o,s,c;switch(r=r||b,typeof e){case"string":e=e.trim(),c=e;var v=r?i:n;if(o=v[c],!o){":"===e.charAt(0)&&":"===e.charAt(1)&&(s=!0,e=e.substring(2));var g=r?y:m,w=new Fo(g),x=new Ho(w,a,g);o=x.parse(e),o.constant?o.$$watchDelegate=d:s?o.$$watchDelegate=o.literal?h:f:o.inputs&&(o.$$watchDelegate=l),r&&(o=u(o)),v[c]=o}return $(o,t);case"function":return $(e,t);default:return $(p,t)}}function u(e){function t(t,n,r,i){var o=b;b=!0;try{return e(t,n,r,i)}finally{b=o}}if(!e)return e;t.$$watchDelegate=e.$$watchDelegate,t.assign=u(e.assign),t.constant=e.constant,t.literal=e.literal;for(var n=0;e.inputs&&n<e.inputs.length;++n)e.inputs[n]=u(e.inputs[n]);return t.inputs=e.inputs,t}function c(e,t){return null==e||null==t?e===t:("object"!=typeof e||(e=yn(e),"object"!=typeof e))&&(e===t||e!==e&&t!==t)}function l(e,t,n,r,i){var o,a=r.inputs;if(1===a.length){var s=c;return a=a[0],e.$watch(function(e){var t=a(e);return c(t,s)||(o=r(e,void 0,void 0,[t]),s=t&&yn(t)),o},t,n,i)}for(var u=[],l=[],f=0,h=a.length;f<h;f++)u[f]=c,l[f]=null;return e.$watch(function(e){for(var t=!1,n=0,i=a.length;n<i;n++){var s=a[n](e);(t||(t=!c(s,u[n])))&&(l[n]=s,u[n]=s&&yn(s))}return t&&(o=r(e,void 0,void 0,l)),o},t,n,i)}function f(e,t,n,r){var i,o;return i=e.$watch(function(e){return r(e)},function(e,n,r){o=e,S(t)&&t.apply(this,arguments),g(e)&&r.$$postDigest(function(){g(o)&&i()})},n)}function h(e,t,n,i){function o(e){var t=!0;return r(e,function(e){g(e)||(t=!1)}),t}var a,s;return a=e.$watch(function(e){return i(e)},function(e,n,r){s=e,S(t)&&t.call(this,e,n,r),o(e)&&r.$$postDigest(function(){o(s)&&a()})},n)}function d(e,t,n,r){var i=e.$watch(function(e){return i(),r(e)},t,n);return i}function $(e,t){if(!t)return e;var n=e.$$watchDelegate,r=!1,i=n!==h&&n!==f,o=i?function(n,i,o,a){var s=r&&a?a[0]:e(n,i,o,a);return t(s,n,i)}:function(n,r,i,o){var a=e(n,r,i,o),s=t(a,n,r);return g(a)?s:a};return e.$$watchDelegate&&e.$$watchDelegate!==l?o.$$watchDelegate=e.$$watchDelegate:t.$stateful||(o.$$watchDelegate=l,r=!e.inputs,o.inputs=e.inputs?e.inputs:[e]),o}var v=si().noUnsafeEval,m={csp:v,expensiveChecks:!1,literals:q(o),isIdentifierStart:S(e)&&e,isIdentifierContinue:S(t)&&t},y={csp:v,expensiveChecks:!0,literals:q(o),isIdentifierStart:S(e)&&e,isIdentifierContinue:S(t)&&t},b=!1;return s.$$runningExpensiveChecks=function(){return b},s}]}function wn(){this.$get=["$rootScope","$exceptionHandler",function(e,t){return Cn(function(t){e.$evalAsync(t)},t)}]}function xn(){this.$get=["$browser","$exceptionHandler",function(e,t){return Cn(function(t){e.defer(t)},t)}]}function Cn(e,n){function i(){this.$$state={status:0}}function o(e,t){return function(n){t.call(e,n)}}function a(e){var t,r,i;i=e.pending,e.processScheduled=!1,e.pending=void 0;for(var o=0,a=i.length;o<a;++o){r=i[o][0],t=i[o][e.status];try{S(t)?r.resolve(t(e.value)):1===e.status?r.resolve(e.value):r.reject(e.value)}catch(e){r.reject(e),n(e)}}}function s(t){!t.processScheduled&&t.pending&&(t.processScheduled=!0,e(function(){a(t)}))}function u(){this.promise=new i}function l(e){var t=new u,n=0,i=ri(e)?[]:{};return r(e,function(e,r){n++,g(e).then(function(e){i.hasOwnProperty(r)||(i[r]=e,--n||t.resolve(i))},function(e){i.hasOwnProperty(r)||t.reject(e)})}),0===n&&t.resolve(i),t.promise}function f(e){var t=p();return r(e,function(e){g(e).then(t.resolve,t.reject)}),t.promise}var h=t("$q",TypeError),p=function(){var e=new u;return e.resolve=o(e,e.resolve),e.reject=o(e,e.reject),e.notify=o(e,e.notify),e};c(i.prototype,{then:function(e,t,n){if(m(e)&&m(t)&&m(n))return this;var r=new u;return this.$$state.pending=this.$$state.pending||[],this.$$state.pending.push([r,e,t,n]),this.$$state.status>0&&s(this.$$state),r.promise},catch:function(e){return this.then(null,e)},finally:function(e,t){return this.then(function(t){return v(t,!0,e)},function(t){return v(t,!1,e)},t)}}),c(u.prototype,{resolve:function(e){this.promise.$$state.status||(e===this.promise?this.$$reject(h("qcycle","Expected promise to be resolved with value other than itself '{0}'",e)):this.$$resolve(e))},$$resolve:function(e){function t(e){u||(u=!0,a.$$resolve(e))}function r(e){u||(u=!0,a.$$reject(e))}var i,a=this,u=!1;try{(y(e)||S(e))&&(i=e&&e.then),S(i)?(this.promise.$$state.status=-1,i.call(e,t,r,o(this,this.notify))):(this.promise.$$state.value=e,this.promise.$$state.status=1,s(this.promise.$$state))}catch(e){r(e),n(e)}},reject:function(e){this.promise.$$state.status||this.$$reject(e)},$$reject:function(e){this.promise.$$state.value=e,this.promise.$$state.status=2,s(this.promise.$$state)},notify:function(t){var r=this.promise.$$state.pending;this.promise.$$state.status<=0&&r&&r.length&&e(function(){for(var e,i,o=0,a=r.length;o<a;o++){i=r[o][0],e=r[o][3];try{i.notify(S(e)?e(t):t)}catch(e){n(e)}}})}});var d=function(e){var t=new u;return t.reject(e),t.promise},$=function(e,t){var n=new u;return t?n.resolve(e):n.reject(e),n.promise},v=function(e,t,n){var r=null;try{S(n)&&(r=n())}catch(e){return $(e,!1)}return N(r)?r.then(function(){return $(e,t)},function(e){return $(e,!1)}):$(e,t)},g=function(e,t,n,r){var i=new u;return i.resolve(e),i.promise.then(t,n,r)},b=g,w=function(e){function t(e){r.resolve(e)}function n(e){r.reject(e)}if(!S(e))throw h("norslvr","Expected resolverFn, got '{0}'",e);var r=new u;return e(t,n),r.promise};return w.prototype=i.prototype,w.defer=p,w.reject=d,w.when=g,w.resolve=b,w.all=l,w.race=f,w}function Sn(){this.$get=["$window","$timeout",function(e,t){var n=e.requestAnimationFrame||e.webkitRequestAnimationFrame,r=e.cancelAnimationFrame||e.webkitCancelAnimationFrame||e.webkitCancelRequestAnimationFrame,i=!!n,o=i?function(e){var t=n(e);return function(){r(t)}}:function(e){var n=t(e,16.66,!1);return function(){t.cancel(n)}};return o.supported=i,o}]}function En(){function e(e){function t(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$id=a(),this.$$ChildScope=null}return t.prototype=e,t}var i=10,o=t("$rootScope"),s=null,u=null;this.digestTtl=function(e){return arguments.length&&(i=e),i},this.$get=["$exceptionHandler","$parse","$browser",function(t,c,l){function f(e){e.currentScope.$$destroyed=!0}function h(e){9===Br&&(e.$$childHead&&h(e.$$childHead),e.$$nextSibling&&h(e.$$nextSibling)),e.$parent=e.$$nextSibling=e.$$prevSibling=e.$$childHead=e.$$childTail=e.$root=e.$$watchers=null}function d(){this.$id=a(),this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null,this.$root=this,this.$$destroyed=!1,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$$isolateBindings=null}function $(e){if(E.$$phase)throw o("inprog","{0} already in progress",E.$$phase);E.$$phase=e}function v(){E.$$phase=null}function g(e,t){do e.$$watchersCount+=t;while(e=e.$parent)}function b(e,t,n){do e.$$listenerCount[n]-=t,0===e.$$listenerCount[n]&&delete e.$$listenerCount[n];while(e=e.$parent)}function w(){}function x(){for(;O.length;)try{O.shift()()}catch(e){t(e)}u=null}function C(){null===u&&(u=l.defer(function(){E.$apply(x)}))}d.prototype={constructor:d,$new:function(t,n){var r;return n=n||this,t?(r=new d,r.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=e(this)),r=new this.$$ChildScope),r.$parent=n,r.$$prevSibling=n.$$childTail,n.$$childHead?(n.$$childTail.$$nextSibling=r,n.$$childTail=r):n.$$childHead=n.$$childTail=r,(t||n!==this)&&r.$on("$destroy",f),r},$watch:function(e,t,n,r){var i=c(e);if(i.$$watchDelegate)return i.$$watchDelegate(this,t,n,i,e);var o=this,a=o.$$watchers,u={fn:t,last:w,get:i,exp:r||e,eq:!!n};return s=null,S(t)||(u.fn=p),a||(a=o.$$watchers=[]),a.unshift(u),g(this,1),function(){_(a,u)>=0&&g(o,-1),s=null}},$watchGroup:function(e,t){function n(){u=!1,c?(c=!1,t(o,o,s)):t(o,i,s)}var i=new Array(e.length),o=new Array(e.length),a=[],s=this,u=!1,c=!0;if(!e.length){var l=!0;return s.$evalAsync(function(){l&&t(o,o,s)}),function(){l=!1}}return 1===e.length?this.$watch(e[0],function(e,n,r){o[0]=e,i[0]=n,t(o,e===n?o:i,r)}):(r(e,function(e,t){var r=s.$watch(e,function(e,r){o[t]=e,i[t]=r,u||(u=!0,s.$evalAsync(n))});a.push(r)}),function(){for(;a.length;)a.shift()()})},$watchCollection:function(e,t){function r(e){o=e;var t,r,i,s,u;if(!m(o)){if(y(o))if(n(o)){a!==p&&(a=p,v=a.length=0,f++),t=o.length,v!==t&&(f++,a.length=v=t);for(var c=0;c<t;c++)u=a[c],s=o[c],i=u!==u&&s!==s,i||u===s||(f++,a[c]=s)}else{a!==d&&(a=d={},v=0,f++),t=0;for(r in o)qr.call(o,r)&&(t++,s=o[r],u=a[r],r in a?(i=u!==u&&s!==s,i||u===s||(f++,a[r]=s)):(v++,a[r]=s,f++));if(v>t){f++;for(r in a)qr.call(o,r)||(v--,delete a[r])}}else a!==o&&(a=o,f++);return f}}function i(){if($?($=!1,t(o,o,u)):t(o,s,u),l)if(y(o))if(n(o)){s=new Array(o.length);for(var e=0;e<o.length;e++)s[e]=o[e]}else{s={};for(var r in o)qr.call(o,r)&&(s[r]=o[r])}else s=o}r.$stateful=!0;var o,a,s,u=this,l=t.length>1,f=0,h=c(e,r),p=[],d={},$=!0,v=0;return this.$watch(h,i)},$digest:function(){var e,n,r,a,c,f,h,p,d,m,g,y,b=i,C=this,O=[];$("$digest"),l.$$checkUrlChange(),this===E&&null!==u&&(l.defer.cancel(u),x()),s=null;do{p=!1,m=C;for(var T=0;T<A.length;T++){try{y=A[T],y.scope.$eval(y.expression,y.locals)}catch(e){t(e)}s=null}A.length=0;e:do{if(f=m.$$watchers)for(h=f.length;h--;)try{if(e=f[h])if(c=e.get,(n=c(m))===(r=e.last)||(e.eq?U(n,r):ni(n)&&ni(r))){if(e===s){p=!1;break e}}else p=!0,s=e,e.last=e.eq?q(n,null):n,a=e.fn,a(n,r===w?n:r,m),b<5&&(g=4-b,O[g]||(O[g]=[]),O[g].push({msg:S(e.exp)?"fn: "+(e.exp.name||e.exp.toString()):e.exp,newVal:n,oldVal:r}))}catch(e){t(e)}if(!(d=m.$$watchersCount&&m.$$childHead||m!==C&&m.$$nextSibling))for(;m!==C&&!(d=m.$$nextSibling);)m=m.$parent}while(m=d);if((p||A.length)&&!b--)throw v(),o("infdig","{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iterations: {1}",i,O)}while(p||A.length);for(v();M<k.length;)try{k[M++]()}catch(e){t(e)}k.length=M=0},$destroy:function(){if(!this.$$destroyed){var e=this.$parent;this.$broadcast("$destroy"),this.$$destroyed=!0,this===E&&l.$$applicationDestroyed(),g(this,-this.$$watchersCount);for(var t in this.$$listenerCount)b(this,this.$$listenerCount[t],t);e&&e.$$childHead===this&&(e.$$childHead=this.$$nextSibling),e&&e.$$childTail===this&&(e.$$childTail=this.$$prevSibling),this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling),this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling),this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=p,this.$on=this.$watch=this.$watchGroup=function(){return p},this.$$listeners={},this.$$nextSibling=null,h(this)}},$eval:function(e,t){return c(e)(this,t)},$evalAsync:function(e,t){E.$$phase||A.length||l.defer(function(){A.length&&E.$digest()}),A.push({scope:this,expression:c(e),locals:t})},$$postDigest:function(e){k.push(e)},$apply:function(e){try{$("$apply");try{return this.$eval(e)}finally{v()}}catch(e){t(e)}finally{try{E.$digest()}catch(e){throw t(e),e}}},$applyAsync:function(e){function t(){n.$eval(e)}var n=this;e&&O.push(t),e=c(e),C()},$on:function(e,t){var n=this.$$listeners[e];n||(this.$$listeners[e]=n=[]),n.push(t);var r=this;do r.$$listenerCount[e]||(r.$$listenerCount[e]=0),r.$$listenerCount[e]++;while(r=r.$parent);var i=this;return function(){var r=n.indexOf(t);r!==-1&&(n[r]=null,b(i,1,e))}},$emit:function(e,n){var r,i,o,a=[],s=this,u=!1,c={name:e,targetScope:s,stopPropagation:function(){u=!0},preventDefault:function(){c.defaultPrevented=!0},defaultPrevented:!1},l=F([c],arguments,1);do{for(r=s.$$listeners[e]||a,c.currentScope=s,i=0,o=r.length;i<o;i++)if(r[i])try{r[i].apply(null,l)}catch(e){t(e)}else r.splice(i,1),i--,o--;if(u)return c.currentScope=null,c;s=s.$parent}while(s);return c.currentScope=null,c},$broadcast:function(e,n){var r=this,i=r,o=r,a={name:e,targetScope:r,preventDefault:function(){a.defaultPrevented=!0},defaultPrevented:!1};if(!r.$$listenerCount[e])return a;for(var s,u,c,l=F([a],arguments,1);i=o;){for(a.currentScope=i,s=i.$$listeners[e]||[],u=0,c=s.length;u<c;u++)if(s[u])try{s[u].apply(null,l)}catch(e){t(e)}else s.splice(u,1),u--,c--;if(!(o=i.$$listenerCount[e]&&i.$$childHead||i!==r&&i.$$nextSibling))for(;i!==r&&!(o=i.$$nextSibling);)i=i.$parent}return a.currentScope=null,a}};var E=new d,A=E.$$asyncQueue=[],k=E.$$postDigestQueue=[],O=E.$$applyAsyncQueue=[],M=0;return E}]}function An(){var e=/^\s*(https?|ftp|mailto|tel|file):/,t=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(t){return g(t)?(e=t,this):e},this.imgSrcSanitizationWhitelist=function(e){return g(e)?(t=e,this):t},this.$get=function(){return function(n,r){var i,o=r?t:e;return i=Dn(n).href,""===i||i.match(o)?n:"unsafe:"+i}}}function kn(e){if("self"===e)return e;if(w(e)){if(e.indexOf("***")>-1)throw Bo("iwcard","Illegal sequence *** in string matcher.  String: {0}",e);return e=ai(e).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*"),new RegExp("^"+e+"$")}if(E(e))return new RegExp("^"+e.source+"$");throw Bo("imatcher",'Matchers may only be "self", string patterns or RegExp objects')}function On(e){var t=[];return g(e)&&r(e,function(e){t.push(kn(e))}),t}function Mn(){this.SCE_CONTEXTS=zo;var e=["self"],t=[];this.resourceUrlWhitelist=function(t){return arguments.length&&(e=On(t)),e},this.resourceUrlBlacklist=function(e){return arguments.length&&(t=On(e)),t},this.$get=["$injector",function(n){function r(e,t){return"self"===e?Pn(t):!!e.exec(t.href)}function i(n){var i,o,a=Dn(n.toString()),s=!1;for(i=0,o=e.length;i<o;i++)if(r(e[i],a)){s=!0;break}if(s)for(i=0,o=t.length;i<o;i++)if(r(t[i],a)){s=!1;break}return s}function o(e){var t=function(e){this.$$unwrapTrustedValue=function(){return e}};return e&&(t.prototype=new e),t.prototype.valueOf=function(){return this.$$unwrapTrustedValue()},t.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()},t}function a(e,t){var n=f.hasOwnProperty(e)?f[e]:null;if(!n)throw Bo("icontext","Attempted to trust a value in invalid context. Context: {0}; Value: {1}",e,t);if(null===t||m(t)||""===t)return t;if("string"!=typeof t)throw Bo("itype","Attempted to trust a non-string value in a content requiring a string: Context: {0}",e);return new n(t)}function s(e){return e instanceof l?e.$$unwrapTrustedValue():e}function u(e,t){if(null===t||m(t)||""===t)return t;var n=f.hasOwnProperty(e)?f[e]:null;if(n&&t instanceof n)return t.$$unwrapTrustedValue();if(e===zo.RESOURCE_URL){if(i(t))return t;throw Bo("insecurl","Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}",t.toString())}if(e===zo.HTML)return c(t);throw Bo("unsafe","Attempting to use an unsafe value in a safe context.")}var c=function(e){throw Bo("unsafe","Attempting to use an unsafe value in a safe context.")};n.has("$sanitize")&&(c=n.get("$sanitize"));var l=o(),f={};return f[zo.HTML]=o(l),f[zo.CSS]=o(l),f[zo.URL]=o(l),f[zo.JS]=o(l),f[zo.RESOURCE_URL]=o(f[zo.URL]),{trustAs:a,getTrusted:u,valueOf:s}}]}function Tn(){var e=!0;this.enabled=function(t){return arguments.length&&(e=!!t),e},this.$get=["$parse","$sceDelegate",function(t,n){if(e&&Br<8)throw Bo("iequirks","Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks mode.  You can fix this by adding the text <!doctype html> to the top of your HTML document.  See http://docs.angularjs.org/api/ng.$sce for more information.");var i=me(zo);i.isEnabled=function(){return e},i.trustAs=n.trustAs,i.getTrusted=n.getTrusted,i.valueOf=n.valueOf,e||(i.trustAs=i.getTrusted=function(e,t){return t},i.valueOf=d),i.parseAs=function(e,n){var r=t(n);return r.literal&&r.constant?r:t(n,function(t){return i.getTrusted(e,t)})};var o=i.parseAs,a=i.getTrusted,s=i.trustAs;return r(zo,function(e,t){var n=Ur(t);i[xe("parse_as_"+n)]=function(t){return o(e,t)},i[xe("get_trusted_"+n)]=function(t){return a(e,t)},i[xe("trust_as_"+n)]=function(t){return s(e,t)}}),i}]}function Vn(){this.$get=["$window","$document",function(e,t){var n,r,i={},o=e.chrome&&(e.chrome.app&&e.chrome.app.runtime||!e.chrome.app&&e.chrome.runtime&&e.chrome.runtime.id),a=!o&&e.history&&e.history.pushState,s=f((/android (\d+)/.exec(Ur((e.navigator||{}).userAgent))||[])[1]),u=/Boxee/i.test((e.navigator||{}).userAgent),c=t[0]||{},l=/^(Moz|webkit|ms)(?=[A-Z])/,h=c.body&&c.body.style,p=!1,d=!1;if(h){for(var $ in h)if(r=l.exec($)){n=r[0],n=n[0].toUpperCase()+n.substr(1);break}n||(n="WebkitOpacity"in h&&"webkit"),p=!!("transition"in h||n+"Transition"in h),d=!!("animation"in h||n+"Animation"in h),!s||p&&d||(p=w(h.webkitTransition),d=w(h.webkitAnimation))}return{history:!(!a||s<4||u),hasEvent:function(e){if("input"===e&&Br<=11)return!1;if(m(i[e])){var t=c.createElement("div");i[e]="on"+e in t}return i[e]},csp:si(),vendorPrefix:n,transitions:p,animations:d,android:s}}]}function Nn(){var e;this.httpOptions=function(t){return t?(e=t,this):e},this.$get=["$templateCache","$http","$q","$sce",function(t,n,r,i){function o(a,s){function u(e){if(!s)throw Wo("tpload","Failed to load template: {0} (HTTP status: {1} {2})",a,e.status,e.statusText);return r.reject(e)}o.totalPendingRequests++,w(a)&&!m(t.get(a))||(a=i.getTrustedResourceUrl(a));var l=n.defaults&&n.defaults.transformResponse;return ri(l)?l=l.filter(function(e){return e!==kt}):l===kt&&(l=null),n.get(a,c({cache:t,transformResponse:l},e)).finally(function(){o.totalPendingRequests--}).then(function(e){return t.put(a,e.data),e.data},u)}return o.totalPendingRequests=0,o}]}function jn(){this.$get=["$rootScope","$browser","$location",function(e,t,n){var i={};return i.findBindings=function(e,t,n){var i=e.getElementsByClassName("ng-binding"),o=[];return r(i,function(e){var i=ei.element(e).data("$binding");i&&r(i,function(r){if(n){var i=new RegExp("(^|\\s)"+ai(t)+"(\\s|\\||$)");i.test(r)&&o.push(e)}else r.indexOf(t)!==-1&&o.push(e)})}),o},i.findModels=function(e,t,n){for(var r=["ng-","data-ng-","ng\\:"],i=0;i<r.length;++i){var o=n?"=":"*=",a="["+r[i]+"model"+o+'"'+t+'"]',s=e.querySelectorAll(a);if(s.length)return s}},i.getLocation=function(){return n.url()},i.setLocation=function(t){t!==n.url()&&(n.url(t),e.$digest())},i.whenStable=function(e){t.notifyWhenNoOutstandingRequests(e)},i}]}function In(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(e,t,n,r,i){function o(o,s,u){S(o)||(u=s,s=o,o=p);var c,l=L(arguments,3),f=g(u)&&!u,h=(f?r:n).defer(),d=h.promise;return c=t.defer(function(){try{h.resolve(o.apply(null,l))}catch(e){h.reject(e),i(e)}finally{delete a[d.$$timeoutId]}f||e.$apply()},s),d.$$timeoutId=c,a[c]=h,d}var a={};return o.cancel=function(e){return!!(e&&e.$$timeoutId in a)&&(a[e.$$timeoutId].reject("canceled"),delete a[e.$$timeoutId],t.defer.cancel(e.$$timeoutId))},o}]}function Dn(e){var t=e;return Br&&(Go.setAttribute("href",t),t=Go.href),Go.setAttribute("href",t),{href:Go.href,protocol:Go.protocol?Go.protocol.replace(/:$/,""):"",host:Go.host,search:Go.search?Go.search.replace(/^\?/,""):"",hash:Go.hash?Go.hash.replace(/^#/,""):"",hostname:Go.hostname,port:Go.port,pathname:"/"===Go.pathname.charAt(0)?Go.pathname:"/"+Go.pathname}}function Pn(e){var t=w(e)?Dn(e):e;return t.protocol===Zo.protocol&&t.host===Zo.host}function Rn(){this.$get=$(e)}function _n(e){function t(e){try{return decodeURIComponent(e)}catch(t){return e}}var n=e[0]||{},r={},i="";return function(){var e,o,a,s,u,c=n.cookie||"";if(c!==i)for(i=c,e=i.split("; "),r={},a=0;a<e.length;a++)o=e[a],s=o.indexOf("="),s>0&&(u=t(o.substring(0,s)),m(r[u])&&(r[u]=t(o.substring(s+1))));return r}}function qn(){this.$get=_n}function Un(e){function t(i,o){if(y(i)){var a={};return r(i,function(e,n){a[n]=t(n,e)}),a}return e.factory(i+n,o)}var n="Filter";this.register=t,this.$get=["$injector",function(e){return function(t){return e.get(t+n)}}],t("currency",zn),t("date",ar),t("filter",Fn),t("json",sr),t("limitTo",ur),t("lowercase",ta),t("number",Wn),t("orderBy",lr),t("uppercase",na)}function Fn(){return function(e,r,i,o){if(!n(e)){if(null==e)return e;throw t("filter")("notarray","Expected array but received: {0}",e)}o=o||"$";var a,s,u=Bn(r);switch(u){case"function":a=r;break;case"boolean":case"null":case"number":case"string":s=!0;case"object":a=Ln(r,i,o,s);break;default:return e}return Array.prototype.filter.call(e,a)}}function Ln(e,t,n,r){var i,o=y(e)&&n in e;return t===!0?t=U:S(t)||(t=function(e,t){return!m(e)&&(null===e||null===t?e===t:!(y(t)||y(e)&&!v(e))&&(e=Ur(""+e),t=Ur(""+t),e.indexOf(t)!==-1))}),i=function(i){return o&&!y(i)?Hn(i,e[n],t,n,!1):Hn(i,e,t,n,r)}}function Hn(e,t,n,r,i,o){var a=Bn(e),s=Bn(t);if("string"===s&&"!"===t.charAt(0))return!Hn(e,t.substring(1),n,r,i);if(ri(e))return e.some(function(e){return Hn(e,t,n,r,i)});switch(a){case"object":var u;if(i){for(u in e)if("$"!==u.charAt(0)&&Hn(e[u],t,n,r,!0))return!0;return!o&&Hn(e,t,n,r,!1)}if("object"===s){for(u in t){var c=t[u];if(!S(c)&&!m(c)){var l=u===r,f=l?e:e[u];if(!Hn(f,c,n,r,l,l))return!1}}return!0}return n(e,t);case"function":return!1;default:return n(e,t)}}function Bn(e){return null===e?"null":typeof e}function zn(e){var t=e.NUMBER_FORMATS;return function(e,n,r){return m(n)&&(n=t.CURRENCY_SYM),m(r)&&(r=t.PATTERNS[1].maxFrac),null==e?e:Jn(e,t.PATTERNS[1],t.GROUP_SEP,t.DECIMAL_SEP,r).replace(/\u00A4/g,n)}}function Wn(e){var t=e.NUMBER_FORMATS;return function(e,n){return null==e?e:Jn(e,t.PATTERNS[0],t.GROUP_SEP,t.DECIMAL_SEP,n)}}function Gn(e){var t,n,r,i,o,a=0;for((n=e.indexOf(Yo))>-1&&(e=e.replace(Yo,"")),(r=e.search(/e/i))>0?(n<0&&(n=r),n+=+e.slice(r+1),e=e.substring(0,r)):n<0&&(n=e.length),r=0;e.charAt(r)===Ko;r++);if(r===(o=e.length))t=[0],n=1;else{for(o--;e.charAt(o)===Ko;)o--;for(n-=r,t=[],i=0;r<=o;r++,i++)t[i]=+e.charAt(r)}return n>Jo&&(t=t.splice(0,Jo-1),a=n-1,n=1),{d:t,e:a,i:n}}function Zn(e,t,n,r){var i=e.d,o=i.length-e.i;t=m(t)?Math.min(Math.max(n,o),r):+t;var a=t+e.i,s=i[a];if(a>0){i.splice(Math.max(e.i,a));for(var u=a;u<i.length;u++)i[u]=0}else{o=Math.max(0,o),e.i=1,i.length=Math.max(1,a=t+1),i[0]=0;for(var c=1;c<a;c++)i[c]=0}if(s>=5)if(a-1<0){for(var l=0;l>a;l--)i.unshift(0),e.i++;i.unshift(1),e.i++}else i[a-1]++;for(;o<Math.max(0,t);o++)i.push(0);var f=i.reduceRight(function(e,t,n,r){return t+=e,r[n]=t%10,Math.floor(t/10)},0);f&&(i.unshift(f),e.i++)}function Jn(e,t,n,r,i){if(!w(e)&&!x(e)||isNaN(e))return"";var o,a=!isFinite(e),s=!1,u=Math.abs(e)+"",c="";if(a)c="∞";else{o=Gn(u),Zn(o,i,t.minFrac,t.maxFrac);var l=o.d,f=o.i,h=o.e,p=[];for(s=l.reduce(function(e,t){return e&&!t},!0);f<0;)l.unshift(0),f++;f>0?p=l.splice(f,l.length):(p=l,l=[0]);var d=[];for(l.length>=t.lgSize&&d.unshift(l.splice(-t.lgSize,l.length).join(""));l.length>t.gSize;)d.unshift(l.splice(-t.gSize,l.length).join(""));l.length&&d.unshift(l.join("")),c=d.join(n),p.length&&(c+=r+p.join("")),h&&(c+="e+"+h)}return e<0&&!s?t.negPre+c+t.negSuf:t.posPre+c+t.posSuf}function Yn(e,t,n,r){var i="";for((e<0||r&&e<=0)&&(r?e=-e+1:(e=-e,i="-")),e=""+e;e.length<t;)e=Ko+e;return n&&(e=e.substr(e.length-t)),i+e}function Kn(e,t,n,r,i){return n=n||0,function(o){var a=o["get"+e]();return(n>0||a>-n)&&(a+=n),0===a&&n===-12&&(a=12),Yn(a,t,r,i)}}function Xn(e,t,n){return function(r,i){var o=r["get"+e](),a=(n?"STANDALONE":"")+(t?"SHORT":""),s=Fr(a+e);return i[s][o]}}function Qn(e,t,n){var r=-1*n,i=r>=0?"+":"";return i+=Yn(Math[r>0?"floor":"ceil"](r/60),2)+Yn(Math.abs(r%60),2)}function er(e){var t=new Date(e,0,1).getDay();return new Date(e,0,(t<=4?5:12)-t)}function tr(e){return new Date(e.getFullYear(),e.getMonth(),e.getDate()+(4-e.getDay()))}function nr(e){return function(t){var n=er(t.getFullYear()),r=tr(t),i=+r-+n,o=1+Math.round(i/6048e5);return Yn(o,e)}}function rr(e,t){return e.getHours()<12?t.AMPMS[0]:t.AMPMS[1]}function ir(e,t){return e.getFullYear()<=0?t.ERAS[0]:t.ERAS[1]}function or(e,t){return e.getFullYear()<=0?t.ERANAMES[0]:t.ERANAMES[1]}function ar(e){function t(e){var t;if(t=e.match(n)){var r=new Date(0),i=0,o=0,a=t[8]?r.setUTCFullYear:r.setFullYear,s=t[8]?r.setUTCHours:r.setHours;t[9]&&(i=f(t[9]+t[10]),o=f(t[9]+t[11])),a.call(r,f(t[1]),f(t[2])-1,f(t[3]));var u=f(t[4]||0)-i,c=f(t[5]||0)-o,l=f(t[6]||0),h=Math.round(1e3*parseFloat("0."+(t[7]||0)));return s.call(r,u,c,l,h),r}return e}var n=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(n,i,o){var a,s,u="",c=[];if(i=i||"mediumDate",i=e.DATETIME_FORMATS[i]||i,w(n)&&(n=ea.test(n)?f(n):t(n)),x(n)&&(n=new Date(n)),!C(n)||!isFinite(n.getTime()))return n;for(;i;)s=Qo.exec(i),s?(c=F(c,s,1),i=c.pop()):(c.push(i),i=null);var l=n.getTimezoneOffset();return o&&(l=G(o,l),n=J(n,o,!0)),r(c,function(t){a=Xo[t],u+=a?a(n,e.DATETIME_FORMATS,l):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),u}}function sr(){return function(e,t){return m(t)&&(t=2),z(e,t)}}function ur(){return function(e,t,r){return t=Math.abs(Number(t))===1/0?Number(t):f(t),ni(t)?e:(x(e)&&(e=e.toString()),n(e)?(r=!r||isNaN(r)?0:f(r),r=r<0?Math.max(0,e.length+r):r,t>=0?cr(e,r,r+t):0===r?cr(e,t,e.length):cr(e,Math.max(0,r+t),r)):e)}}function cr(e,t,n){return w(e)?e.slice(t,n):Zr.call(e,t,n)}function lr(e){function r(t){return t.map(function(t){var n=1,r=d;if(S(t))r=t;else if(w(t)&&("+"!==t.charAt(0)&&"-"!==t.charAt(0)||(n="-"===t.charAt(0)?-1:1,t=t.substring(1)),""!==t&&(r=e(t),r.constant))){var i=r();r=function(e){return e[i]}}return{get:r,descending:n}})}function i(e){switch(typeof e){case"number":case"boolean":case"string":return!0;default:return!1}}function o(e){return S(e.valueOf)&&(e=e.valueOf(),i(e))?e:v(e)&&(e=e.toString(),i(e))?e:e}function a(e,t){var n=typeof e;return null===e?(n="string",e="null"):"object"===n&&(e=o(e)),{value:e,type:n,index:t}}function s(e,t){var n=0,r=e.type,i=t.type;if(r===i){var o=e.value,a=t.value;"string"===r?(o=o.toLowerCase(),a=a.toLowerCase()):"object"===r&&(y(o)&&(o=e.index),y(a)&&(a=t.index)),o!==a&&(n=o<a?-1:1)}else n=r<i?-1:1;return n}return function(e,i,o,u){function c(e,t){return{value:e,tieBreaker:{value:t,type:"number",index:t},predicateValues:f.map(function(n){return a(n.get(e),t)})}}function l(e,t){for(var n=0,r=f.length;n<r;n++){var i=p(e.predicateValues[n],t.predicateValues[n]);if(i)return i*f[n].descending*h}return p(e.tieBreaker,t.tieBreaker)*h}if(null==e)return e;if(!n(e))throw t("orderBy")("notarray","Expected array but received: {0}",e);ri(i)||(i=[i]),0===i.length&&(i=["+"]);var f=r(i),h=o?-1:1,p=S(u)?u:s,d=Array.prototype.map.call(e,c);return d.sort(l),e=d.map(function(e){return e.value})}}function fr(e){return S(e)&&(e={link:e}),e.restrict=e.restrict||"AC",$(e)}function hr(e,t){e.$name=t}function pr(e,t,n,i,o){var a=this,s=[];a.$error={},a.$$success={},a.$pending=void 0,a.$name=o(t.name||t.ngForm||"")(n),a.$dirty=!1,a.$pristine=!0,a.$valid=!0,a.$invalid=!1,a.$submitted=!1,a.$$parentForm=oa,a.$rollbackViewValue=function(){r(s,function(e){e.$rollbackViewValue()})},a.$commitViewValue=function(){r(s,function(e){e.$commitViewValue()})},a.$addControl=function(e){he(e.$name,"input"),s.push(e),e.$name&&(a[e.$name]=e),e.$$parentForm=a},a.$$renameControl=function(e,t){var n=e.$name;a[n]===e&&delete a[n],a[t]=e,e.$name=t},a.$removeControl=function(e){e.$name&&a[e.$name]===e&&delete a[e.$name],r(a.$pending,function(t,n){a.$setValidity(n,null,e)}),r(a.$error,function(t,n){a.$setValidity(n,null,e)}),r(a.$$success,function(t,n){a.$setValidity(n,null,e)}),_(s,e),e.$$parentForm=oa},Ir({ctrl:this,$element:e,set:function(e,t,n){var r=e[t];if(r){var i=r.indexOf(n);i===-1&&r.push(n)}else e[t]=[n]},unset:function(e,t,n){var r=e[t];r&&(_(r,n),0===r.length&&delete e[t])},$animate:i}),a.$setDirty=function(){i.removeClass(e,Ha),i.addClass(e,Ba),a.$dirty=!0,a.$pristine=!1,a.$$parentForm.$setDirty()},a.$setPristine=function(){i.setClass(e,Ha,Ba+" "+aa),a.$dirty=!1,a.$pristine=!0,a.$submitted=!1,r(s,function(e){e.$setPristine()})},a.$setUntouched=function(){r(s,function(e){e.$setUntouched()})},a.$setSubmitted=function(){i.addClass(e,aa),a.$submitted=!0,a.$$parentForm.$setSubmitted()}}function dr(e){e.$formatters.push(function(t){return e.$isEmpty(t)?t:t.toString()})}function $r(e,t,n,r,i,o){vr(e,t,n,r,i,o),dr(r)}function vr(e,t,n,r,i,o){var a=Ur(t[0].type);if(!i.android){var s=!1;t.on("compositionstart",function(){s=!0}),t.on("compositionend",function(){s=!1,c()})}var u,c=function(e){if(u&&(o.defer.cancel(u),u=null),!s){var i=t.val(),c=e&&e.type;"password"===a||n.ngTrim&&"false"===n.ngTrim||(i=oi(i)),(r.$viewValue!==i||""===i&&r.$$hasNativeValidators)&&r.$setViewValue(i,c)}};if(i.hasEvent("input"))t.on("input",c);else{var l=function(e,t,n){u||(u=o.defer(function(){u=null,t&&t.value===n||c(e)}))};t.on("keydown",function(e){var t=e.keyCode;91===t||15<t&&t<19||37<=t&&t<=40||l(e,this,this.value)}),i.hasEvent("paste")&&t.on("paste cut",l)}t.on("change",c),ba[a]&&r.$$hasNativeValidators&&a===n.type&&t.on(ya,function(e){if(!u){var t=this[_r],n=t.badInput,r=t.typeMismatch;u=o.defer(function(){u=null,t.badInput===n&&t.typeMismatch===r||c(e)})}}),r.$render=function(){var e=r.$isEmpty(r.$viewValue)?"":r.$viewValue;t.val()!==e&&t.val(e)}}function mr(e,t){if(C(e))return e;if(w(e)){va.lastIndex=0;var n=va.exec(e);if(n){var r=+n[1],i=+n[2],o=0,a=0,s=0,u=0,c=er(r),l=7*(i-1);return t&&(o=t.getHours(),a=t.getMinutes(),s=t.getSeconds(),u=t.getMilliseconds()),new Date(r,0,c.getDate()+l,o,a,s,u)}}return NaN}function gr(e,t){return function(n,i){var o,a;if(C(n))return n;if(w(n)){if('"'===n.charAt(0)&&'"'===n.charAt(n.length-1)&&(n=n.substring(1,n.length-1)),la.test(n))return new Date(n);if(e.lastIndex=0,o=e.exec(n))return o.shift(),a=i?{yyyy:i.getFullYear(),MM:i.getMonth()+1,
dd:i.getDate(),HH:i.getHours(),mm:i.getMinutes(),ss:i.getSeconds(),sss:i.getMilliseconds()/1e3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},r(o,function(e,n){n<t.length&&(a[t[n]]=+e)}),new Date(a.yyyy,a.MM-1,a.dd,a.HH,a.mm,a.ss||0,1e3*a.sss||0)}return NaN}}function yr(e,t,n,r){return function(i,o,a,s,u,c,l){function f(e){return e&&!(e.getTime&&e.getTime()!==e.getTime())}function h(e){return g(e)&&!C(e)?n(e)||void 0:e}br(i,o,a,s),vr(i,o,a,s,u,c);var p,d=s&&s.$options&&s.$options.timezone;if(s.$$parserName=e,s.$parsers.push(function(e){if(s.$isEmpty(e))return null;if(t.test(e)){var r=n(e,p);return d&&(r=J(r,d)),r}}),s.$formatters.push(function(e){if(e&&!C(e))throw Ya("datefmt","Expected `{0}` to be a date",e);return f(e)?(p=e,p&&d&&(p=J(p,d,!0)),l("date")(e,r,d)):(p=null,"")}),g(a.min)||a.ngMin){var $;s.$validators.min=function(e){return!f(e)||m($)||n(e)>=$},a.$observe("min",function(e){$=h(e),s.$validate()})}if(g(a.max)||a.ngMax){var v;s.$validators.max=function(e){return!f(e)||m(v)||n(e)<=v},a.$observe("max",function(e){v=h(e),s.$validate()})}}}function br(e,t,n,r){var i=t[0],o=r.$$hasNativeValidators=y(i.validity);o&&r.$parsers.push(function(e){var n=t.prop(_r)||{};return n.badInput||n.typeMismatch?void 0:e})}function wr(e){e.$$parserName="number",e.$parsers.push(function(t){return e.$isEmpty(t)?null:pa.test(t)?parseFloat(t):void 0}),e.$formatters.push(function(t){if(!e.$isEmpty(t)){if(!x(t))throw Ya("numfmt","Expected `{0}` to be a number",t);t=t.toString()}return t})}function xr(e){return g(e)&&!x(e)&&(e=parseFloat(e)),ni(e)?void 0:e}function Cr(e){return(0|e)===e}function Sr(e){var t=e.toString(),n=t.indexOf(".");if(n===-1){if(-1<e&&e<1){var r=/e-(\d+)$/.exec(t);if(r)return Number(r[1])}return 0}return t.length-n-1}function Er(e,t,n){var r=Number(e);if(!Cr(r)||!Cr(t)||!Cr(n)){var i=Math.max(Sr(r),Sr(t),Sr(n)),o=Math.pow(10,i);r*=o,t*=o,n*=o}return(r-t)%n===0}function Ar(e,t,n,r,i,o){br(e,t,n,r),vr(e,t,n,r,i,o),wr(r);var a,s;(g(n.min)||n.ngMin)&&(r.$validators.min=function(e){return r.$isEmpty(e)||m(a)||e>=a},n.$observe("min",function(e){a=xr(e),r.$validate()})),(g(n.max)||n.ngMax)&&(r.$validators.max=function(e){return r.$isEmpty(e)||m(s)||e<=s},n.$observe("max",function(e){s=xr(e),r.$validate()}))}function kr(e,t,n,r,i,o){function a(e,r){t.attr(e,n[e]),n.$observe(e,r)}function s(e){if(f=xr(e),!ni(r.$modelValue))if(l){var n=t.val();f>n&&(n=f,t.val(n)),r.$setViewValue(n)}else r.$validate()}function u(e){if(h=xr(e),!ni(r.$modelValue))if(l){var n=t.val();h<n&&(t.val(h),n=h<f?f:h),r.$setViewValue(n)}else r.$validate()}function c(e){p=xr(e),ni(r.$modelValue)||(l&&r.$viewValue!==t.val()?r.$setViewValue(t.val()):r.$validate())}br(e,t,n,r),wr(r),vr(e,t,n,r,i,o);var l=r.$$hasNativeValidators&&"range"===t[0].type,f=l?0:void 0,h=l?100:void 0,p=l?1:void 0,d=t[0].validity,$=g(n.min),v=g(n.max),y=g(n.step),b=r.$render;r.$render=l&&g(d.rangeUnderflow)&&g(d.rangeOverflow)?function(){b(),r.$setViewValue(t.val())}:b,$&&(r.$validators.min=l?function(){return!0}:function(e,t){return r.$isEmpty(t)||m(f)||t>=f},a("min",s)),v&&(r.$validators.max=l?function(){return!0}:function(e,t){return r.$isEmpty(t)||m(h)||t<=h},a("max",u)),y&&(r.$validators.step=l?function(){return!d.stepMismatch}:function(e,t){return r.$isEmpty(t)||m(p)||Er(t,f||0,p)},a("step",c))}function Or(e,t,n,r,i,o){vr(e,t,n,r,i,o),dr(r),r.$$parserName="url",r.$validators.url=function(e,t){var n=e||t;return r.$isEmpty(n)||fa.test(n)}}function Mr(e,t,n,r,i,o){vr(e,t,n,r,i,o),dr(r),r.$$parserName="email",r.$validators.email=function(e,t){var n=e||t;return r.$isEmpty(n)||ha.test(n)}}function Tr(e,t,n,r){m(n.name)&&t.attr("name",a());var i=function(e){t[0].checked&&r.$setViewValue(n.value,e&&e.type)};t.on("click",i),r.$render=function(){var e=n.value;t[0].checked=e===r.$viewValue},n.$observe("value",r.$render)}function Vr(e,t,n,r,i){var o;if(g(r)){if(o=e(r),!o.constant)throw Ya("constexpr","Expected constant expression for `{0}`, but saw `{1}`.",n,r);return o(t)}return i}function Nr(e,t,n,r,i,o,a,s){var u=Vr(s,e,"ngTrueValue",n.ngTrueValue,!0),c=Vr(s,e,"ngFalseValue",n.ngFalseValue,!1),l=function(e){r.$setViewValue(t[0].checked,e&&e.type)};t.on("click",l),r.$render=function(){t[0].checked=r.$viewValue},r.$isEmpty=function(e){return e===!1},r.$formatters.push(function(e){return U(e,u)}),r.$parsers.push(function(e){return e?u:c})}function jr(e,t){return e="ngClass"+e,["$animate",function(n){function i(e,t){var n=[];e:for(var r=0;r<e.length;r++){for(var i=e[r],o=0;o<t.length;o++)if(i===t[o])continue e;n.push(i)}return n}function o(e){var t=[];return ri(e)?(r(e,function(e){t=t.concat(o(e))}),t):w(e)?e.split(" "):y(e)?(r(e,function(e,n){e&&(t=t.concat(n.split(" ")))}),t):e}return{restrict:"AC",link:function(a,s,u){function c(e){var t=f(e,1);u.$addClass(t)}function l(e){var t=f(e,-1);u.$removeClass(t)}function f(e,t){var n=s.data("$classCounts")||$e(),i=[];return r(e,function(e){(t>0||n[e])&&(n[e]=(n[e]||0)+t,n[e]===+(t>0)&&i.push(e))}),s.data("$classCounts",n),i.join(" ")}function h(e,t){var r=i(t,e),o=i(e,t);r=f(r,1),o=f(o,-1),r&&r.length&&n.addClass(s,r),o&&o.length&&n.removeClass(s,o)}function p(e){if(t===!0||(1&a.$index)===t){var n=o(e||[]);if(d){if(!U(e,d)){var r=o(d);h(r,n)}}else c(n)}d=ri(e)?e.map(function(e){return me(e)}):me(e)}var d;a.$watch(u[e],p,!0),u.$observe("class",function(t){p(a.$eval(u[e]))}),"ngClass"!==e&&a.$watch("$index",function(n,r){var i=1&n;if(i!==(1&r)){var s=o(a.$eval(u[e]));i===t?c(s):l(s)}})}}}]}function Ir(e){function t(e,t,s){m(t)?n("$pending",e,s):r("$pending",e,s),V(t)?t?(l(a.$error,e,s),c(a.$$success,e,s)):(c(a.$error,e,s),l(a.$$success,e,s)):(l(a.$error,e,s),l(a.$$success,e,s)),a.$pending?(i(Ga,!0),a.$valid=a.$invalid=void 0,o("",null)):(i(Ga,!1),a.$valid=Dr(a.$error),a.$invalid=!a.$valid,o("",a.$valid));var u;u=a.$pending&&a.$pending[e]?void 0:!a.$error[e]&&(!!a.$$success[e]||null),o(e,u),a.$$parentForm.$setValidity(e,u,a)}function n(e,t,n){a[e]||(a[e]={}),c(a[e],t,n)}function r(e,t,n){a[e]&&l(a[e],t,n),Dr(a[e])&&(a[e]=void 0)}function i(e,t){t&&!u[e]?(f.addClass(s,e),u[e]=!0):!t&&u[e]&&(f.removeClass(s,e),u[e]=!1)}function o(e,t){e=e?"-"+ue(e,"-"):"",i(Fa+e,t===!0),i(La+e,t===!1)}var a=e.ctrl,s=e.$element,u={},c=e.set,l=e.unset,f=e.$animate;u[La]=!(u[Fa]=s.hasClass(Fa)),a.$setValidity=t}function Dr(e){if(e)for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}function Pr(e){e[0].hasAttribute("selected")&&(e[0].selected=!0)}var Rr=/^\/(.+)\/([a-z]*)$/,_r="validity",qr=Object.prototype.hasOwnProperty,Ur=function(e){return w(e)?e.toLowerCase():e},Fr=function(e){return w(e)?e.toUpperCase():e},Lr=function(e){return w(e)?e.replace(/[A-Z]/g,function(e){return String.fromCharCode(32|e.charCodeAt(0))}):e},Hr=function(e){return w(e)?e.replace(/[a-z]/g,function(e){return String.fromCharCode(e.charCodeAt(0)&-33)}):e};"i"!=="I".toLowerCase()&&(Ur=Lr,Fr=Hr);var Br,zr,Wr,Gr,Zr=[].slice,Jr=[].splice,Yr=[].push,Kr=Object.prototype.toString,Xr=Object.getPrototypeOf,Qr=t("ng"),ei=e.angular||(e.angular={}),ti=0;Br=e.document.documentMode;var ni=Number.isNaN||function(e){return e!==e};p.$inject=[],d.$inject=[];var ri=Array.isArray,ii=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,oi=function(e){return w(e)?e.trim():e},ai=function(e){return e.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},si=function(){function t(){try{return new Function(""),!1}catch(e){return!0}}if(!g(si.rules)){var n=e.document.querySelector("[ng-csp]")||e.document.querySelector("[data-ng-csp]");if(n){var r=n.getAttribute("ng-csp")||n.getAttribute("data-ng-csp");si.rules={noUnsafeEval:!r||r.indexOf("no-unsafe-eval")!==-1,noInlineStyle:!r||r.indexOf("no-inline-style")!==-1}}else si.rules={noUnsafeEval:t(),noInlineStyle:!1}}return si.rules},ui=function(){if(g(ui.name_))return ui.name_;var t,n,r,i,o=li.length;for(n=0;n<o;++n)if(r=li[n],t=e.document.querySelector("["+r.replace(":","\\:")+"jq]")){i=t.getAttribute(r+"jq");break}return ui.name_=i},ci=/:/g,li=["ng-","data-ng-","ng:","x-ng-"],fi=re(e.document),hi=/[A-Z]/g,pi=!1,di=1,$i=2,vi=3,mi=8,gi=9,yi=11,bi={full:"1.5.9",major:1,minor:5,dot:9,codeName:"timeturning-lockdown"};Te.expando="ng339";var wi=Te.cache={},xi=1,Ci=function(e,t,n){e.addEventListener(t,n,!1)},Si=function(e,t,n){e.removeEventListener(t,n,!1)};Te._data=function(e){return this.cache[e[this.expando]]||{}};var Ei=/([:\-_]+(.))/g,Ai=/^moz([A-Z])/,ki={mouseleave:"mouseout",mouseenter:"mouseover"},Oi=t("jqLite"),Mi=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Ti=/<|&#?\w+;/,Vi=/<([\w:-]+)/,Ni=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,ji={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ji.optgroup=ji.option,ji.tbody=ji.tfoot=ji.colgroup=ji.caption=ji.thead,ji.th=ji.td;var Ii=e.Node.prototype.contains||function(e){return!!(16&this.compareDocumentPosition(e))},Di=Te.prototype={ready:function(t){function n(){r||(r=!0,t())}var r=!1;"complete"===e.document.readyState?e.setTimeout(n):(this.on("DOMContentLoaded",n),Te(e).on("load",n))},toString:function(){var e=[];return r(this,function(t){e.push(""+t)}),"["+e.join(", ")+"]"},eq:function(e){return zr(e>=0?this[e]:this[this.length+e])},length:0,push:Yr,sort:[].sort,splice:[].splice},Pi={};r("multiple,selected,checked,disabled,readOnly,required,open".split(","),function(e){Pi[Ur(e)]=e});var Ri={};r("input,select,option,textarea,button,form,details".split(","),function(e){Ri[e]=!0});var _i={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};r({data:Pe,removeData:Ie,hasData:Ee,cleanData:Ae},function(e,t){Te[t]=e}),r({data:Pe,inheritedData:Le,scope:function(e){return zr.data(e,"$scope")||Le(e.parentNode||e,["$isolateScope","$scope"])},isolateScope:function(e){return zr.data(e,"$isolateScope")||zr.data(e,"$isolateScopeNoTemplate")},controller:Fe,injector:function(e){return Le(e,"$injector")},removeAttr:function(e,t){e.removeAttribute(t)},hasClass:Re,css:function(e,t,n){return t=xe(t),g(n)?void(e.style[t]=n):e.style[t]},attr:function(e,t,n){var r=e.nodeType;if(r!==vi&&r!==$i&&r!==mi){var i=Ur(t);if(Pi[i]){if(!g(n))return e[t]||(e.attributes.getNamedItem(t)||p).specified?i:void 0;n?(e[t]=!0,e.setAttribute(t,i)):(e[t]=!1,e.removeAttribute(i))}else if(g(n))e.setAttribute(t,n);else if(e.getAttribute){var o=e.getAttribute(t,2);return null===o?void 0:o}}},prop:function(e,t,n){return g(n)?void(e[t]=n):e[t]},text:function(){function e(e,t){if(m(t)){var n=e.nodeType;return n===di||n===vi?e.textContent:""}e.textContent=t}return e.$dv="",e}(),val:function(e,t){if(m(t)){if(e.multiple&&"select"===R(e)){var n=[];return r(e.options,function(e){e.selected&&n.push(e.value||e.text)}),0===n.length?null:n}return e.value}e.value=t},html:function(e,t){return m(t)?e.innerHTML:(Ne(e,!0),void(e.innerHTML=t))},empty:He},function(e,t){Te.prototype[t]=function(t,n){var r,i,o=this.length;if(e!==He&&m(2===e.length&&e!==Re&&e!==Fe?t:n)){if(y(t)){for(r=0;r<o;r++)if(e===Pe)e(this[r],t);else for(i in t)e(this[r],i,t[i]);return this}for(var a=e.$dv,s=m(a)?Math.min(o,1):o,u=0;u<s;u++){var c=e(this[u],t,n);a=a?a+c:c}return a}for(r=0;r<o;r++)e(this[r],t,n);return this}}),r({removeData:Ie,on:function(e,t,n,r){if(g(r))throw Oi("onargs","jqLite#on() does not support the `selector` or `eventData` parameters");if(Se(e)){var i=De(e,!0),o=i.events,a=i.handle;a||(a=i.handle=Ze(e,o));for(var s=t.indexOf(" ")>=0?t.split(" "):[t],u=s.length,c=function(t,r,i){var s=o[t];s||(s=o[t]=[],s.specialHandlerWrapper=r,"$destroy"===t||i||Ci(e,t,a)),s.push(n)};u--;)t=s[u],ki[t]?(c(ki[t],Ye),c(t,void 0,!0)):c(t)}},off:je,one:function(e,t,n){e=zr(e),e.on(t,function r(){e.off(t,n),e.off(t,r)}),e.on(t,n)},replaceWith:function(e,t){var n,i=e.parentNode;Ne(e),r(new Te(t),function(t){n?i.insertBefore(t,n.nextSibling):i.replaceChild(t,e),n=t})},children:function(e){var t=[];return r(e.childNodes,function(e){e.nodeType===di&&t.push(e)}),t},contents:function(e){return e.contentDocument||e.childNodes||[]},append:function(e,t){var n=e.nodeType;if(n===di||n===yi){t=new Te(t);for(var r=0,i=t.length;r<i;r++){var o=t[r];e.appendChild(o)}}},prepend:function(e,t){if(e.nodeType===di){var n=e.firstChild;r(new Te(t),function(t){e.insertBefore(t,n)})}},wrap:function(e,t){Me(e,zr(t).eq(0).clone()[0])},remove:Be,detach:function(e){Be(e,!0)},after:function(e,t){var n=e,r=e.parentNode;t=new Te(t);for(var i=0,o=t.length;i<o;i++){var a=t[i];r.insertBefore(a,n.nextSibling),n=a}},addClass:qe,removeClass:_e,toggleClass:function(e,t,n){t&&r(t.split(" "),function(t){var r=n;m(r)&&(r=!Re(e,t)),(r?qe:_e)(e,t)})},parent:function(e){var t=e.parentNode;return t&&t.nodeType!==yi?t:null},next:function(e){return e.nextElementSibling},find:function(e,t){return e.getElementsByTagName?e.getElementsByTagName(t):[]},clone:Ve,triggerHandler:function(e,t,n){var i,o,a,s=t.type||t,u=De(e),l=u&&u.events,f=l&&l[s];f&&(i={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return this.defaultPrevented===!0},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return this.immediatePropagationStopped===!0},stopPropagation:p,type:s,target:e},t.type&&(i=c(i,t)),o=me(f),a=n?[i].concat(n):[i],r(o,function(t){i.isImmediatePropagationStopped()||t.apply(e,a)}))}},function(e,t){Te.prototype[t]=function(t,n,r){for(var i,o=0,a=this.length;o<a;o++)m(i)?(i=e(this[o],t,n,r),g(i)&&(i=zr(i))):Ue(i,e(this[o],t,n,r));return g(i)?i:this},Te.prototype.bind=Te.prototype.on,Te.prototype.unbind=Te.prototype.off}),Qe.prototype={put:function(e,t){this[Xe(e,this.nextUid)]=t},get:function(e){return this[Xe(e,this.nextUid)]},remove:function(e){var t=this[e=Xe(e,this.nextUid)];return delete this[e],t}};var qi=[function(){this.$get=[function(){return Qe}]}],Ui=/^([^\(]+?)=>/,Fi=/^[^\(]*\(\s*([^\)]*)\)/m,Li=/,/,Hi=/^\s*(_?)(\S+?)\1\s*$/,Bi=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,zi=t("$injector");it.$$annotate=rt;var Wi=t("$animate"),Gi=1,Zi="ng-animate",Ji=function(){this.$get=p},Yi=function(){var e=new Qe,t=[];this.$get=["$$AnimateRunner","$rootScope",function(n,i){function o(e,t,n){var i=!1;return t&&(t=w(t)?t.split(" "):ri(t)?t:[],r(t,function(t){t&&(i=!0,e[t]=n)})),i}function a(){r(t,function(t){var n=e.get(t);if(n){var i=ut(t.attr("class")),o="",a="";r(n,function(e,t){var n=!!i[t];e!==n&&(e?o+=(o.length?" ":"")+t:a+=(a.length?" ":"")+t)}),r(t,function(e){o&&qe(e,o),a&&_e(e,a)}),e.remove(t)}}),t.length=0}function s(n,r,s){var u=e.get(n)||{},c=o(u,r,!0),l=o(u,s,!1);(c||l)&&(e.put(n,u),t.push(n),1===t.length&&i.$$postDigest(a))}return{enabled:p,on:p,off:p,pin:p,push:function(e,t,r,i){i&&i(),r=r||{},r.from&&e.css(r.from),r.to&&e.css(r.to),(r.addClass||r.removeClass)&&s(e,r.addClass,r.removeClass);var o=new n;return o.complete(),o}}}]},Ki=["$provide",function(e){var t=this;this.$$registeredAnimations=Object.create(null),this.register=function(n,r){if(n&&"."!==n.charAt(0))throw Wi("notcsel","Expecting class selector starting with '.' got '{0}'.",n);var i=n+"-animation";t.$$registeredAnimations[n.substr(1)]=i,e.factory(i,r)},this.classNameFilter=function(e){if(1===arguments.length&&(this.$$classNameFilter=e instanceof RegExp?e:null,this.$$classNameFilter)){var t=new RegExp("(\\s+|\\/)"+Zi+"(\\s+|\\/)");if(t.test(this.$$classNameFilter.toString()))throw Wi("nongcls",'$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.',Zi)}return this.$$classNameFilter},this.$get=["$$animateQueue",function(e){function t(e,t,n){if(n){var r=st(n);!r||r.parentNode||r.previousElementSibling||(n=null)}n?n.after(e):t.prepend(e)}return{on:e.on,off:e.off,pin:e.pin,enabled:e.enabled,cancel:function(e){e.end&&e.end()},enter:function(n,r,i,o){return r=r&&zr(r),i=i&&zr(i),r=r||i.parent(),t(n,r,i),e.push(n,"enter",ct(o))},move:function(n,r,i,o){return r=r&&zr(r),i=i&&zr(i),r=r||i.parent(),t(n,r,i),e.push(n,"move",ct(o))},leave:function(t,n){return e.push(t,"leave",ct(n),function(){t.remove()})},addClass:function(t,n,r){return r=ct(r),r.addClass=at(r.addclass,n),e.push(t,"addClass",r)},removeClass:function(t,n,r){return r=ct(r),r.removeClass=at(r.removeClass,n),e.push(t,"removeClass",r)},setClass:function(t,n,r,i){return i=ct(i),i.addClass=at(i.addClass,n),i.removeClass=at(i.removeClass,r),e.push(t,"setClass",i)},animate:function(t,n,r,i,o){return o=ct(o),o.from=o.from?c(o.from,n):n,o.to=o.to?c(o.to,r):r,i=i||"ng-inline-animate",o.tempClasses=at(o.tempClasses,i),e.push(t,"animate",o)}}}]}],Xi=function(){this.$get=["$$rAF",function(e){function t(t){n.push(t),n.length>1||e(function(){for(var e=0;e<n.length;e++)n[e]();n=[]})}var n=[];return function(){var e=!1;return t(function(){e=!0}),function(n){e?n():t(n)}}}]},Qi=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(e,t,n,i,o){function a(e){this.setHost(e);var t=n(),r=function(e){o(e,0,!1)};this._doneCallbacks=[],this._tick=function(e){var n=i[0];n&&n.hidden?r(e):t(e)},this._state=0}var s=0,u=1,c=2;return a.chain=function(e,t){function n(){return r===e.length?void t(!0):void e[r](function(e){return e===!1?void t(!1):(r++,void n())})}var r=0;n()},a.all=function(e,t){function n(n){o=o&&n,++i===e.length&&t(o)}var i=0,o=!0;r(e,function(e){e.done(n)})},a.prototype={setHost:function(e){this.host=e||{}},done:function(e){this._state===c?e():this._doneCallbacks.push(e)},progress:p,getPromise:function(){if(!this.promise){var t=this;this.promise=e(function(e,n){t.done(function(t){t===!1?n():e()})})}return this.promise},then:function(e,t){return this.getPromise().then(e,t)},catch:function(e){return this.getPromise().catch(e)},finally:function(e){return this.getPromise().finally(e)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end(),this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel(),this._resolve(!1)},complete:function(e){var t=this;t._state===s&&(t._state=u,t._tick(function(){t._resolve(e)}))},_resolve:function(e){this._state!==c&&(r(this._doneCallbacks,function(t){t(e)}),this._doneCallbacks.length=0,this._state=c)}},a}]},eo=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(e,t,n){return function(t,r){function i(){return e(function(){o(),s||u.complete(),s=!0}),u}function o(){a.addClass&&(t.addClass(a.addClass),a.addClass=null),a.removeClass&&(t.removeClass(a.removeClass),a.removeClass=null),a.to&&(t.css(a.to),a.to=null)}var a=r||{};a.$$prepared||(a=q(a)),a.cleanupStyles&&(a.from=a.to=null),a.from&&(t.css(a.from),a.from=null);var s,u=new n;return{start:i,end:i}}}]},to=t("$compile"),no=new dt;$t.$inject=["$provide","$$sanitizeUriProvider"],vt.prototype.isFirstChange=function(){return this.previousValue===no};var ro=/^((?:x|data)[:\-_])/i,io=t("$controller"),oo=/^(\S+)(\s+as\s+([\w$]+))?$/,ao=function(){this.$get=["$document",function(e){return function(t){return t?!t.nodeType&&t instanceof zr&&(t=t[0]):t=e[0].body,t.offsetWidth+1}}]},so="application/json",uo={"Content-Type":so+";charset=utf-8"},co=/^\[|^\{(?!\{)/,lo={"[":/]$/,"{":/}$/},fo=/^\)\]\}',?\n/,ho=t("$http"),po=function(e){return function(){throw ho("legacy","The method `{0}` on the promise returned from `$http` has been disabled.",e)}},$o=ei.$interpolateMinErr=t("$interpolate");$o.throwNoconcat=function(e){throw $o("noconcat","Error while interpolating: {0}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See http://docs.angularjs.org/api/ng.$sce",e)},$o.interr=function(e,t){return $o("interr","Can't interpolate: {0}\n{1}",e,t.toString())};var vo=function(){this.$get=["$window",function(e){function t(e){var t=function(e){t.data=e,t.called=!0};return t.id=e,t}var n=e.angular.callbacks,r={};return{createCallback:function(e){var i="_"+(n.$$counter++).toString(36),o="angular.callbacks."+i,a=t(i);return r[o]=n[i]=a,o},wasCalled:function(e){return r[e].called},getResponse:function(e){return r[e].data},removeCallback:function(e){var t=r[e];delete n[t.id],delete r[e]}}}]},mo=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,go={http:80,https:443,ftp:21},yo=t("$location"),bo=/^\s*[\\/]{2,}/,wo={$$absUrl:"",$$html5:!1,$$replace:!1,absUrl:Kt("$$absUrl"),url:function(e){if(m(e))return this.$$url;var t=mo.exec(e);return(t[1]||""===e)&&this.path(decodeURIComponent(t[1])),(t[2]||t[1]||""===e)&&this.search(t[3]||""),this.hash(t[5]||""),this},protocol:Kt("$$protocol"),host:Kt("$$host"),port:Kt("$$port"),path:Xt("$$path",function(e){return e=null!==e?e.toString():"","/"===e.charAt(0)?e:"/"+e}),search:function(e,t){switch(arguments.length){case 0:return this.$$search;case 1:if(w(e)||x(e))e=e.toString(),this.$$search=X(e);else{if(!y(e))throw yo("isrcharg","The first argument of the `$location#search()` call must be a string or an object.");e=q(e,{}),r(e,function(t,n){null==t&&delete e[n]}),this.$$search=e}break;default:m(t)||null===t?delete this.$$search[e]:this.$$search[e]=t}return this.$$compose(),this},hash:Xt("$$hash",function(e){return null!==e?e.toString():""}),replace:function(){return this.$$replace=!0,this}};r([Yt,Jt,Zt],function(e){e.prototype=Object.create(wo),e.prototype.state=function(t){if(!arguments.length)return this.$$state;if(e!==Zt||!this.$$html5)throw yo("nostate","History API state support is available only in HTML5 mode and only in browsers supporting HTML5 History API");return this.$$state=m(t)?null:t,this}});var xo=t("$parse"),Co=[].constructor,So=(!1).constructor,Eo=Function.constructor,Ao=(0).constructor,ko={}.constructor,Oo="".constructor,Mo=Co.prototype,To=So.prototype,Vo=Eo.prototype,No=Ao.prototype,jo=ko.prototype,Io=Oo.prototype,Do=Vo.call,Po=Vo.apply,Ro=Vo.bind,_o=jo.valueOf,qo=$e();r("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(e){qo[e]=!0});var Uo={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},Fo=function(e){this.options=e};Fo.prototype={constructor:Fo,lex:function(e){for(this.text=e,this.index=0,this.tokens=[];this.index<this.text.length;){var t=this.text.charAt(this.index);if('"'===t||"'"===t)this.readString(t);else if(this.isNumber(t)||"."===t&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(t,"(){}[].,;:?"))this.tokens.push({index:this.index,text:t}),this.index++;else if(this.isWhitespace(t))this.index++;else{var n=t+this.peek(),r=n+this.peek(2),i=qo[t],o=qo[n],a=qo[r];if(i||o||a){var s=a?r:o?n:t;this.tokens.push({index:this.index,text:s,operator:!0}),this.index+=s.length}else this.throwError("Unexpected next character ",this.index,this.index+1)}}return this.tokens},is:function(e,t){return t.indexOf(e)!==-1},peek:function(e){var t=e||1;return this.index+t<this.text.length&&this.text.charAt(this.index+t)},isNumber:function(e){return"0"<=e&&e<="9"&&"string"==typeof e},isWhitespace:function(e){return" "===e||"\r"===e||"\t"===e||"\n"===e||"\v"===e||" "===e},isIdentifierStart:function(e){return this.options.isIdentifierStart?this.options.isIdentifierStart(e,this.codePointAt(e)):this.isValidIdentifierStart(e)},isValidIdentifierStart:function(e){return"a"<=e&&e<="z"||"A"<=e&&e<="Z"||"_"===e||"$"===e},isIdentifierContinue:function(e){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(e,this.codePointAt(e)):this.isValidIdentifierContinue(e)},isValidIdentifierContinue:function(e,t){return this.isValidIdentifierStart(e,t)||this.isNumber(e)},codePointAt:function(e){return 1===e.length?e.charCodeAt(0):(e.charCodeAt(0)<<10)+e.charCodeAt(1)-56613888},peekMultichar:function(){var e=this.text.charAt(this.index),t=this.peek();if(!t)return e;var n=e.charCodeAt(0),r=t.charCodeAt(0);return n>=55296&&n<=56319&&r>=56320&&r<=57343?e+t:e},isExpOperator:function(e){return"-"===e||"+"===e||this.isNumber(e)},throwError:function(e,t,n){n=n||this.index;var r=g(t)?"s "+t+"-"+this.index+" ["+this.text.substring(t,n)+"]":" "+n;throw xo("lexerr","Lexer Error: {0} at column{1} in expression [{2}].",e,r,this.text)},readNumber:function(){for(var e="",t=this.index;this.index<this.text.length;){var n=Ur(this.text.charAt(this.index));if("."===n||this.isNumber(n))e+=n;else{var r=this.peek();if("e"===n&&this.isExpOperator(r))e+=n;else if(this.isExpOperator(n)&&r&&this.isNumber(r)&&"e"===e.charAt(e.length-1))e+=n;else{if(!this.isExpOperator(n)||r&&this.isNumber(r)||"e"!==e.charAt(e.length-1))break;this.throwError("Invalid exponent")}}this.index++}this.tokens.push({index:t,text:e,constant:!0,value:Number(e)})},readIdent:function(){var e=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var t=this.peekMultichar();if(!this.isIdentifierContinue(t))break;this.index+=t.length}this.tokens.push({index:e,text:this.text.slice(e,this.index),identifier:!0})},readString:function(e){var t=this.index;this.index++;for(var n="",r=e,i=!1;this.index<this.text.length;){var o=this.text.charAt(this.index);if(r+=o,i){if("u"===o){var a=this.text.substring(this.index+1,this.index+5);a.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+a+"]"),this.index+=4,n+=String.fromCharCode(parseInt(a,16))}else{var s=Uo[o];n+=s||o}i=!1}else if("\\"===o)i=!0;else{if(o===e)return this.index++,void this.tokens.push({index:t,text:r,constant:!0,value:n});n+=o}this.index++}this.throwError("Unterminated quote",t)}};var Lo=function(e,t){this.lexer=e,this.options=t};Lo.Program="Program",Lo.ExpressionStatement="ExpressionStatement",Lo.AssignmentExpression="AssignmentExpression",Lo.ConditionalExpression="ConditionalExpression",Lo.LogicalExpression="LogicalExpression",Lo.BinaryExpression="BinaryExpression",Lo.UnaryExpression="UnaryExpression",Lo.CallExpression="CallExpression",Lo.MemberExpression="MemberExpression",Lo.Identifier="Identifier",Lo.Literal="Literal",Lo.ArrayExpression="ArrayExpression",Lo.Property="Property",Lo.ObjectExpression="ObjectExpression",Lo.ThisExpression="ThisExpression",Lo.LocalsExpression="LocalsExpression",Lo.NGValueParameter="NGValueParameter",Lo.prototype={ast:function(e){this.text=e,this.tokens=this.lexer.lex(e);var t=this.program();return 0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]),t},program:function(){for(var e=[];;)if(this.tokens.length>0&&!this.peek("}",")",";","]")&&e.push(this.expressionStatement()),!this.expect(";"))return{type:Lo.Program,body:e}},expressionStatement:function(){return{type:Lo.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var e=this.expression();this.expect("|");)e=this.filter(e);return e},expression:function(){return this.assignment()},assignment:function(){var e=this.ternary();return this.expect("=")&&(e={type:Lo.AssignmentExpression,left:e,right:this.assignment(),operator:"="}),e},ternary:function(){var e,t,n=this.logicalOR();return this.expect("?")&&(e=this.expression(),this.consume(":"))?(t=this.expression(),{type:Lo.ConditionalExpression,test:n,alternate:e,consequent:t}):n},logicalOR:function(){for(var e=this.logicalAND();this.expect("||");)e={type:Lo.LogicalExpression,operator:"||",left:e,right:this.logicalAND()};return e},logicalAND:function(){for(var e=this.equality();this.expect("&&");)e={type:Lo.LogicalExpression,operator:"&&",left:e,right:this.equality()};return e},equality:function(){for(var e,t=this.relational();e=this.expect("==","!=","===","!==");)t={type:Lo.BinaryExpression,operator:e.text,left:t,right:this.relational()};return t},relational:function(){for(var e,t=this.additive();e=this.expect("<",">","<=",">=");)t={type:Lo.BinaryExpression,operator:e.text,left:t,right:this.additive()};return t},additive:function(){for(var e,t=this.multiplicative();e=this.expect("+","-");)t={type:Lo.BinaryExpression,operator:e.text,left:t,right:this.multiplicative()};return t},multiplicative:function(){for(var e,t=this.unary();e=this.expect("*","/","%");)t={type:Lo.BinaryExpression,operator:e.text,left:t,right:this.unary()};return t},unary:function(){var e;return(e=this.expect("+","-","!"))?{type:Lo.UnaryExpression,operator:e.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var e;this.expect("(")?(e=this.filterChain(),this.consume(")")):this.expect("[")?e=this.arrayDeclaration():this.expect("{")?e=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?e=q(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?e={type:Lo.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?e=this.identifier():this.peek().constant?e=this.constant():this.throwError("not a primary expression",this.peek());for(var t;t=this.expect("(","[",".");)"("===t.text?(e={type:Lo.CallExpression,callee:e,arguments:this.parseArguments()},this.consume(")")):"["===t.text?(e={type:Lo.MemberExpression,object:e,property:this.expression(),computed:!0},this.consume("]")):"."===t.text?e={type:Lo.MemberExpression,object:e,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return e},filter:function(e){for(var t=[e],n={type:Lo.CallExpression,callee:this.identifier(),arguments:t,filter:!0};this.expect(":");)t.push(this.expression());return n},parseArguments:function(){var e=[];if(")"!==this.peekToken().text)do e.push(this.filterChain());while(this.expect(","));return e},identifier:function(){var e=this.consume();return e.identifier||this.throwError("is not a valid identifier",e),{type:Lo.Identifier,name:e.text}},constant:function(){return{type:Lo.Literal,value:this.consume().value}},arrayDeclaration:function(){var e=[];if("]"!==this.peekToken().text)do{if(this.peek("]"))break;e.push(this.expression())}while(this.expect(","));return this.consume("]"),{type:Lo.ArrayExpression,elements:e}},object:function(){var e,t=[];if("}"!==this.peekToken().text)do{if(this.peek("}"))break;e={type:Lo.Property,kind:"init"},this.peek().constant?(e.key=this.constant(),e.computed=!1,this.consume(":"),e.value=this.expression()):this.peek().identifier?(e.key=this.identifier(),e.computed=!1,this.peek(":")?(this.consume(":"),e.value=this.expression()):e.value=e.key):this.peek("[")?(this.consume("["),e.key=this.expression(),this.consume("]"),e.computed=!0,this.consume(":"),e.value=this.expression()):this.throwError("invalid key",this.peek()),t.push(e)}while(this.expect(","));return this.consume("}"),{type:Lo.ObjectExpression,properties:t}},throwError:function(e,t){throw xo("syntax","Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting at [{4}].",t.text,e,t.index+1,this.text,this.text.substring(t.index))},consume:function(e){if(0===this.tokens.length)throw xo("ueoe","Unexpected end of expression: {0}",this.text);var t=this.expect(e);return t||this.throwError("is unexpected, expecting ["+e+"]",this.peek()),t},peekToken:function(){if(0===this.tokens.length)throw xo("ueoe","Unexpected end of expression: {0}",this.text);return this.tokens[0]},peek:function(e,t,n,r){return this.peekAhead(0,e,t,n,r)},peekAhead:function(e,t,n,r,i){if(this.tokens.length>e){var o=this.tokens[e],a=o.text;if(a===t||a===n||a===r||a===i||!t&&!n&&!r&&!i)return o}return!1},expect:function(e,t,n,r){var i=this.peek(e,t,n,r);return!!i&&(this.tokens.shift(),i)},selfReferential:{this:{type:Lo.ThisExpression},$locals:{type:Lo.LocalsExpression}}},vn.prototype={compile:function(e,t){var n=this,i=this.astBuilder.ast(e);this.state={nextId:0,filters:{},expensiveChecks:t,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]},ln(i,n.$filter);var o,a="";if(this.stage="assign",o=pn(i)){this.state.computing="assign";var s=this.nextId();this.recurse(o,s),this.return_(s),a="fn.assign="+this.generateFunction("assign","s,v,l")}var u=fn(i.body);n.stage="inputs",r(u,function(e,t){var r="fn"+t;n.state[r]={vars:[],body:[],own:{}},n.state.computing=r;var i=n.nextId();n.recurse(e,i),n.return_(i),n.state.inputs.push(r),e.watchId=t;
}),this.state.computing="fn",this.stage="main",this.recurse(i);var c='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+a+this.watchFns()+"return fn;",l=new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",c)(this.$filter,tn,rn,on,nn,an,sn,un,e);return this.state=this.stage=void 0,l.literal=dn(i),l.constant=$n(i),l},USE:"use",STRICT:"strict",watchFns:function(){var e=[],t=this.state.inputs,n=this;return r(t,function(t){e.push("var "+t+"="+n.generateFunction(t,"s"))}),t.length&&e.push("fn.inputs=["+t.join(",")+"];"),e.join("")},generateFunction:function(e,t){return"function("+t+"){"+this.varsPrefix(e)+this.body(e)+"};"},filterPrefix:function(){var e=[],t=this;return r(this.state.filters,function(n,r){e.push(n+"=$filter("+t.escape(r)+")")}),e.length?"var "+e.join(",")+";":""},varsPrefix:function(e){return this.state[e].vars.length?"var "+this.state[e].vars.join(",")+";":""},body:function(e){return this.state[e].body.join("")},recurse:function(e,t,n,i,o,a){var s,u,c,l,f,h=this;if(i=i||p,!a&&g(e.watchId))return t=t||this.nextId(),void this.if_("i",this.lazyAssign(t,this.computedMember("i",e.watchId)),this.lazyRecurse(e,t,n,i,o,!0));switch(e.type){case Lo.Program:r(e.body,function(t,n){h.recurse(t.expression,void 0,void 0,function(e){u=e}),n!==e.body.length-1?h.current().body.push(u,";"):h.return_(u)});break;case Lo.Literal:l=this.escape(e.value),this.assign(t,l),i(l);break;case Lo.UnaryExpression:this.recurse(e.argument,void 0,void 0,function(e){u=e}),l=e.operator+"("+this.ifDefined(u,0)+")",this.assign(t,l),i(l);break;case Lo.BinaryExpression:this.recurse(e.left,void 0,void 0,function(e){s=e}),this.recurse(e.right,void 0,void 0,function(e){u=e}),l="+"===e.operator?this.plus(s,u):"-"===e.operator?this.ifDefined(s,0)+e.operator+this.ifDefined(u,0):"("+s+")"+e.operator+"("+u+")",this.assign(t,l),i(l);break;case Lo.LogicalExpression:t=t||this.nextId(),h.recurse(e.left,t),h.if_("&&"===e.operator?t:h.not(t),h.lazyRecurse(e.right,t)),i(t);break;case Lo.ConditionalExpression:t=t||this.nextId(),h.recurse(e.test,t),h.if_(t,h.lazyRecurse(e.alternate,t),h.lazyRecurse(e.consequent,t)),i(t);break;case Lo.Identifier:t=t||this.nextId(),n&&(n.context="inputs"===h.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",e.name)+"?l:s"),n.computed=!1,n.name=e.name),tn(e.name),h.if_("inputs"===h.stage||h.not(h.getHasOwnProperty("l",e.name)),function(){h.if_("inputs"===h.stage||"s",function(){o&&1!==o&&h.if_(h.not(h.nonComputedMember("s",e.name)),h.lazyAssign(h.nonComputedMember("s",e.name),"{}")),h.assign(t,h.nonComputedMember("s",e.name))})},t&&h.lazyAssign(t,h.nonComputedMember("l",e.name))),(h.state.expensiveChecks||gn(e.name))&&h.addEnsureSafeObject(t),i(t);break;case Lo.MemberExpression:s=n&&(n.context=this.nextId())||this.nextId(),t=t||this.nextId(),h.recurse(e.object,s,void 0,function(){h.if_(h.notNull(s),function(){o&&1!==o&&h.addEnsureSafeAssignContext(s),e.computed?(u=h.nextId(),h.recurse(e.property,u),h.getStringValue(u),h.addEnsureSafeMemberName(u),o&&1!==o&&h.if_(h.not(h.computedMember(s,u)),h.lazyAssign(h.computedMember(s,u),"{}")),l=h.ensureSafeObject(h.computedMember(s,u)),h.assign(t,l),n&&(n.computed=!0,n.name=u)):(tn(e.property.name),o&&1!==o&&h.if_(h.not(h.nonComputedMember(s,e.property.name)),h.lazyAssign(h.nonComputedMember(s,e.property.name),"{}")),l=h.nonComputedMember(s,e.property.name),(h.state.expensiveChecks||gn(e.property.name))&&(l=h.ensureSafeObject(l)),h.assign(t,l),n&&(n.computed=!1,n.name=e.property.name))},function(){h.assign(t,"undefined")}),i(t)},!!o);break;case Lo.CallExpression:t=t||this.nextId(),e.filter?(u=h.filter(e.callee.name),c=[],r(e.arguments,function(e){var t=h.nextId();h.recurse(e,t),c.push(t)}),l=u+"("+c.join(",")+")",h.assign(t,l),i(t)):(u=h.nextId(),s={},c=[],h.recurse(e.callee,u,s,function(){h.if_(h.notNull(u),function(){h.addEnsureSafeFunction(u),r(e.arguments,function(e){h.recurse(e,h.nextId(),void 0,function(e){c.push(h.ensureSafeObject(e))})}),s.name?(h.state.expensiveChecks||h.addEnsureSafeObject(s.context),l=h.member(s.context,s.name,s.computed)+"("+c.join(",")+")"):l=u+"("+c.join(",")+")",l=h.ensureSafeObject(l),h.assign(t,l)},function(){h.assign(t,"undefined")}),i(t)}));break;case Lo.AssignmentExpression:if(u=this.nextId(),s={},!hn(e.left))throw xo("lval","Trying to assign a value to a non l-value");this.recurse(e.left,void 0,s,function(){h.if_(h.notNull(s.context),function(){h.recurse(e.right,u),h.addEnsureSafeObject(h.member(s.context,s.name,s.computed)),h.addEnsureSafeAssignContext(s.context),l=h.member(s.context,s.name,s.computed)+e.operator+u,h.assign(t,l),i(t||l)})},1);break;case Lo.ArrayExpression:c=[],r(e.elements,function(e){h.recurse(e,h.nextId(),void 0,function(e){c.push(e)})}),l="["+c.join(",")+"]",this.assign(t,l),i(l);break;case Lo.ObjectExpression:c=[],f=!1,r(e.properties,function(e){e.computed&&(f=!0)}),f?(t=t||this.nextId(),this.assign(t,"{}"),r(e.properties,function(e){e.computed?(s=h.nextId(),h.recurse(e.key,s)):s=e.key.type===Lo.Identifier?e.key.name:""+e.key.value,u=h.nextId(),h.recurse(e.value,u),h.assign(h.member(t,s,e.computed),u)})):(r(e.properties,function(t){h.recurse(t.value,e.constant?void 0:h.nextId(),void 0,function(e){c.push(h.escape(t.key.type===Lo.Identifier?t.key.name:""+t.key.value)+":"+e)})}),l="{"+c.join(",")+"}",this.assign(t,l)),i(t||l);break;case Lo.ThisExpression:this.assign(t,"s"),i("s");break;case Lo.LocalsExpression:this.assign(t,"l"),i("l");break;case Lo.NGValueParameter:this.assign(t,"v"),i("v")}},getHasOwnProperty:function(e,t){var n=e+"."+t,r=this.current().own;return r.hasOwnProperty(n)||(r[n]=this.nextId(!1,e+"&&("+this.escape(t)+" in "+e+")")),r[n]},assign:function(e,t){if(e)return this.current().body.push(e,"=",t,";"),e},filter:function(e){return this.state.filters.hasOwnProperty(e)||(this.state.filters[e]=this.nextId(!0)),this.state.filters[e]},ifDefined:function(e,t){return"ifDefined("+e+","+this.escape(t)+")"},plus:function(e,t){return"plus("+e+","+t+")"},return_:function(e){this.current().body.push("return ",e,";")},if_:function(e,t,n){if(e===!0)t();else{var r=this.current().body;r.push("if(",e,"){"),t(),r.push("}"),n&&(r.push("else{"),n(),r.push("}"))}},not:function(e){return"!("+e+")"},notNull:function(e){return e+"!=null"},nonComputedMember:function(e,t){var n=/^[$_a-zA-Z][$_a-zA-Z0-9]*$/,r=/[^$_a-zA-Z0-9]/g;return n.test(t)?e+"."+t:e+'["'+t.replace(r,this.stringEscapeFn)+'"]'},computedMember:function(e,t){return e+"["+t+"]"},member:function(e,t,n){return n?this.computedMember(e,t):this.nonComputedMember(e,t)},addEnsureSafeObject:function(e){this.current().body.push(this.ensureSafeObject(e),";")},addEnsureSafeMemberName:function(e){this.current().body.push(this.ensureSafeMemberName(e),";")},addEnsureSafeFunction:function(e){this.current().body.push(this.ensureSafeFunction(e),";")},addEnsureSafeAssignContext:function(e){this.current().body.push(this.ensureSafeAssignContext(e),";")},ensureSafeObject:function(e){return"ensureSafeObject("+e+",text)"},ensureSafeMemberName:function(e){return"ensureSafeMemberName("+e+",text)"},ensureSafeFunction:function(e){return"ensureSafeFunction("+e+",text)"},getStringValue:function(e){this.assign(e,"getStringValue("+e+")")},ensureSafeAssignContext:function(e){return"ensureSafeAssignContext("+e+",text)"},lazyRecurse:function(e,t,n,r,i,o){var a=this;return function(){a.recurse(e,t,n,r,i,o)}},lazyAssign:function(e,t){var n=this;return function(){n.assign(e,t)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)},escape:function(e){if(w(e))return"'"+e.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(x(e))return e.toString();if(e===!0)return"true";if(e===!1)return"false";if(null===e)return"null";if("undefined"==typeof e)return"undefined";throw xo("esc","IMPOSSIBLE")},nextId:function(e,t){var n="v"+this.state.nextId++;return e||this.current().vars.push(n+(t?"="+t:"")),n},current:function(){return this.state[this.state.computing]}},mn.prototype={compile:function(e,t){var n=this,i=this.astBuilder.ast(e);this.expression=e,this.expensiveChecks=t,ln(i,n.$filter);var o,a;(o=pn(i))&&(a=this.recurse(o));var s,u=fn(i.body);u&&(s=[],r(u,function(e,t){var r=n.recurse(e);e.input=r,s.push(r),e.watchId=t}));var c=[];r(i.body,function(e){c.push(n.recurse(e.expression))});var l=0===i.body.length?p:1===i.body.length?c[0]:function(e,t){var n;return r(c,function(r){n=r(e,t)}),n};return a&&(l.assign=function(e,t,n){return a(e,n,t)}),s&&(l.inputs=s),l.literal=dn(i),l.constant=$n(i),l},recurse:function(e,t,n){var i,o,a,s=this;if(e.input)return this.inputs(e.input,e.watchId);switch(e.type){case Lo.Literal:return this.value(e.value,t);case Lo.UnaryExpression:return o=this.recurse(e.argument),this["unary"+e.operator](o,t);case Lo.BinaryExpression:return i=this.recurse(e.left),o=this.recurse(e.right),this["binary"+e.operator](i,o,t);case Lo.LogicalExpression:return i=this.recurse(e.left),o=this.recurse(e.right),this["binary"+e.operator](i,o,t);case Lo.ConditionalExpression:return this["ternary?:"](this.recurse(e.test),this.recurse(e.alternate),this.recurse(e.consequent),t);case Lo.Identifier:return tn(e.name,s.expression),s.identifier(e.name,s.expensiveChecks||gn(e.name),t,n,s.expression);case Lo.MemberExpression:return i=this.recurse(e.object,!1,!!n),e.computed||(tn(e.property.name,s.expression),o=e.property.name),e.computed&&(o=this.recurse(e.property)),e.computed?this.computedMember(i,o,t,n,s.expression):this.nonComputedMember(i,o,s.expensiveChecks,t,n,s.expression);case Lo.CallExpression:return a=[],r(e.arguments,function(e){a.push(s.recurse(e))}),e.filter&&(o=this.$filter(e.callee.name)),e.filter||(o=this.recurse(e.callee,!0)),e.filter?function(e,n,r,i){for(var s=[],u=0;u<a.length;++u)s.push(a[u](e,n,r,i));var c=o.apply(void 0,s,i);return t?{context:void 0,name:void 0,value:c}:c}:function(e,n,r,i){var u,c=o(e,n,r,i);if(null!=c.value){rn(c.context,s.expression),on(c.value,s.expression);for(var l=[],f=0;f<a.length;++f)l.push(rn(a[f](e,n,r,i),s.expression));u=rn(c.value.apply(c.context,l),s.expression)}return t?{value:u}:u};case Lo.AssignmentExpression:return i=this.recurse(e.left,!0,1),o=this.recurse(e.right),function(e,n,r,a){var u=i(e,n,r,a),c=o(e,n,r,a);return rn(u.value,s.expression),an(u.context),u.context[u.name]=c,t?{value:c}:c};case Lo.ArrayExpression:return a=[],r(e.elements,function(e){a.push(s.recurse(e))}),function(e,n,r,i){for(var o=[],s=0;s<a.length;++s)o.push(a[s](e,n,r,i));return t?{value:o}:o};case Lo.ObjectExpression:return a=[],r(e.properties,function(e){e.computed?a.push({key:s.recurse(e.key),computed:!0,value:s.recurse(e.value)}):a.push({key:e.key.type===Lo.Identifier?e.key.name:""+e.key.value,computed:!1,value:s.recurse(e.value)})}),function(e,n,r,i){for(var o={},s=0;s<a.length;++s)a[s].computed?o[a[s].key(e,n,r,i)]=a[s].value(e,n,r,i):o[a[s].key]=a[s].value(e,n,r,i);return t?{value:o}:o};case Lo.ThisExpression:return function(e){return t?{value:e}:e};case Lo.LocalsExpression:return function(e,n){return t?{value:n}:n};case Lo.NGValueParameter:return function(e,n,r){return t?{value:r}:r}}},"unary+":function(e,t){return function(n,r,i,o){var a=e(n,r,i,o);return a=g(a)?+a:0,t?{value:a}:a}},"unary-":function(e,t){return function(n,r,i,o){var a=e(n,r,i,o);return a=g(a)?-a:0,t?{value:a}:a}},"unary!":function(e,t){return function(n,r,i,o){var a=!e(n,r,i,o);return t?{value:a}:a}},"binary+":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a),u=t(r,i,o,a),c=un(s,u);return n?{value:c}:c}},"binary-":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a),u=t(r,i,o,a),c=(g(s)?s:0)-(g(u)?u:0);return n?{value:c}:c}},"binary*":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)*t(r,i,o,a);return n?{value:s}:s}},"binary/":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)/t(r,i,o,a);return n?{value:s}:s}},"binary%":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)%t(r,i,o,a);return n?{value:s}:s}},"binary===":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)===t(r,i,o,a);return n?{value:s}:s}},"binary!==":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)!==t(r,i,o,a);return n?{value:s}:s}},"binary==":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)==t(r,i,o,a);return n?{value:s}:s}},"binary!=":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)!=t(r,i,o,a);return n?{value:s}:s}},"binary<":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)<t(r,i,o,a);return n?{value:s}:s}},"binary>":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)>t(r,i,o,a);return n?{value:s}:s}},"binary<=":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)<=t(r,i,o,a);return n?{value:s}:s}},"binary>=":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)>=t(r,i,o,a);return n?{value:s}:s}},"binary&&":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)&&t(r,i,o,a);return n?{value:s}:s}},"binary||":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a)||t(r,i,o,a);return n?{value:s}:s}},"ternary?:":function(e,t,n,r){return function(i,o,a,s){var u=e(i,o,a,s)?t(i,o,a,s):n(i,o,a,s);return r?{value:u}:u}},value:function(e,t){return function(){return t?{context:void 0,name:void 0,value:e}:e}},identifier:function(e,t,n,r,i){return function(o,a,s,u){var c=a&&e in a?a:o;r&&1!==r&&c&&!c[e]&&(c[e]={});var l=c?c[e]:void 0;return t&&rn(l,i),n?{context:c,name:e,value:l}:l}},computedMember:function(e,t,n,r,i){return function(o,a,s,u){var c,l,f=e(o,a,s,u);return null!=f&&(c=t(o,a,s,u),c=nn(c),tn(c,i),r&&1!==r&&(an(f),f&&!f[c]&&(f[c]={})),l=f[c],rn(l,i)),n?{context:f,name:c,value:l}:l}},nonComputedMember:function(e,t,n,r,i,o){return function(a,s,u,c){var l=e(a,s,u,c);i&&1!==i&&(an(l),l&&!l[t]&&(l[t]={}));var f=null!=l?l[t]:void 0;return(n||gn(t))&&rn(f,o),r?{context:l,name:t,value:f}:f}},inputs:function(e,t){return function(n,r,i,o){return o?o[t]:e(n,r,i)}}};var Ho=function(e,t,n){this.lexer=e,this.$filter=t,this.options=n,this.ast=new Lo(e,n),this.astCompiler=n.csp?new mn(this.ast,t):new vn(this.ast,t)};Ho.prototype={constructor:Ho,parse:function(e){return this.astCompiler.compile(e,this.options.expensiveChecks)}};var Bo=t("$sce"),zo={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Wo=t("$compile"),Go=e.document.createElement("a"),Zo=Dn(e.location.href);_n.$inject=["$document"],Un.$inject=["$provide"];var Jo=22,Yo=".",Ko="0";zn.$inject=["$locale"],Wn.$inject=["$locale"];var Xo={yyyy:Kn("FullYear",4,0,!1,!0),yy:Kn("FullYear",2,0,!0,!0),y:Kn("FullYear",1,0,!1,!0),MMMM:Xn("Month"),MMM:Xn("Month",!0),MM:Kn("Month",2,1),M:Kn("Month",1,1),LLLL:Xn("Month",!1,!0),dd:Kn("Date",2),d:Kn("Date",1),HH:Kn("Hours",2),H:Kn("Hours",1),hh:Kn("Hours",2,-12),h:Kn("Hours",1,-12),mm:Kn("Minutes",2),m:Kn("Minutes",1),ss:Kn("Seconds",2),s:Kn("Seconds",1),sss:Kn("Milliseconds",3),EEEE:Xn("Day"),EEE:Xn("Day",!0),a:rr,Z:Qn,ww:nr(2),w:nr(1),G:ir,GG:ir,GGG:ir,GGGG:or},Qo=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,ea=/^\-?\d+$/;ar.$inject=["$locale"];var ta=$(Ur),na=$(Fr);lr.$inject=["$parse"];var ra=$({restrict:"E",compile:function(e,t){if(!t.href&&!t.xlinkHref)return function(e,t){if("a"===t[0].nodeName.toLowerCase()){var n="[object SVGAnimatedString]"===Kr.call(t.prop("href"))?"xlink:href":"href";t.on("click",function(e){t.attr(n)||e.preventDefault()})}}}}),ia={};r(Pi,function(e,t){function n(e,n,i){e.$watch(i[r],function(e){i.$set(t,!!e)})}if("multiple"!==e){var r=mt("ng-"+t),i=n;"checked"===e&&(i=function(e,t,i){i.ngModel!==i[r]&&n(e,t,i)}),ia[r]=function(){return{restrict:"A",priority:100,link:i}}}}),r(_i,function(e,t){ia[t]=function(){return{priority:100,link:function(e,n,r){if("ngPattern"===t&&"/"===r.ngPattern.charAt(0)){var i=r.ngPattern.match(Rr);if(i)return void r.$set("ngPattern",new RegExp(i[1],i[2]))}e.$watch(r[t],function(e){r.$set(t,e)})}}}}),r(["src","srcset","href"],function(e){var t=mt("ng-"+e);ia[t]=function(){return{priority:99,link:function(n,r,i){var o=e,a=e;"href"===e&&"[object SVGAnimatedString]"===Kr.call(r.prop("href"))&&(a="xlinkHref",i.$attr[a]="xlink:href",o=null),i.$observe(t,function(t){return t?(i.$set(a,t),void(Br&&o&&r.prop(o,i[a]))):void("href"===e&&i.$set(a,null))})}}}});var oa={$addControl:p,$$renameControl:hr,$removeControl:p,$setValidity:p,$setDirty:p,$setPristine:p,$setSubmitted:p},aa="ng-submitted";pr.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var sa=function(e){return["$timeout","$parse",function(t,n){function r(e){return""===e?n('this[""]').assign:n(e).assign||p}var i={name:"form",restrict:e?"EAC":"E",require:["form","^^?form"],controller:pr,compile:function(n,i){n.addClass(Ha).addClass(Fa);var o=i.name?"name":!(!e||!i.ngForm)&&"ngForm";return{pre:function(e,n,i,a){var s=a[0];if(!("action"in i)){var u=function(t){e.$apply(function(){s.$commitViewValue(),s.$setSubmitted()}),t.preventDefault()};Ci(n[0],"submit",u),n.on("$destroy",function(){t(function(){Si(n[0],"submit",u)},0,!1)})}var l=a[1]||s.$$parentForm;l.$addControl(s);var f=o?r(s.$name):p;o&&(f(e,s),i.$observe(o,function(t){s.$name!==t&&(f(e,void 0),s.$$parentForm.$$renameControl(s,t),(f=r(s.$name))(e,s))})),n.on("$destroy",function(){s.$$parentForm.$removeControl(s),f(e,void 0),c(s,oa)})}}}};return i}]},ua=sa(),ca=sa(!0),la=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,fa=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,ha=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,pa=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,da=/^(\d{4,})-(\d{2})-(\d{2})$/,$a=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,va=/^(\d{4,})-W(\d\d)$/,ma=/^(\d{4,})-(\d\d)$/,ga=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,ya="keydown wheel mousedown",ba=$e();r("date,datetime-local,month,time,week".split(","),function(e){ba[e]=!0});var wa={text:$r,date:yr("date",da,gr(da,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":yr("datetimelocal",$a,gr($a,["yyyy","MM","dd","HH","mm","ss","sss"]),"yyyy-MM-ddTHH:mm:ss.sss"),time:yr("time",ga,gr(ga,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:yr("week",va,mr,"yyyy-Www"),month:yr("month",ma,gr(ma,["yyyy","MM"]),"yyyy-MM"),number:Ar,url:Or,email:Mr,radio:Tr,range:kr,checkbox:Nr,hidden:p,button:p,submit:p,reset:p,file:p},xa=["$browser","$sniffer","$filter","$parse",function(e,t,n,r){return{restrict:"E",require:["?ngModel"],link:{pre:function(i,o,a,s){if(s[0]){var u=Ur(a.type);"range"!==u||a.hasOwnProperty("ngInputRange")||(u="text"),(wa[u]||wa.text)(i,o,a,s[0],t,e,n,r)}}}}}],Ca=/^(true|false|\d+)$/,Sa=function(){return{restrict:"A",priority:100,compile:function(e,t){return Ca.test(t.ngValue)?function(e,t,n){n.$set("value",e.$eval(n.ngValue))}:function(e,t,n){e.$watch(n.ngValue,function(e){n.$set("value",e)})}}}},Ea=["$compile",function(e){return{restrict:"AC",compile:function(t){return e.$$addBindingClass(t),function(t,n,r){e.$$addBindingInfo(n,r.ngBind),n=n[0],t.$watch(r.ngBind,function(e){n.textContent=m(e)?"":e})}}}}],Aa=["$interpolate","$compile",function(e,t){return{compile:function(n){return t.$$addBindingClass(n),function(n,r,i){var o=e(r.attr(i.$attr.ngBindTemplate));t.$$addBindingInfo(r,o.expressions),r=r[0],i.$observe("ngBindTemplate",function(e){r.textContent=m(e)?"":e})}}}}],ka=["$sce","$parse","$compile",function(e,t,n){return{restrict:"A",compile:function(r,i){var o=t(i.ngBindHtml),a=t(i.ngBindHtml,function(t){return e.valueOf(t)});return n.$$addBindingClass(r),function(t,r,i){n.$$addBindingInfo(r,i.ngBindHtml),t.$watch(a,function(){var n=o(t);r.html(e.getTrustedHtml(n)||"")})}}}}],Oa=$({restrict:"A",require:"ngModel",link:function(e,t,n,r){r.$viewChangeListeners.push(function(){e.$eval(n.ngChange)})}}),Ma=jr("",!0),Ta=jr("Odd",0),Va=jr("Even",1),Na=fr({compile:function(e,t){t.$set("ngCloak",void 0),e.removeClass("ng-cloak")}}),ja=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],Ia={},Da={blur:!0,focus:!0};r("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(e){var t=mt("ng-"+e);Ia[t]=["$parse","$rootScope",function(n,r){return{restrict:"A",compile:function(i,o){var a=n(o[t],null,!0);return function(t,n){n.on(e,function(n){var i=function(){a(t,{$event:n})};Da[e]&&r.$$phase?t.$evalAsync(i):t.$apply(i)})}}}}]});var Pa=["$animate","$compile",function(e,t){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(n,r,i,o,a){var s,u,c;n.$watch(i.ngIf,function(n){n?u||a(function(n,o){u=o,n[n.length++]=t.$$createComment("end ngIf",i.ngIf),s={clone:n},e.enter(n,r.parent(),r)}):(c&&(c.remove(),c=null),u&&(u.$destroy(),u=null),s&&(c=de(s.clone),e.leave(c).then(function(){c=null}),s=null))})}}}],Ra=["$templateRequest","$anchorScroll","$animate",function(e,t,n){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:ei.noop,compile:function(r,i){var o=i.ngInclude||i.src,a=i.onload||"",s=i.autoscroll;return function(r,i,u,c,l){var f,h,p,d=0,$=function(){h&&(h.remove(),h=null),f&&(f.$destroy(),f=null),p&&(n.leave(p).then(function(){h=null}),h=p,p=null)};r.$watch(o,function(o){var u=function(){!g(s)||s&&!r.$eval(s)||t()},h=++d;o?(e(o,!0).then(function(e){if(!r.$$destroyed&&h===d){var t=r.$new();c.template=e;var s=l(t,function(e){$(),n.enter(e,null,i).then(u)});f=t,p=s,f.$emit("$includeContentLoaded",o),r.$eval(a)}},function(){r.$$destroyed||h===d&&($(),r.$emit("$includeContentError",o))}),r.$emit("$includeContentRequested",o)):($(),c.template=null)})}}}}],_a=["$compile",function(t){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(n,r,i,o){return Kr.call(r[0]).match(/SVG/)?(r.empty(),void t(ke(o.template,e.document).childNodes)(n,function(e){r.append(e)},{futureParentElement:r})):(r.html(o.template),void t(r.contents())(n))}}}],qa=fr({priority:450,compile:function(){return{pre:function(e,t,n){e.$eval(n.ngInit)}}}}),Ua=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(e,t,n,i){var o=t.attr(n.$attr.ngList)||", ",a="false"!==n.ngTrim,s=a?oi(o):o,u=function(e){if(!m(e)){var t=[];return e&&r(e.split(s),function(e){e&&t.push(a?oi(e):e)}),t}};i.$parsers.push(u),i.$formatters.push(function(e){if(ri(e))return e.join(o)}),i.$isEmpty=function(e){return!e||!e.length}}}},Fa="ng-valid",La="ng-invalid",Ha="ng-pristine",Ba="ng-dirty",za="ng-untouched",Wa="ng-touched",Ga="ng-pending",Za="ng-empty",Ja="ng-not-empty",Ya=t("ngModel"),Ka=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(e,t,n,i,o,a,s,u,c,l){this.$viewValue=Number.NaN,this.$modelValue=Number.NaN,this.$$rawModelValue=void 0,this.$validators={},this.$asyncValidators={},this.$parsers=[],this.$formatters=[],this.$viewChangeListeners=[],this.$untouched=!0,this.$touched=!1,this.$pristine=!0,this.$dirty=!1,this.$valid=!0,this.$invalid=!1,this.$error={},this.$$success={},this.$pending=void 0,this.$name=l(n.name||"",!1)(e),this.$$parentForm=oa;var f,h=o(n.ngModel),d=h.assign,$=h,v=d,y=null,b=this;this.$$setOptions=function(e){if(b.$options=e,e&&e.getterSetter){var t=o(n.ngModel+"()"),r=o(n.ngModel+"($$$p)");$=function(e){var n=h(e);return S(n)&&(n=t(e)),n},v=function(e,t){S(h(e))?r(e,{$$$p:t}):d(e,t)}}else if(!h.assign)throw Ya("nonassign","Expression '{0}' is non-assignable. Element: {1}",n.ngModel,Y(i))},this.$render=p,this.$isEmpty=function(e){return m(e)||""===e||null===e||e!==e},this.$$updateEmptyClasses=function(e){b.$isEmpty(e)?(a.removeClass(i,Ja),a.addClass(i,Za)):(a.removeClass(i,Za),a.addClass(i,Ja))};var w=0;Ir({ctrl:this,$element:i,set:function(e,t){e[t]=!0},unset:function(e,t){delete e[t]},$animate:a}),this.$setPristine=function(){b.$dirty=!1,b.$pristine=!0,a.removeClass(i,Ba),a.addClass(i,Ha)},this.$setDirty=function(){b.$dirty=!0,b.$pristine=!1,a.removeClass(i,Ha),a.addClass(i,Ba),b.$$parentForm.$setDirty()},this.$setUntouched=function(){b.$touched=!1,b.$untouched=!0,a.setClass(i,za,Wa)},this.$setTouched=function(){b.$touched=!0,b.$untouched=!1,a.setClass(i,Wa,za)},this.$rollbackViewValue=function(){s.cancel(y),b.$viewValue=b.$$lastCommittedViewValue,b.$render()},this.$validate=function(){if(!ni(b.$modelValue)){var e=b.$$lastCommittedViewValue,t=b.$$rawModelValue,n=b.$valid,r=b.$modelValue,i=b.$options&&b.$options.allowInvalid;b.$$runValidators(t,e,function(e){i||n===e||(b.$modelValue=e?t:void 0,b.$modelValue!==r&&b.$$writeModelToScope())})}},this.$$runValidators=function(e,t,n){function i(){var e=b.$$parserName||"parse";return m(f)?(s(e,null),!0):(f||(r(b.$validators,function(e,t){s(t,null)}),r(b.$asyncValidators,function(e,t){s(t,null)})),s(e,f),f)}function o(){var n=!0;return r(b.$validators,function(r,i){var o=r(e,t);n=n&&o,s(i,o)}),!!n||(r(b.$asyncValidators,function(e,t){s(t,null)}),!1)}function a(){var n=[],i=!0;r(b.$asyncValidators,function(r,o){var a=r(e,t);if(!N(a))throw Ya("nopromise","Expected asynchronous validator to return a promise but got '{0}' instead.",a);s(o,void 0),n.push(a.then(function(){s(o,!0)},function(){i=!1,s(o,!1)}))}),n.length?c.all(n).then(function(){u(i)},p):u(!0)}function s(e,t){l===w&&b.$setValidity(e,t)}function u(e){l===w&&n(e)}w++;var l=w;return i()&&o()?void a():void u(!1)},this.$commitViewValue=function(){var e=b.$viewValue;s.cancel(y),(b.$$lastCommittedViewValue!==e||""===e&&b.$$hasNativeValidators)&&(b.$$updateEmptyClasses(e),b.$$lastCommittedViewValue=e,b.$pristine&&this.$setDirty(),this.$$parseAndValidate())},this.$$parseAndValidate=function(){function t(){b.$modelValue!==o&&b.$$writeModelToScope()}var n=b.$$lastCommittedViewValue,r=n;if(f=!m(r)||void 0)for(var i=0;i<b.$parsers.length;i++)if(r=b.$parsers[i](r),m(r)){f=!1;break}ni(b.$modelValue)&&(b.$modelValue=$(e));var o=b.$modelValue,a=b.$options&&b.$options.allowInvalid;b.$$rawModelValue=r,a&&(b.$modelValue=r,t()),b.$$runValidators(r,b.$$lastCommittedViewValue,function(e){a||(b.$modelValue=e?r:void 0,t())})},this.$$writeModelToScope=function(){v(e,b.$modelValue),r(b.$viewChangeListeners,function(e){try{e()}catch(e){t(e)}})},this.$setViewValue=function(e,t){b.$viewValue=e,b.$options&&!b.$options.updateOnDefault||b.$$debounceViewValueCommit(t)},this.$$debounceViewValueCommit=function(t){var n,r=0,i=b.$options;i&&g(i.debounce)&&(n=i.debounce,x(n)?r=n:x(n[t])?r=n[t]:x(n.default)&&(r=n.default)),s.cancel(y),r?y=s(function(){b.$commitViewValue()},r):u.$$phase?b.$commitViewValue():e.$apply(function(){b.$commitViewValue()})},e.$watch(function(){var t=$(e);if(t!==b.$modelValue&&(b.$modelValue===b.$modelValue||t===t)){b.$modelValue=b.$$rawModelValue=t,f=void 0;for(var n=b.$formatters,r=n.length,i=t;r--;)i=n[r](i);b.$viewValue!==i&&(b.$$updateEmptyClasses(i),b.$viewValue=b.$$lastCommittedViewValue=i,b.$render(),b.$$runValidators(b.$modelValue,b.$viewValue,p))}return t})}],Xa=["$rootScope",function(e){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Ka,priority:1,compile:function(t){return t.addClass(Ha).addClass(za).addClass(Fa),{pre:function(e,t,n,r){var i=r[0],o=r[1]||i.$$parentForm;i.$$setOptions(r[2]&&r[2].$options),o.$addControl(i),n.$observe("name",function(e){i.$name!==e&&i.$$parentForm.$$renameControl(i,e)}),e.$on("$destroy",function(){i.$$parentForm.$removeControl(i)})},post:function(t,n,r,i){var o=i[0];o.$options&&o.$options.updateOn&&n.on(o.$options.updateOn,function(e){o.$$debounceViewValueCommit(e&&e.type)}),n.on("blur",function(){o.$touched||(e.$$phase?t.$evalAsync(o.$setTouched):t.$apply(o.$setTouched))})}}}}}],Qa=/(\s+|^)default(\s+|$)/,es=function(){return{restrict:"A",controller:["$scope","$attrs",function(e,t){var n=this;this.$options=q(e.$eval(t.ngModelOptions)),g(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=oi(this.$options.updateOn.replace(Qa,function(){return n.$options.updateOnDefault=!0," "}))):this.$options.updateOnDefault=!0}]}},ts=fr({terminal:!0,priority:1e3}),ns=t("ngOptions"),rs=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,is=["$compile","$document","$parse",function(t,i,o){function a(e,t,r){function i(e,t,n,r,i){this.selectValue=e,this.viewValue=t,this.label=n,this.group=r,this.disabled=i}function a(e){var t;if(!c&&n(e))t=e;else{t=[];for(var r in e)e.hasOwnProperty(r)&&"$"!==r.charAt(0)&&t.push(r)}return t}var s=e.match(rs);if(!s)throw ns("iexp","Expected expression in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_' but got '{0}'. Element: {1}",e,Y(t));var u=s[5]||s[7],c=s[6],l=/ as /.test(s[0])&&s[1],f=s[9],h=o(s[2]?s[1]:u),p=l&&o(l),d=p||h,$=f&&o(f),v=f?function(e,t){return $(r,t)}:function(e){return Xe(e)},m=function(e,t){return v(e,C(e,t))},g=o(s[2]||s[1]),y=o(s[3]||""),b=o(s[4]||""),w=o(s[8]),x={},C=c?function(e,t){return x[c]=t,x[u]=e,x}:function(e){return x[u]=e,x};return{trackBy:f,getTrackByValue:m,getWatchables:o(w,function(e){var t=[];e=e||[];for(var n=a(e),i=n.length,o=0;o<i;o++){var u=e===n?o:n[o],c=e[u],l=C(c,u),f=v(c,l);if(t.push(f),s[2]||s[1]){var h=g(r,l);t.push(h)}if(s[4]){var p=b(r,l);t.push(p)}}return t}),getOptions:function(){for(var e=[],t={},n=w(r)||[],o=a(n),s=o.length,u=0;u<s;u++){var c=n===o?u:o[u],l=n[c],h=C(l,c),p=d(r,h),$=v(p,h),x=g(r,h),S=y(r,h),E=b(r,h),A=new i($,p,x,S,E);e.push(A),t[$]=A}return{items:e,selectValueMap:t,getOptionFromViewValue:function(e){return t[m(e)]},getViewValueFromOption:function(e){return f?ei.copy(e.viewValue):e.viewValue}}}}}function s(e,n,o,s){function l(e,t){var n=u.cloneNode(!1);t.appendChild(n),f(e,n)}function f(e,t){e.element=t,t.disabled=e.disabled,e.label!==t.label&&(t.label=e.label,t.textContent=e.label),e.value!==t.value&&(t.value=e.selectValue)}function h(){var e=C&&d.readValue();if(C)for(var t=C.items.length-1;t>=0;t--){var r=C.items[t];Be(g(r.group)?r.element.parentNode:r.element)}C=S.getOptions();var i={};if(w&&n.prepend(p),C.items.forEach(function(e){var t;g(e.group)?(t=i[e.group],t||(t=c.cloneNode(!1),E.appendChild(t),t.label=null===e.group?"null":e.group,i[e.group]=t),l(e,t)):l(e,E)}),n[0].appendChild(E),$.$render(),!$.$isEmpty(e)){var o=d.readValue(),a=S.trackBy||v;(a?U(e,o):e===o)||($.$setViewValue(o),$.$render())}}for(var p,d=s[0],$=s[1],v=o.multiple,m=0,y=n.children(),b=y.length;m<b;m++)if(""===y[m].value){p=y.eq(m);break}var w=!!p,x=zr(u.cloneNode(!1));x.val("?");var C,S=a(o.ngOptions,n,e),E=i[0].createDocumentFragment(),A=function(){w||n.prepend(p),n.val(""),p.prop("selected",!0),p.attr("selected",!0)},k=function(){w?p.removeAttr("selected"):p.remove()},O=function(){n.prepend(x),n.val("?"),x.prop("selected",!0),x.attr("selected",!0)},M=function(){x.remove()};v?($.$isEmpty=function(e){return!e||0===e.length},d.writeValue=function(e){C.items.forEach(function(e){e.element.selected=!1}),e&&e.forEach(function(e){var t=C.getOptionFromViewValue(e);t&&(t.element.selected=!0)})},d.readValue=function(){var e=n.val()||[],t=[];return r(e,function(e){var n=C.selectValueMap[e];n&&!n.disabled&&t.push(C.getViewValueFromOption(n))}),t},S.trackBy&&e.$watchCollection(function(){if(ri($.$viewValue))return $.$viewValue.map(function(e){return S.getTrackByValue(e)})},function(){$.$render()})):(d.writeValue=function(e){var t=C.selectValueMap[n.val()],r=C.getOptionFromViewValue(e);t&&t.element.removeAttribute("selected"),r?(n[0].value!==r.selectValue&&(M(),k(),n[0].value=r.selectValue,r.element.selected=!0),r.element.setAttribute("selected","selected")):null===e||w?(M(),A()):(k(),O())},d.readValue=function(){var e=C.selectValueMap[n.val()];return e&&!e.disabled?(k(),
M(),C.getViewValueFromOption(e)):null},S.trackBy&&e.$watch(function(){return S.getTrackByValue($.$viewValue)},function(){$.$render()})),w?(p.remove(),t(p)(e),p.removeClass("ng-scope")):p=zr(u.cloneNode(!1)),n.empty(),h(),e.$watchCollection(S.getWatchables,h)}var u=e.document.createElement("option"),c=e.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(e,t,n,r){r[0].registerOption=p},post:s}}}],os=["$locale","$interpolate","$log",function(e,t,n){var i=/{}/g,o=/^when(Minus)?(.+)$/;return{link:function(a,s,u){function c(e){s.text(e||"")}var l,f=u.count,h=u.$attr.when&&s.attr(u.$attr.when),d=u.offset||0,$=a.$eval(h)||{},v={},g=t.startSymbol(),y=t.endSymbol(),b=g+f+"-"+d+y,w=ei.noop;r(u,function(e,t){var n=o.exec(t);if(n){var r=(n[1]?"-":"")+Ur(n[2]);$[r]=s.attr(u.$attr[t])}}),r($,function(e,n){v[n]=t(e.replace(i,b))}),a.$watch(f,function(t){var r=parseFloat(t),i=ni(r);if(i||r in $||(r=e.pluralCat(r-d)),!(r===l||i&&ni(l))){w();var o=v[r];m(o)?(null!=t&&n.debug("ngPluralize: no rule defined for '"+r+"' in "+h),w=p,c()):w=a.$watch(o,c),l=r}})}}}],as=["$parse","$animate","$compile",function(e,i,o){var a="$$NG_REMOVED",s=t("ngRepeat"),u=function(e,t,n,r,i,o,a){e[n]=r,i&&(e[i]=o),e.$index=t,e.$first=0===t,e.$last=t===a-1,e.$middle=!(e.$first||e.$last),e.$odd=!(e.$even=0===(1&t))},c=function(e){return e.clone[0]},l=function(e){return e.clone[e.clone.length-1]};return{restrict:"A",multiElement:!0,transclude:"element",priority:1e3,terminal:!0,$$tlb:!0,compile:function(t,f){var h=f.ngRepeat,p=o.$$createComment("end ngRepeat",h),d=h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!d)throw s("iexp","Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.",h);var $=d[1],v=d[2],m=d[3],g=d[4];if(d=$.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/),!d)throw s("iidexp","'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.",$);var y=d[3]||d[1],b=d[2];if(m&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(m)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(m)))throw s("badident","alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.",m);var w,x,C,S,E={$id:Xe};return g?w=e(g):(C=function(e,t){return Xe(t)},S=function(e){return e}),function(e,t,o,f,d){w&&(x=function(t,n,r){return b&&(E[b]=t),E[y]=n,E.$index=r,w(e,E)});var $=$e();e.$watchCollection(v,function(o){var f,v,g,w,E,A,k,O,M,T,V,N,j=t[0],I=$e();if(m&&(e[m]=o),n(o))M=o,O=x||C;else{O=x||S,M=[];for(var D in o)qr.call(o,D)&&"$"!==D.charAt(0)&&M.push(D)}for(w=M.length,V=new Array(w),f=0;f<w;f++)if(E=o===M?f:M[f],A=o[E],k=O(E,A,f),$[k])T=$[k],delete $[k],I[k]=T,V[f]=T;else{if(I[k])throw r(V,function(e){e&&e.scope&&($[e.id]=e)}),s("dupes","Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}",h,k,A);V[f]={id:k,scope:void 0,clone:void 0},I[k]=!0}for(var P in $){if(T=$[P],N=de(T.clone),i.leave(N),N[0].parentNode)for(f=0,v=N.length;f<v;f++)N[f][a]=!0;T.scope.$destroy()}for(f=0;f<w;f++)if(E=o===M?f:M[f],A=o[E],T=V[f],T.scope){g=j;do g=g.nextSibling;while(g&&g[a]);c(T)!==g&&i.move(de(T.clone),null,j),j=l(T),u(T.scope,f,y,A,b,E,w)}else d(function(e,t){T.scope=t;var n=p.cloneNode(!1);e[e.length++]=n,i.enter(e,null,j),j=n,T.clone=e,I[T.id]=T,u(T.scope,f,y,A,b,E,w)});$=I})}}}}],ss="ng-hide",us="ng-hide-animate",cs=["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(t,n,r){t.$watch(r.ngShow,function(t){e[t?"removeClass":"addClass"](n,ss,{tempClasses:us})})}}}],ls=["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(t,n,r){t.$watch(r.ngHide,function(t){e[t?"addClass":"removeClass"](n,ss,{tempClasses:us})})}}}],fs=fr(function(e,t,n){e.$watch(n.ngStyle,function(e,n){n&&e!==n&&r(n,function(e,n){t.css(n,"")}),e&&t.css(e)},!0)}),hs=["$animate","$compile",function(e,t){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(n,i,o,a){var s=o.ngSwitch||o.on,u=[],c=[],l=[],f=[],h=function(e,t){return function(){e.splice(t,1)}};n.$watch(s,function(n){var i,o;for(i=0,o=l.length;i<o;++i)e.cancel(l[i]);for(l.length=0,i=0,o=f.length;i<o;++i){var s=de(c[i].clone);f[i].$destroy();var p=l[i]=e.leave(s);p.then(h(l,i))}c.length=0,f.length=0,(u=a.cases["!"+n]||a.cases["?"])&&r(u,function(n){n.transclude(function(r,i){f.push(i);var o=n.element;r[r.length++]=t.$$createComment("end ngSwitchWhen");var a={clone:r};c.push(a),e.enter(r,o.parent(),o)})})})}}}],ps=fr({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(e,t,n,r,i){r.cases["!"+n.ngSwitchWhen]=r.cases["!"+n.ngSwitchWhen]||[],r.cases["!"+n.ngSwitchWhen].push({transclude:i,element:t})}}),ds=fr({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(e,t,n,r,i){r.cases["?"]=r.cases["?"]||[],r.cases["?"].push({transclude:i,element:t})}}),$s=t("ngTransclude"),vs=["$compile",function(e){return{restrict:"EAC",terminal:!0,compile:function(t){var n=e(t.contents());return t.empty(),function(e,t,r,i,o){function a(e,n){e.length?t.append(e):(s(),n.$destroy())}function s(){n(e,function(e){t.append(e)})}if(!o)throw $s("orphan","Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}",Y(t));r.ngTransclude===r.$attr.ngTransclude&&(r.ngTransclude="");var u=r.ngTransclude||r.ngTranscludeSlot;o(a,null,u),u&&!o.isSlotFilled(u)&&s()}}}}],ms=["$templateCache",function(e){return{restrict:"E",terminal:!0,compile:function(t,n){if("text/ng-template"===n.type){var r=n.id,i=t[0].text;e.put(r,i)}}}}],gs={$setViewValue:p,$render:p},ys=["$element","$scope",function(t,n){var r=this,i=new Qe;r.ngModelCtrl=gs,r.unknownOption=zr(e.document.createElement("option")),r.renderUnknownOption=function(e){var n="? "+Xe(e)+" ?";r.unknownOption.val(n),t.prepend(r.unknownOption),t.val(n)},n.$on("$destroy",function(){r.renderUnknownOption=p}),r.removeUnknownOption=function(){r.unknownOption.parent()&&r.unknownOption.remove()},r.readValue=function(){return r.removeUnknownOption(),t.val()},r.writeValue=function(e){r.hasOption(e)?(r.removeUnknownOption(),t.val(e),""===e&&r.emptyOption.prop("selected",!0)):null==e&&r.emptyOption?(r.removeUnknownOption(),t.val("")):r.renderUnknownOption(e)},r.addOption=function(e,t){if(t[0].nodeType!==mi){he(e,'"option value"'),""===e&&(r.emptyOption=t);var n=i.get(e)||0;i.put(e,n+1),r.ngModelCtrl.$render(),Pr(t)}},r.removeOption=function(e){var t=i.get(e);t&&(1===t?(i.remove(e),""===e&&(r.emptyOption=void 0)):i.put(e,t-1))},r.hasOption=function(e){return!!i.get(e)},r.registerOption=function(e,t,n,i,o){if(i){var a;n.$observe("value",function(e){g(a)&&r.removeOption(a),a=e,r.addOption(e,t)})}else o?e.$watch(o,function(e,i){n.$set("value",e),i!==e&&r.removeOption(i),r.addOption(e,t)}):r.addOption(n.value,t);t.on("$destroy",function(){r.removeOption(n.value),r.ngModelCtrl.$render()})}}],bs=function(){function e(e,t,n,i){var o=i[1];if(o){var a=i[0];if(a.ngModelCtrl=o,t.on("change",function(){e.$apply(function(){o.$setViewValue(a.readValue())})}),n.multiple){a.readValue=function(){var e=[];return r(t.find("option"),function(t){t.selected&&e.push(t.value)}),e},a.writeValue=function(e){var n=new Qe(e);r(t.find("option"),function(e){e.selected=g(n.get(e.value))})};var s,u=NaN;e.$watch(function(){u!==o.$viewValue||U(s,o.$viewValue)||(s=me(o.$viewValue),o.$render()),u=o.$viewValue}),o.$isEmpty=function(e){return!e||0===e.length}}}}function t(e,t,n,r){var i=r[1];if(i){var o=r[0];i.$render=function(){o.writeValue(i.$viewValue)}}}return{restrict:"E",require:["select","?ngModel"],controller:ys,priority:1,link:{pre:e,post:t}}},ws=["$interpolate",function(e){return{restrict:"E",priority:100,compile:function(t,n){if(g(n.value))var r=e(n.value,!0);else{var i=e(t.text(),!0);i||n.$set("value",t.text())}return function(e,t,n){var o="$selectController",a=t.parent(),s=a.data(o)||a.parent().data(o);s&&s.registerOption(e,t,n,r,i)}}}}],xs=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,r){r&&(n.required=!0,r.$validators.required=function(e,t){return!n.required||!r.$isEmpty(t)},n.$observe("required",function(){r.$validate()}))}}},Cs=function(){return{restrict:"A",require:"?ngModel",link:function(e,n,r,i){if(i){var o,a=r.ngPattern||r.pattern;r.$observe("pattern",function(e){if(w(e)&&e.length>0&&(e=new RegExp("^"+e+"$")),e&&!e.test)throw t("ngPattern")("noregexp","Expected {0} to be a RegExp but was {1}. Element: {2}",a,e,Y(n));o=e||void 0,i.$validate()}),i.$validators.pattern=function(e,t){return i.$isEmpty(t)||m(o)||o.test(t)}}}}},Ss=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,r){if(r){var i=-1;n.$observe("maxlength",function(e){var t=f(e);i=ni(t)?-1:t,r.$validate()}),r.$validators.maxlength=function(e,t){return i<0||r.$isEmpty(t)||t.length<=i}}}}},Es=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,r){if(r){var i=0;n.$observe("minlength",function(e){i=f(e)||0,r.$validate()}),r.$validators.minlength=function(e,t){return r.$isEmpty(t)||t.length>=i}}}}};return e.angular.bootstrap?void(e.console&&console.log("WARNING: Tried to load angular more than once.")):(ce(),be(ei),ei.module("ngLocale",[],["$provide",function(e){function t(e){e+="";var t=e.indexOf(".");return t==-1?0:e.length-t-1}function n(e,n){var r=n;void 0===r&&(r=Math.min(t(e),3));var i=Math.pow(10,r),o=(e*i|0)%i;return{v:r,f:o}}var r={ZERO:"zero",ONE:"one",TWO:"two",FEW:"few",MANY:"many",OTHER:"other"};e.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:["January","February","March","April","May","June","July","August","September","October","November","December"],SHORTDAY:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],SHORTMONTH:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],STANDALONEMONTH:["January","February","March","April","May","June","July","August","September","October","November","December"],WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a",short:"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-¤",negSuf:"",posPre:"¤",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(e,t){var i=0|e,o=n(e,t);return 1==i&&0==o.v?r.ONE:r.OTHER}})}]),void zr(e.document).ready(function(){ie(e.document,oe)}))}(window),!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
var MS=new function(){"use strict";this.version="0.5.6",console.log("milsymbol.js "+this.version+" - Copyright (c) 2015 Måns Beckman  http://www.spatialillusions.com");var I="http://www.w3.org/2000/svg";"undefined"==typeof parseXML&&(window.parseXML=function(I,E){E=E||document;var R=(new DOMParser).parseFromString(I,"text/xml");return E.adoptNode(R.documentElement)}),this.autoSVG=!0,this._STD2525=!0,this.setStandard=function(I){return"2525"==I?(this._STD2525=!0,!0):"APP6"==I&&(this._STD2525=!1,!0)},this.buildingBlock=function(I,E,R){return{pre:I,post:E,bbox:R}},this.dashArrays={pending:"4,4",anticipated:"8,12",feintDummy:"8,8"},this.setDashArrays=function(I,E,R){return this.dashArrays.pending=I,this.dashArrays.anticipated=E,this.dashArrays.feintDummy=R,this.dashArrays},this.getDashArrays=function(){return this.dashArrays},this.hqStafLength=100,this.getHqStafLength=function(){return this.hqStafLength},this.setHqStafLength=function(I){return this.hqStafLength=I,this.hqStafLength},this._colorModes={},this.getColorMode=function(I){var E=this._colorModes[I],R={};return R.Hostile=E.Hostile,R.Friend=E.Friend,R.Neutral=E.Neutral,R.Unknown=E.Unknown,R.Civilian=E.Civilian,R},this.setColorMode=function(I,E){return this._colorModes[I]={},this._colorModes[I].Hostile=E.Hostile,this._colorModes[I].Friend=E.Friend,this._colorModes[I].Neutral=E.Neutral,this._colorModes[I].Unknown=E.Unknown,this._colorModes[I].Civilian=E.Civilian,this._colorModes[I]},this.colorMode=function(I,E,R,C,A){var S={};return S.Civilian=I,S.Friend=E,S.Hostile=R,S.Neutral=C,S.Unknown=A,S},this.setColorMode("Light",this.colorMode("rgb(255,161,255)","rgb(128,224,255)","rgb(255,128,128)","rgb(170,255,170)","rgb(255,255,128)")),this.setColorMode("Medium",this.colorMode("rgb(128,0,128)","rgb(0,168,220)","rgb(255,48,49)","rgb(0,226,110)","rgb(255,255,0)")),this.setColorMode("Dark",this.colorMode("rgb(80,0,80)","rgb(0,107,140)","rgb(200,0,0)","rgb(0,160,0)","rgb(225,220,0)")),this.setColorMode("FrameColor",this.colorMode("rgb(255,0,255)","rgb(0, 255, 255)","rgb(255, 0, 0)","rgb(0, 255, 0)","rgb(255, 255, 0)")),this.setColorMode("IconColor",this.colorMode("rgb(255,0,255)","rgb(0, 255, 255)","rgb(255, 0, 0)","rgb(0, 255, 0)","rgb(255, 255, 0)")),this.setColorMode("Black",this.colorMode("black","black","black","black","black")),this.setColorMode("White",this.colorMode("white","white","white","white","white")),this.setColorMode("OffWhite",this.colorMode("rgb(239, 239, 239)","rgb(239, 239, 239)","rgb(239, 239, 239)","rgb(239, 239, 239)","rgb(239, 239, 239)")),this.setColorMode("None",this.colorMode(!1,!1,!1,!1,!1)),this._markerParts=[],this.getMarkerParts=function(){var I=this._markerParts;return I},this.setMarkerParts=function(I){this._markerParts=I},this.addMarkerParts=function(I){"function"==typeof I&&MS.setMarkerParts(MS.getMarkerParts().concat(I))},this.bbox=function(I){return void 0==I&&(I={}),{x1:"undefined"!=typeof I.x1?I.x1:50,y1:"undefined"!=typeof I.y1?I.y1:50,x2:"undefined"!=typeof I.x2?I.x2:150,y2:"undefined"!=typeof I.y2?I.y2:150,width:function(){return this.x2-this.x1},height:function(){return this.y2-this.y1}}},this.bboxMax=function(I,E){return MS.bbox({x1:"undefined"==typeof I.x1||E.x1<=I.x1?E.x1:I.x1,y1:"undefined"==typeof I.y1||E.y1<=I.y1?E.y1:I.y1,x2:"undefined"==typeof I.x2||E.x2>=I.x2?E.x2:I.x2,y2:"undefined"==typeof I.y2||E.y2>=I.y2?E.y2:I.y2})},this.translate=function(I,E,R){return{type:"translate",x:I,y:E,draw:[R]}},this.scale=function(I,E){return{type:"translate",x:100-100*I,y:100-100*I,draw:[{type:"scale",factor:I,draw:[E]}]}},this.rotate=function(I,E){return{type:"rotate",degree:I,x:100,y:100,draw:[E]}},this._iconCache={},this._geticnParts=function(I,E,R,C,A){function S(I){var E=42,R=115;1==I.length&&(E=45,R=115),3==I.length&&(E=35,R=110),4==I.length&&(E=32,R=110);var C={type:"text",stroke:!1,textanchor:"middle",x:100,y:R,fontsize:E,text:I};return C}function N(I){var E=30;return 3==I.length&&(E=25),4==I.length&&(E=22),{type:"text",stroke:!1,textanchor:"middle",x:100,y:77,fontsize:E,text:I}}function T(I){var E=30,R=145;return 3==I.length&&(E=25,R=140),4==I.length&&(E=20,R=135),{type:"text",stroke:!1,textanchor:"middle",x:100,y:R,fontsize:E,text:I}}function M(I){if("object"==typeof I){if(Array.isArray(I)){for(var E=0;E<I.length;E++)M.call(this,I[E]);return}return I.icon=!0,"text"==I.type&&(I.hasOwnProperty("fontfamily")||(I.fontfamily="Arial"),I.hasOwnProperty("fontweight")||(I.fontweight="bold"),I.hasOwnProperty("textanchor")||(I.textanchor="middle"),I.hasOwnProperty("stroke")||(I.stroke=!1)),I.hasOwnProperty("fill")||(I.fill=l),void(I.hasOwnProperty("stroke")||(I.stroke=l))}}var t={},L=I.frame,O=I.affiliation,G=I.baseGeometry,e=I.numberSIDC,l=(E.fillColor[O],E.iconColor[O]),U=E.iconFillColor[O],c=E.none[O],i=E.black[O],h=E.white[O];t["SP.I.FF.SATELLITE"]=[{type:"path",stroke:!1,d:"m 115,70 20,0 0,55 -20,0 z m -25,5 20,0 0,45 -20,0 z m -25,-5 20,0 0,55 -20,0 z"},{type:"path",fill:!1,d:"M80,135 c10,-10 30,-10 40,0 M100,127 L100,100 M70,100 L130,100"}],t["SP.I.FF.CREWED SPACE VEHICLE"]={type:"path",stroke:!1,d:"m 100.3,62.4 c -1.8,-0 -4.3,3.7 -4.5,5.4 -2.5,11.3 -3.4,23.1 -6.2,33.4 -2.9,6.7 -6.8,8.3 -9.9,12.1 -3,3.6 -8.5,10.4 -8.5,10.4 l 0,6.4 c 0,0 5.9,0.9 8.9,1.2 3,0.2 8.7,0.1 8.7,0.1 l 0.3,4.3 4.3,0.2 0.2,3.1 5.8,0 0.9,6.5 0.9,-6.4 5.8,0 0.2,-3.1 4.3,-0.2 0.3,-4.3 c 0,0 5.7,0.1 8.7,-0.1 3,-0.2 8.9,-1.2 8.9,-1.2 l 0,-6.4 c 0,0 -5.5,-6.7 -8.5,-10.3 -3.1,-3.8 -7,-5.4 -9.9,-12.1 -2.8,-10.4 -3.7,-22.2 -6.2,-33.4 -0.3,-2.9 -2.7,-5.5 -4.5,-5.5 z"},t["SP.I.FF.SPACE STATION"]=[{type:"path",d:"m 103.1,97.4 c -12.4,0.3 -25.7,0.1 -36.7,6.7 -4.1,2.1 -8.5,5.9 -7.8,11 0.2,3.7 0.3,7.4 0.5,11.1 6.2,7.8 16.6,10.4 26,11.8 14,1.8 28.5,1.2 42.1,-3 5.2,-1.7 10.4,-4.3 14.2,-8.3 0.3,-5.1 -0.3,-10.4 0.7,-15.3 -1.2,-4.3 -5.9,-6.4 -9.7,-8.2 -9.2,-4 -19.3,-5.4 -29.2,-5.6 z m -3.2,9.6 c 10.1,-0.2 20.5,1.9 29.1,7.4 -13,8.4 -29.6,9.7 -44.3,6.1 -4.9,-1.3 -9.7,-3.3 -13.7,-6.4 8.8,-4.9 18.9,-6.9 28.9,-7.2 z",fill:R?U:c},{type:"path",fill:!1,stroke:"black",d:"m 96.9,107 c 0.7,-8.1 1.4,-16.3 2.1,-24.4 M 89.3,121.8 c 3.1,-13.2 6.2,-26.3 9.3,-39.5 4.9,12.7 9.7,25.5 14.6,38.2 m 27.8,-5.3 c -0.1,3.9 -0.2,7.8 -0.3,11.6 M 58.6,113.3 c 0.2,4.5 0.3,9 0.5,13.5 m -0.5,-1.2 c 3.5,6.3 11,8.6 17.6,10.5 16.4,4.1 33.9,3.9 50.1,-0.8 5.5,-1.8 11.8,-4.3 14.7,-9.7 m 0.5,-13 c -0.5,5.4 -6.1,8.1 -10.5,10 -15.4,5.7 -32.4,6.1 -48.5,3.6 -7.9,-1.4 -16.3,-3.4 -22.2,-9.2 -3.6,-3.9 -0.9,-9.6 3.4,-11.7 8.3,-5.2 18.3,-6.6 27.9,-7.5 13.5,-1 27.5,0 40.2,5.1 4.2,1.8 9.3,4.6 9.7,9.7 z m -13.3,1.6 c -8.2,-5.9 -18.8,-6.8 -28.6,-7 -9.5,0.1 -19.5,1.2 -27.6,6.4 l -0.6,0.5 m 58.9,-2.6 c -0.8,4.8 -6.1,6.4 -10,7.8 -13.2,3.7 -27.4,3.7 -40.5,-0 -3.8,-1.2 -8.1,-2.8 -9.8,-6.7 -0.7,-4.9 5,-7.1 8.7,-8.5 12.7,-4 26.6,-4 39.5,-1 4.4,1.2 9.8,2.8 11.9,7.3 l 0.1,0.5 0,0.5 z"},{type:"path",fill:"black",stroke:!1,d:"M 75.2,93.1 C 88.9,87 102.6,80.8 116.3,74.7 c 2.3,1.3 4.7,2.6 7,3.9 -13.7,6 -27.3,12 -41,18 -2.4,-1.2 -4.8,-2.3 -7.2,-3.5 z"}],t["SP.I.SPACE LAUNCH VEHICLE"]=S("SLV"),t["SP.I.MILITARY"]=S("MIL"),t["SP.I.SPACE VEHICLE"]=S("SV"),t["SP.I.RE-ENTRY VEHICLE"]=S("RV"),t["SPACE.PLANET LANDER"]=S("PL"),t["SP.I.ORBITER SHUTTLE"]={type:"path",d:"m 89,115 6,-25 c 3,-12 7,-12 10,0 l 6,25 -10,0 -1,5 -1,-5 z"},t["SP.I.CAPSULE"]={type:"path",d:"m 85,115 c -2,5 32,5 30,0 l -5,-30 c -1,-5 -19,-5 -20,0 z"},t["SP.I.SATELLITE, GENERAL"]=S("SAT"),t["SP.I.SATELLITE"]={type:"path",d:"m 110,100 10,0 m -40,0 10,0 m -10,-10 -25,0 0,20 25,0 z m 40,0 0,20 25,0 0,-20 z m -30,0 0,20 20,0 0,-20 z"},t["SP.I.ANTISATELLITE WEAPON"]={type:"path",d:"m 100,110 0,9 m 0,-34 0,5 m 0,-9 -2,4 4,0 z m -10,9 0,20 20,0 0,-20 z m 25,0 0,20 25,0 0,-20 z m -30,0 -25,0 0,20 25,0 z m 0,10 5,0 m 20,0 5,0"},t["SP.I.ASTRONOMICAL SATELLITE"]={type:"path",d:"m 97,90 -1,-9 8,0 -1,9 m -5,20 1,9 2,0 1,-9 m 8,-10 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},t["SP.I.BIOSATELLITE"]={type:"path",d:"m 100,89 c 0,4.4 -3.6,8 -8,8 -4.4,0 -8,-3.6 -8,-8 0,-4.4 3.6,-8 8,-8 4.4,0 8,3.6 8,8 z m -10,10 0,20 20,0 0,-20 z m 25,0 0,20 25,0 0,-20 z m -30,0 -25,0 0,20 25,0 z m 0,10 5,0 m 20,0 5,0 m -17,-25 17,10 -1,2 -14,-7"},t["SP.I.COMMUNICATIONS SATELLITE"]=[{type:"path",d:"m 110,109 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},{type:"path",fill:!1,d:"m 100,90 0,9 M 75,81 c 16,12 34,12 50,0"}],t["SP.I.EARTH OBSERVATION SATELLITE"]=[{type:"path",d:"m 107,113 c 0,3.9 -3.1,7 -7,7 -3.9,0 -7,-3.1 -7,-7 0,-3.9 3.1,-7 7,-7 3.9,0 7,3.1 7,7 z m -17,-33 0,20 20,0 0,-20 z m 25,0 0,20 25,0 0,-20 z m -30,0 -25,0 0,20 25,0 z m 0,10 5,0 m 20,0 5,0"},{type:"path",fill:!1,d:"m 88,107 c 8,-9 16,-9 24,0"}],t["SP.I.MINIATURIZED SATELLITE"]=[{type:"path",d:"m 91.1,92 0,16 17.8,0 0,-16 z m 22.2,0 0,16 22.2,0 0,-16 z m -26.6,0 -22.2,0 0,16 22.2,0 z m 0,8 4.4,0 m 17.8,0 4.4,0"},{type:"path",fill:!1,d:"m 90,119 10,-9 10,9 m -20,-38 10,9 10,-9 m 35,9 -10,10 10,10 M 55,90 65,100 55,110"}],t["SP.I.NAVIGATIONAL SATELLITE"]=[{type:"path",d:"m 110,109 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},{type:"path",fill:!1,d:"m 88,87 c 8,6 16,6 24,0 m -20,8 8,-14 8,14"}],t["SP.I.RECONNAISSANCE SATELLITE"]={type:"path",d:"m 106,100 9,20 m -21,-20 -9,20 m 17,-20 3,20 m -7,-20 -3,20 m 15,-30 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},t["SP.I.SPACE STATION"]={type:"path",d:"m 97.5,112.5 0,7.5 5,0 0,-7.5 z m 0,-32.5 5,0 0,26.4 -5,0 z m -0.3,7.6 C 83.3,88.2 72.5,93.5 72.5,100 c 0,6.9 12.3,12.5 27.5,12.5 15.2,0 27.5,-5.6 27.5,-12.5 0,-6.5 -11,-11.9 -25,-12.4 l 0,5.6 c 9.9,0.4 17.5,3.2 17.5,6.6 0,3.7 -8.9,6.7 -19.8,6.7 -10.9,0 -19.8,-3 -19.8,-6.7 0,-3.4 7.4,-6.1 17.1,-6.6 l 0,-5.6 c -0.1,0 -0.2,-0 -0.3,0 z"},t["SP.I.TETHERED SATELLITE"]={type:"path",d:"m 120,87 -20,12 m 33,-12 c 0,3.6 -2.9,6.5 -6.5,6.5 -3.6,0 -6.5,-2.9 -6.5,-6.5 0,-3.6 2.9,-6.5 6.5,-6.5 3.6,0 6.5,2.9 6.5,6.5 z m -23,22 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},t["SP.I.WEATHER SATELLITE"]=[{type:"path",d:"m 110,109 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},{type:"text",stroke:!1,textanchor:"middle",x:100,y:100,fontsize:25,text:"WX"}],t["SP.I.CIVILIAN ORBITER SHUTTLE"]={type:"path",fill:R?U:!L&&U,d:"m 89,115 6,-25 c 3,-12 7,-12 10,0 l 6,25 -10,0 -1,5 -1,-5 z"},t["SP.I.CIVILIAN CAPSULE"]={type:"path",fill:R?U:!L&&U,d:"m 85,115 c -2,5 32,5 30,0 l -5,-30 c -1,-5 -19,-5 -20,0 z"},t["SP.I.CIVILIAN SATELLITE"]={type:"path",fill:R?U:!L&&U,d:"m 110,100 10,0 m -40,0 10,0 m -10,-10 -25,0 0,20 25,0 z m 40,0 0,20 25,0 0,-20 z m -30,0 0,20 20,0 0,-20 z"},t["SP.I.CIVILIAN ASTRONOMICAL SATELLITE"]={type:"path",fill:R?U:!L&&U,d:"m 97,90 -1,-9 8,0 -1,9 m -5,20 1,9 2,0 1,-9 m 8,-10 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},t["SP.I.CIVILIAN BIOSATELLITE"]={type:"path",fill:R?U:!L&&U,d:"m 100,89 c 0,4.4 -3.6,8 -8,8 -4.4,0 -8,-3.6 -8,-8 0,-4.4 3.6,-8 8,-8 4.4,0 8,3.6 8,8 z m -10,10 0,20 20,0 0,-20 z m 25,0 0,20 25,0 0,-20 z m -30,0 -25,0 0,20 25,0 z m 0,10 5,0 m 20,0 5,0 m -17,-25 17,10 -1,2 -14,-7"},t["SP.I.CIVILIAN COMMUNICATIONS SATELLITE"]=[{type:"path",fill:R?U:!L&&U,d:"m 110,109 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},{type:"path",fill:!1,d:"m 100,90 0,9 M 75,81 c 16,12 34,12 50,0"}],t["SP.I.CIVILIAN EARTH OBSERVATION SATELLITE"]=[{type:"path",fill:R?U:!L&&U,d:"m 107,113 c 0,3.9 -3.1,7 -7,7 -3.9,0 -7,-3.1 -7,-7 0,-3.9 3.1,-7 7,-7 3.9,0 7,3.1 7,7 z m -17,-33 0,20 20,0 0,-20 z m 25,0 0,20 25,0 0,-20 z m -30,0 -25,0 0,20 25,0 z m 0,10 5,0 m 20,0 5,0"},{type:"path",fill:!1,d:"m 88,107 c 8,-9 16,-9 24,0"}],t["SP.I.CIVILIAN MINIATURIZED SATELLITE"]=[{type:"path",fill:R?U:!L&&U,d:"m 91.1,92 0,16 17.8,0 0,-16 z m 22.2,0 0,16 22.2,0 0,-16 z m -26.6,0 -22.2,0 0,16 22.2,0 z m 0,8 4.4,0 m 17.8,0 4.4,0"},{type:"path",fill:!1,d:"m 90,119 10,-9 10,9 m -20,-38 10,9 10,-9 m 35,9 -10,10 10,10 M 55,90 65,100 55,110"}],t["SP.I.CIVILIAN NAVIGATIONAL SATELLITE"]=[{type:"path",fill:R?U:!L&&U,d:"m 110,109 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},{type:"path",fill:!1,d:"m 88,87 c 8,6 16,6 24,0 m -20,8 8,-14 8,14"}],t["SP.I.CIVILIAN SPACE STATION"]={type:"path",fill:R?U:!L&&U,d:"m 97.5,112.5 0,7.5 5,0 0,-7.5 z m 0,-32.5 5,0 0,26.4 -5,0 z m -0.3,7.6 C 83.3,88.2 72.5,93.5 72.5,100 c 0,6.9 12.3,12.5 27.5,12.5 15.2,0 27.5,-5.6 27.5,-12.5 0,-6.5 -11,-11.9 -25,-12.4 l 0,5.6 c 9.9,0.4 17.5,3.2 17.5,6.6 0,3.7 -8.9,6.7 -19.8,6.7 -10.9,0 -19.8,-3 -19.8,-6.7 0,-3.4 7.4,-6.1 17.1,-6.6 l 0,-5.6 c -0.1,0 -0.2,-0 -0.3,0 z"},t["SP.I.CIVILIAN TETHERED SATELLITE"]={type:"path",fill:R?U:!L&&U,d:"m 120,87 -20,12 m 33,-12 c 0,3.6 -2.9,6.5 -6.5,6.5 -3.6,0 -6.5,-2.9 -6.5,-6.5 0,-3.6 2.9,-6.5 6.5,-6.5 3.6,0 6.5,2.9 6.5,6.5 z m -23,22 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},t["SP.I.CIVILIAN WEATHER SATELLITE"]=[{type:"path",fill:R?U:!L&&U,d:"m 110,109 5,0 m -30,0 5,0 m -5,-10 -25,0 0,20 25,0 z m 30,0 0,20 25,0 0,-20 z m -25,0 0,20 20,0 0,-20 z"},{type:"text",stroke:!1,textanchor:"middle",x:100,y:95,fontsize:25,text:"WX"}],t["SP.I.MANUAL TRACK"]=S("MAN"),t["SP.M1.LOW EARTH ORBIT (LEO)"]=N("LEO"),t["SP.M1.MEDIUM EARTH ORBIT (MEO)"]=N("MEO"),t["SP.M1.HIGH EARTH ORBIT (HEO)"]=N("HEO"),t["SP.M1.GEOSYNCHRONOUS ORBIT (GSO)"]=N("GSO"),t["SP.M1.GEOSTATIONARY ORBIT (GO)"]=N("GO"),t["SP.M1.MOLNIYA ORBIT (MO)"]=N("MO"),t["SP.M2.OPTICAL"]=T("O"),t["SP.M2.INFRARED"]=T("IR"),t["SP.M2.RADAR"]=T("R"),t["SP.M2.SIGNALS INTELLIGENCE (SIGINT)"]=T("SI"),t["SPACE.MISSILE.M1.BALLISTIC"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"B"},t["SPACE.MISSILE.M1.SPACE"]=[{type:"text",stroke:!1,x:68,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:68,y:125,fontsize:30,text:"P"}],t["SPACE.MISSILE.M1.INTERCEPTOR"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"I"},t["SPACE.MISSILE.M2.SHORT RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["SPACE.MISSILE.M2.MEDIUM RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"M"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["SPACE.MISSILE.M2.INTERMEDIATE RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"I"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["SPACE.MISSILE.M2.LONG RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"L"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["SPACE.MISSILE.M2.INTERCONTINENTAL"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"I"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"C"}],t["SPACE.MISSILE.M2.ARROW"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"A"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["SPACE.MISSILE.M2.GROUND-BASED INTERCEPTOR (GBI)"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"G"},t["SPACE.MISSILE.M2.PATRIOT"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"P"},t["SPACE.MISSILE.M2.STANDARD MISSILE - TERMINAL PHASE (SM-T)"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"T"}],t["SPACE.MISSILE.M2.STANDARD MISSILE - 3 (SM-3)"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"3"}],t["SPACE.MISSILE.M2.TERMINAL HIGH-ALTITUDE AREA DEFENSE (THAAD)"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"T"},t["SPACE.MISSILE.M2.SPACE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"P"}],t["AR.I.MILITARY"]=S("MIL"),t["AR.I.CIVILIAN"]=S("CIV"),t["AR.I.CIVILIAN"].fill=R?U:!L&&U,t["AR.I.CIVILIAN"].stroke=i,t["AR.I.CIVILIAN"].strokewidth=3,t["AR.I.MILITARY FIXED WING"]={type:"path",d:"M100,100 L130,88 c15,0 15,24 0,24 L100,100 70,112 c-15,0 -15,-24 0,-24 Z"},t["AR.I.CIVILIAN FIXED WING"]={type:"path",fill:!1,d:"M100,100 L130,88 c15,0 15,24 0,24 L100,100 70,112 c-15,0 -15,-24 0,-24 Z"},t["AR.I.FF.CIVILIAN FIXED WING"]={type:"path",stroke:i,d:"M62,80 l30,0 0,-10 16,0 0,10 30,0 0,15 -30,0 0,25 10,0 0,5 -36,0 0,-5 10,0 0,-25 -30,0 Z M95,70 l0,-5 10,0 0,5",fill:!!R&&U},t["AR.I.MILITARY ROTARY WING"]={type:"path",d:"M60,85 l40,15 40,-15 0,30 -40,-15 -40,15 z"},t["AR.I.CIVILIAN ROTARY WING"]={type:"path",fill:!!R&&U,stroke:i,d:"M60,85 l40,15 40,-15 0,30 -40,-15 -40,15 z"},t["AR.I.FF.CIVILIAN ROTARY WING"]=[{type:"path",stroke:i,d:"M80,70 l10,10 M120,110 l-10,-10 M80,110 l10,-10 M120,70 l-10,10 M100,115 l0,20 M95,135 l10,0",fill:!1},{type:"path",stroke:i,fill:!!R&&U,d:"m 113,90 c -0.3,8.8 -1.9,20.3 -10.8,24.6 -7.7,2 -12.3,-7.1 -13.8,-13.3 -2.6,-11.5 -2.3,-26 6.9,-34.6 6.0,-4.9 13.1,1.9 14.9,7.8 2,4.9 2.8,10.2 2.8,15.5 z"}],t["AR.I.MILITARY BALLOON"]=[{type:"circle",cx:100,cy:95,r:15},{type:"path",d:"M95,110 l0,10 10,0 0,-10 z"}],t["AR.I.FF.MILITARY BALLOON"]=[{type:"path",d:"M90,115 l20,0 0,20 -20,0 z"},{type:"circle",cx:100,cy:90,r:35}],t["AR.I.CIVILIAN BALLOON"]=[{type:"circle",fill:!!R&&U,stroke:i,cx:100,cy:95,r:15},{type:"path",fill:!!R&&U,stroke:i,d:"M95,110 l0,10 10,0 0,-10 z"}],t["AR.I.FF.CIVILIAN BALLOON"]=[{type:"path",fill:!!R&&U,stroke:i,d:"M90,125 l20,0 0,10 -20,0 z"},{type:"circle",fill:!!R&&U,stroke:i,cx:100,cy:90,r:35}],t["AR.I.MILITARY AIRSHIP"]={type:"path",d:"m 110,110 10,10 10,0 -5,-15 m 0,-10 5,-15 -10,0 -10,10 m 17.2,10 c 0,6.1 -12.2,11.1 -27.2,11.1 -15,0 -27.2,-5 -27.2,-11.1 0,-6.1 12.2,-11.1 27.2,-11.1 15,0 27.2,5 27.2,11.1 z"},t["AR.I.CIVILIAN AIRSHIP"]={type:"path",fill:!!R&&U,stroke:i,d:"m 110,110 10,10 10,0 -5,-15 m 0,-10 5,-15 -10,0 -10,10 m 17.2,10 c 0,6.1 -12.2,11.1 -27.2,11.1 -15,0 -27.2,-5 -27.2,-11.1 0,-6.1 12.2,-11.1 27.2,-11.1 15,0 27.2,5 27.2,11.1 z"},t["AR.I.UNMANNED AERIAL VEHICLE"]={type:"path",d:"M60,90 l40,10 40,-10 0,8 -40,15 -40,-15 Z",stroke:!1},t["AR.I.AIR DECOY"]={type:"path",d:"M65,95 l15,-15 0,30 Z M92.5,95 l15,-15 0,30 Z M120,95 l15,-15 0,30 Z M65,120 l70,0 0,-5 -70,0 Z"},t["SU.IC.AIR DECOY DSymbol"]={type:"path",d:"M 85 81 L 65 98 L 85 119 L 85 81 z M 110 81 L 90 98 L 110 119 L 110 81 z M 135 81 L 115 98 L 135 119 L 135 81 z"},t["AR.I.MEDICAL EVACUATION"]={type:"path",d:"M93,83 l14,0 0,10 10,0 0,14 -10,0 0,10 -14,0 0,-10 -10,0 0,-14 10,0 Z"},t["AR.I.ATTACK/STRIKE"]=S("A"),t["AR.I.BOMBER"]=S("B"),t["AR.I.CARGO"]=S("C"),t["AR.I.ESCORT"]=S("E"),t["AR.I.FIGHTER"]=S("F"),t["AR.I.FIGHTER INTERCEPTOR"]=S("I"),t["AR.I.JAMMER / ELECTRONIC COUNTER-MEASURES"]=S("J"),t["AR.I.TANKER"]=S("K"),t["AR.I.PATROL"]=S("P"),t["AR.I.RECONNAISSANCE"]=S("R"),t["AR.I.2525 PHOTOGRAPHIC"]=S("P"),t["AR.I.TRAINER"]=S("T"),t["AR.I.UTILITY"]=S("U"),t["AR.I.VSTOL"]=S(R&&!e?"L":"V"),t["AR.I.AIRBORNE COMMAND POST"]=S(R&&!e?"D":"ACP"),t["AR.I.AIRBORNE EARLY WARNING"]=S(R&&!e?"W":"AEW"),t["AR.I.ANTISURFACE WARFARE"]=S(R&&!e?"N":"ASUW"),t["AR.I.ANTISUBMARINE WARFARE"]=S(R&&!e?"S":"ASW"),t["AR.I.COMMUNICATIONS"]=S(R&&!e?"Y":"COM"),t["AR.I.COMBAT SEARCH AND RESCUE"]=S("CSAR"),t["AR.I.ELECTRONIC SUPPORT MEASURES"]=S(R?"Z":"ESM"),t["AR.I.GOVERNMENT"]=S("GOV"),t["AR.I.MINE COUNTERMEASURES"]=S("MCM"),t["AR.I.PERSONNEL RECOVERY"]=S(R?"H":"PRO"),t["AR.I.PASSENGER"]=S("PX"),t["AR.I.SEARCH AND RESCUE"]=S("SAR"),t["AR.I.SUPRESSION OF ENEMY AIR DEFENCE"]=S("SEAD"),t["AR.I.SPECIAL OPERATIONS FORCES"]=S("SOF"),t["AR.I.ULTRA LIGHT"]=S("UL"),t["AR.I.VIP"]=S("VIP"),t["AR.I.FF.MILITARY FIXED WING"]={type:"path",d:"m 99.2,58.2 c -3,0.8 -2.5,5.8 -2.5,5.8 l -0.3,16 -37.2,36.5 1.3,4.6 L 96.7,96.6 97,128.6 l -8.5,8.2 0,4.6 9.3,-4.2 c 0.7,0.6 1.8,1.7 1.8,1.7 0,0 1.2,-1.1 1.9,-1.7 l 9.3,4.2 0,-4.6 -8.5,-8.2 0.3,-32 36.2,24.5 1.3,-4.6 -37.2,-36.5 -0.3,-16 c 0,0 0.5,-5 -2.5,-5.8 -0.4,-0.1 -0.7,-0.1 -1.1,0 z",stroke:!1},t["AR.I.FIXED-WING DSymbol"]={type:"path",d:"M 99.4 80.8 C 97.9 81.1 98.1 83.4 98.1 83.4 L 98 90.7 L 78.6 107.4 L 79.3 109.4 L 98.1 98.3 L 98.3 112.9 L 93.9 116.6 L 93.9 118.7 L 98.8 116.8 C 99.1 117 99.7 117.5 99.7 117.5 C 99.7 117.5 100.4 117 100.7 116.8 L 105.6 118.7 L 105.6 116.6 L 101.1 112.9 L 101.3 98.3 L 120.2 109.4 L 120.9 107.4 L 101.5 90.7 L 101.3 83.4 C 101.3 83.4 101.6 81.1 100 80.8 C 99.8 80.8 99.6 80.8 99.4 80.8 z"},t["AR.I.CIVILIAN FIXED-WING DSymbol"]={type:"path",fill:!!R&&U,stroke:i,d:"m 75.1,90.3 19.6,0 0,-6.5 10.5,0 0,6.5 19.6,0 0,9.7 -19.6,0 0,16.2 6.5,0 0,3.2 -23.6,0 0,-3.2 6.5,0 0,-16.2 -19.6,0 z m 21.6,-6.5 0,-3.2 6.5,0 0,3.2"},t["AR.I.FIGHTER/BOMBER"]=S("F/B"),t["AR.I.ELECTRONIC SUPPORT"]=S("ES"),t["AR.I.PERSONNEL RECOVERY DSymbol"]=S("PR"),t["AR.I.PHOTOGRAPHIC RECONNAISSANCE"]=S("PH"),t["AR.I.ELECTRONIC ATTACK (EA)"]=S("EA"),t["AR.I.VERTICAL-TAKEOFF UAV (VT-UAV)"]={type:"path",d:"m 70,85 30,10 30,-10 0,-5 -30,5 -30,-5 z m -10,5 40,15 40,-15 0,30 -40,-15 -40,15 z"},t["AR.I.TETHERED LIGHTER THAN AIR"]={type:"path",d:"M 75,110 85,95 m -5,20 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m 15,-6 0,11 10,0 0,-11 m 10,-14 c 0,8.3 -6.7,15 -15,15 -8.3,0 -15,-6.7 -15,-15 0,-8.3 6.7,-15 15,-15 8.3,0 15,6.7 15,15 z"},t["AR.I.CIVILIAN TETHERED LIGHTER THAN AIR"]={type:"path",fill:!!R&&U,stroke:i,d:"M 75,110 85,95 m -5,20 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m 15,-6 0,11 10,0 0,-11 m 10,-14 c 0,8.3 -6.7,15 -15,15 -8.3,0 -15,-6.7 -15,-15 0,-8.3 6.7,-15 15,-15 8.3,0 15,6.7 15,15 z"},t["AR.I.CIVILIAN UNMANNED AERIAL VEHICLE"]={type:"path",fill:!!R&&U,stroke:i,d:"M60,90 l40,10 40,-10 0,8 -40,15 -40,-15 Z"},t["AR.I.WEAPON"]=S("WPN"),t["AR.I.UNDERWATER DECOY DSymbol"]={type:"path",d:"M 85 81 L 65 98 L 85 119 L 85 81 z M 110 81 L 90 98 L 110 119 L 110 81 z M 135 81 L 115 98 L 135 119 L 135 81 z"},t["AR.I.BOMB"]=S("BOMB"),t["AR.I.MANUAL TRACK"]=S("MAN"),t["AIR.M1.ATTACK"]=N("A"),t["AIR.M1.BOMBER"]=N("B"),t["AIR.M1.CARGO"]=N("C"),t["AIR.M1.FIGHTER"]=N("F"),t["AIR.M1.INTERCEPTOR"]=N("I"),t["AIR.M1.TANKER"]=N("K"),t["AIR.M1.UTILITY"]=N("U"),t["AIR.M1.VSTOL"]=N(R&&!e?"L":"V"),t["AIR.M1.PASSENGER"]=N("PX"),t["AIR.M1.ULTRA LIGHT"]=N("UL"),t["AIR.M1.AIRBORNE COMMAND POST"]=N(R&&!e?"D":"ACP"),t["AIR.M1.ANTISURFACE WARFARE"]=N(R&&!e?"N":"ASUW"),t["AIR.M1.AIRBORNE EARLY WARNING"]=N(R&&!e?"W":"AEW"),t["AIR.M1.GOVERNMENT"]=N("GOV"),t["AIR.M1.MEDEVAC"]={type:"path",stroke:!1,d:"M95.5,80 l9,0 0,-9 9,0 0,-9 -9,0 0,-9 -9,0 0,9 -9,0 0,9 9,0 Z"},t["AIR.M1.ESCORT"]=N("E"),t["AIR.M1.INTENSIVE CARE"]=N("IC"),t["AIR.M1.JAMMER / ELECTRONIC COUNTER-MEASURES"]=N("J"),t["AIR.M1.PATROL"]=N("P"),t["AIR.M1.RECONNAISSANCE"]=N("R"),t["AIR.M1.TRAINER"]=N("T"),t["AIR.M1.PHOTOGRAPHIC"]=N(R&&!e?"X":"PH"),t["AIR.M1.PERSONNEL RECOVERY"]=N("PR"),t["AIR.M1.ANTISUBMARINE WARFARE"]=N(R&&!e?"S":"ASW"),t["AIR.M1.COMMUNICATIONS"]=N(R&&!e?"Y":"COM"),t["AIR.M1.ELECTRONIC SURVEILLANCE MEASURES"]=N(R?"Z":"ESM"),t["AIR.M1.MINE COUNTERMEASURES"]=N("MCM"),t["AIR.M1.SEARCH AND RESCUE"]=N("SAR"),t["AIR.M1.SPECIAL OPERATIONS FORCES"]=N("SOF"),t["AIR.M1.SURFACE WARFARE"]=N("SUW"),t["AIR.M1.VIP"]=N("VIP"),t["AIR.M1.COMBAT SEARCH AND RESCUE"]=N(R&&!e?"H":"CSAR"),t["AIR.M1.SUPRESSION OF ENEMY AIR DEFENCE"]=N("SEAD"),t["AIR.M1.UNMANNED AERIAL VEHICLE"]={type:"translate",x:20,y:-10,draw:[{type:"scale",factor:.8,draw:[t["AR.I.UNMANNED AERIAL VEHICLE"]]}]},t["AIR.M1.BOOM-ONLY"]=N("B"),t["AIR.M1.DROUGE-ONLY"]=N("D"),t["AIR.M1.ELECTRONIC SUPPORT (ES)"]=N("ES"),t["AIR.M1.FIGHTER/BOMBER"]=N("F/B"),t["AIR.M1.ELECTRONIC ATTACK (EA)"]=N("EA"),t["AIR.M1.MULTIMISSION"]=N("MM"),t["AIR.M1.HIJACKING"]=N("H"),t["AIR.M1.ASW HELO-LAMPS"]=N("LP"),t["AIR.M1.ASW HELO - SH-60R"]=N("60R"),t["AIR.M2.HEAVY"]=T("H"),t["AIR.M2.MEDIUM"]=T("M"),t["AIR.M2.LIGHT"]=T("L"),t["AIR.M2.BOOM-ONLY"]=T("B"),t["AIR.M2.DROUGE-ONLY"]=T("D"),t["AIR.M2.BOOM AND DROUGE"]=T("B/D"),t["AIR.M2.CLOSE RANGE"]=T("CR"),t["AIR.M2.SHORT RANGE"]=T("SR"),t["AIR.M2.MEDIUM RANGE"]=T("MR"),t["AIR.M2.LONG RANGE"]=T("LR"),t["AIR.M2.PHOTOGRAPHIC"]=T("P"),t["AIR.M2.DOWNLINKED"]={type:"text",stroke:!1,x:100,y:140,fontsize:25,text:"DL"},t["AIR.MISSILE.ICON"]={type:"path",d:"M90,135 l0,-10 5,-5 0,-55 5,-5 5,5 0,55 5,5 0,10 -10,-10 z"},R&&(t["AIR.MISSILE.ICON"].fill=L?E.fillColor.Unknown:E.iconFillColor.Unknown),t["AIR.MISSILE.IC.ANTIBALLISTIC MISSILE"]={type:"text",stroke:!1,x:100,y:110,fontsize:25,text:"ABM"},t["AIR.MISSILE.IC.BOMB"]={type:"text",stroke:!1,x:100,y:110,fontsize:25,text:"BOMB"},t["AIR.MISSILE.M1.AIR"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"A"},t["AIR.MISSILE.M1.SURFACE"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"S"},t["AIR.MISSILE.M1.SUBSURFACE"]=[{type:"text",stroke:!1,x:68,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:68,y:125,fontsize:30,text:"U"}],t["AIR.MISSILE.M1.SPACE"]=[{type:"text",stroke:!1,x:68,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:68,y:125,fontsize:30,text:"P"}],t["AIR.MISSILE.M1.ANTI-BALLISTIC"]=[{type:"text",stroke:!1,x:68,y:95,fontsize:30,text:"A"},{type:"text",stroke:!1,x:68,y:125,fontsize:30,text:"B"}],t["AIR.MISSILE.M1.BALLISTIC"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"B"},t["AIR.MISSILE.M1.CRUISE"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"C"},t["AIR.MISSILE.M1.LAND"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"L"},t["AIR.MISSILE.M1.INTERCEPTOR"]={type:"text",stroke:!1,x:68,y:110,fontsize:30,text:"I"},t["AIR.MISSILE.M2.AIR"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"A"},t["AIR.MISSILE.M2.SURFACE"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"S"},t["AIR.MISSILE.M2.SUBSURFACE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"U"}],t["AIR.MISSILE.M2.SPACE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"P"}];t["AIR.MISSILE.M2.LAUNCHED"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"L"};t["AIR.MISSILE.M2.MISSILE"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"M"},t["AIR.MISSILE.M2.PATRIOT"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"P"},t["AIR.MISSILE.M2.STANDARD MISSILE - 2 (SM-2)"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"2"}],t["AIR.MISSILE.M2.STANDARD MISSILE - 6 (SM-6)"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"6"}],t["AIR.MISSILE.M2.EVOLVED SEA SPARROW MISSILE (ESSM)"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"S"}],t["AIR.MISSILE.M2.ROLLING AIRFRAME MISSILE (RAM)"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"R"},t["AIR.MISSILE.M2.SHORT RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"S"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["AIR.MISSILE.M2.MEDIUM RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"M"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["AIR.MISSILE.M2.INTERMEDIATE RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"I"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["AIR.MISSILE.M2.LONG RANGE"]=[{type:"text",stroke:!1,x:132,y:95,fontsize:30,text:"L"},{type:"text",stroke:!1,x:132,y:125,fontsize:30,text:"R"}],t["AIR.MISSILE.M2.INTERCONTINENTAL"]={type:"text",stroke:!1,x:132,y:110,fontsize:30,text:"I"},t["GR.IC.ADMINISTRATIVE"]=S("ADM"),t["GR.IC.AIR DEFENSE CHAPARRAL"]=[{type:"path",fill:!1,d:"m 85,80 30,0 c 5.54,0 10,4.46 10,10 l 0,5 c 0,5.54 -4.46,10 -10,10 l -30,0 c -5.54,0 -10,-4.46 -10,-10 l 0,-5 c 0,-5.54 4.46,-10 10,-10 z"},{type:"text",stroke:!1,x:100,y:101,fontsize:20,text:"C"}],t["GR.IC.AIR DEFENSE COMPOSITE"]={type:"path",d:"M85,120 C85,110 115,110 115,120 M90,115 L90,90 C90,80 110,80 110,90 L110,115 M100,112 l0,-30",fill:!1},t["GR.IC.AIR DEFENSE H/MAD"]=S("HMD"),t["GR.IC.AIR DEFENSE H/MAD HAWK"]={type:"text",stroke:!1,x:100,y:101,fontsize:20,text:"H"},t["GR.IC.AIR DEFENSE H/MAD PATRIOT"]={type:"text",stroke:!1,x:100,y:101,fontsize:20,text:"P"},t["GR.IC.AIR DEFENSE MISSILE"]={type:"path",d:"M90,120 L90,90 C90,80 110,80 110,90 L110,120",fill:!1},t["GR.IC.AIR DEFENSE TARGETING UNIT"]=[{type:"path",d:"M80,100 l20,-15 0,15 20,-15 M75,80 C75,100 85,115 105,115",fill:!1},{type:"circle",cx:75,cy:110,r:5}],t["GR.IC.AIR DEFENSE THEATER MISSILE DEFENSE UNIT"]=S("TMD"),t["GR.IC.AIR DEFENSE SHORT RANGE"]=S("SRD"),t["GR.IC.AIR DEFENSE STINGER"]=[{type:"path",fill:!1,d:"m 85,80 30,0 c 5.54,0 10,4.46 10,10 l 0,5 c 0,5.54 -4.46,10 -10,10 l -30,0 c -5.54,0 -10,-4.46 -10,-10 l 0,-5 c 0,-5.54 4.46,-10 10,-10 z"},{type:"text",stroke:!1,x:100,y:101,fontsize:20,text:"S"}],t["GR.IC.AIR DEFENSE VULCAN"]=[{type:"path",fill:!1,d:"m 85,80 30,0 c 5.54,0 10,4.46 10,10 l 0,5 c 0,5.54 -4.46,10 -10,10 l -30,0 c -5.54,0 -10,-4.46 -10,-10 l 0,-5 c 0,-5.54 4.46,-10 10,-10 z"},{type:"text",stroke:!1,x:100,y:101,fontsize:20,text:"V"}],t["GR.IC.AIR DEFENSE GUN UNIT"]={type:"path",d:"M100,80 L100,120 M92,90 l0,20 M108,90 l0,20",fill:!1},t["GR.IC.AIR TRAFFIC SERVICES"]={type:"path",d:"m 100,95 0,25 m 7.5,-32.5 c 0,4.1 -3.4,7.5 -7.5,7.5 -4.1,0 -7.5,-3.4 -7.5,-7.5 0,-4.1 3.4,-7.5 7.5,-7.5 4.1,0 7.5,3.4 7.5,7.5 z M 60,85 l 40,15 40,-15 0,30 -40,-15 -40,15 z"},t["GR.IC.AIRPORT OF DEBARKATION"]=[{type:"path",fill:!1,d:"M80,70 l40,0 M80,80 l25,-25 M100,80 l0,40 M81,90.5 l38,19 M81,109.5 l38,-19"},{type:"circle",cx:100,cy:100,r:20,fill:!1}],t["GR.IC.ALLIED COMMAND EUROPE RAPID REACTION CORPS (ARRC)"]=S("ARRC"),t["GR.IC.ALLIED COMMAND OPERATIONS"]=S("ACO"),t["GR.IC.AMMUNITION"]={type:"path",d:"m 90,117 0,-25 c 0,-15 20,-15 20,0 l 0,25 m -25,0 30,0",fill:!1},t["GR.IC.ARMOUR"]={type:"path",d:"M125,80 C150,80 150,120 125,120 L75,120 C50,120 50,80 75,80 Z",fill:!1},t["GR.IC.AVIATION ROTARY WING"]=t["AR.I.MILITARY ROTARY WING"],t["GR.IC.AVIATION FIXED WING"]=t["AR.I.MILITARY FIXED WING"],t["GR.IC.AVIATION COMPOSITE"]=[MS.scale(.5,[t["GR.IC.AVIATION FIXED WING"],MS.rotate(90,t["GR.IC.AVIATION ROTARY WING"])])],t["GR.IC.AVIATION TACTICAL AIR CONTROL PARTY"]=S("TACP"),t["GR.IC.AVIATION FORWARD AIR CONTROLLER"]=S("FAC"),t["GR.IC.BAND"]=S("BAND"),t["GR.IC.BUREAU OF ALCOHOL, TOBACCO, FIREARMS AND EXPLOSIVES (ATF) (DEPARTMENT OF JUSTICE)"]=S("ATF"),t["GR.IC.CBRN"]=[{type:"path",d:"M80,120 c0,-20 10,-40 50,-43 m-10,43 c0,-20 -10,-40 -50,-43",fill:!1},{type:"circle",cx:70,cy:85,r:8},{type:"circle",cx:130,cy:85,r:8}],t["GR.IC.CIVIL AFFAIRS"]=S("CA"),t["GR.IC.CIVIL-MILITARY-COOPERATION"]={type:"path",d:"m 60,80 80,0 0,20 c 0,25 -80,25 -80,0 z",fill:!1},t["GR.IC.COMMAND AND CONTROL"]=S("C2"),t["GR.IC.COMBAT"]=S("CBT"),t["GR.IC.COMBAT SERVICE SUPPORT"]=S("CSS"),t["GR.IC.COMBAT SUPPORT"]=S("CS"),t["GR.IC.COMBAT SUPPORT (MANOEUVRE ENHANCEMENT)"]={type:"path",d:"m 85,80 0,25 15,15 15,-15 0,-25 z"},t["GR.IC.COMBINED ARMS"]={type:"path",d:"m 70,80 60,40 m 0,-40 -60,40 m 55,-40 c 25,0 25,40 0,40 l -50,0 C 50,120 50,80 75,80 z",fill:!1},t["GR.IC.COUNTER-INTELLIGENCE"]=S("CI"),t["GR.IC.CRIMINAL INVESTIGATION DIVISION"]=S("CID"),t["GR.IC.DIVING"]=[],t["GR.IC.DOG"]=S("DOG"),t["GR.IC.DRILLING"]={type:"path",d:"m 85,80 5,40 20,0 5,-40 z"},t["GR.IC.DRUG ENFORCEMENT AGENCY (DEA)"]=S("DEA"),t["GR.IC.ELECTRONIC RANGING"]={type:"path",d:"M120,130 c-40,20 -80,-45 -40,-70 z M100,95 L140,75",fill:!!R&&U},t["GR.IC.ELECTRONIC WARFARE"]=S("EW"),t["GR.IC.EMERGENCY MEDICAL OPERATION"]={type:"path",d:"m 90,60 0,22.7 -19.7,-11.3 -10,17.3 L 80,100 l -19.7,11.3 10,17.3 L 90,117.3 90,140 l 20,0 0,-22.7 19.7,11.3 10,-17.3 L 120,100 l 19.7,-11.3 -10,-17.3 L 110,82.7 110,60 90,60 z"},t["GR.IC.ENGINEER"]={type:"path",fill:!1,d:"M60,120 L60,80 140,80 140,120 M100,80 L100,110"},t["GR.IC.ENVIRONMENTAL PROTECTION"]={type:"path",d:"m 100,80 -10,15 5,0 -10,10 5,0 -10,10 15,0 0,5 10,0 0,-5 15,0 -10,-10 5,0 -10,-10 5,0 z",fill:!1},t["GR.IC.EXPLOSIVE ORDNANCE DISPOSAL"]=S("EOD"),t["GR.IC.FEDERAL BUREAU OF INVESTIGATION (FBI)"]=S("FBI"),t["GR.IC.FIELD ARTILLERY"]={type:"circle",cx:100,cy:100,r:15},t["GR.IC.FIELD ARTILLERY OBSERVER"]=[{type:"circle",cx:100,cy:108,r:5},{type:"path",d:"m 80,120 30,-20 m -30,20 20,-40 20,40 z",fill:!1}],t["GR.IC.FIELD CAMP CONSTRUCTION"]=[t["GR.IC.ENGINEER"],{
type:"text",stroke:!1,x:100,y:77,fontsize:25,text:"CAMP"}],t["GR.IC.FINANCE"]={type:"path",d:"m 80,95 10,-10 20,0 10,10 m -40,0 0,20 40,0 0,-20 z",fill:!1},t["GR.IC.FIRE PROTECTION"]={type:"path",d:"m 120,90 -5,5 -10,-10 5,-5 -20,0 5,5 -10,10 -5,-5 0,20 5,-5 10,10 -5,5 20,0 -5,-5 10,-10 5,5 z"},t["GR.IC.FIXED WING MISO"]=[{type:"path",fill:!!R&&U,stroke:i,d:"M70,85 l40,0 10,-10 0,50 -10,-10 -40,0 z M120,85 l10,0 M120,95 l10,0 M120,105 l10,0 M120,115 l10,0"},{type:"path",d:"M 78.8 61.5 C 68.1 61.5 68.1 78.5 78.8 78.5 L 100 70 L 78.8 61.5 z M 100 70 L 121.3 78.5 C 131.9 78.5 131.9 61.5 121.3 61.5 L 100 70 z"}],t["GR.IC.GEOSPATIAL SUPPORT"]=S("GEO"),t["GR.IC.GOVERNMENT ORGANIZATION"]=S("GO"),t["GR.IC.INFORMATION OPERATIONS"]=S(R?"IW":"IO"),t["GR.IC.INTERNATIONAL SECURITY ASSISTANCE FORCE (ISAF)"]=S("ISAF"),t["GR.IC.INTERROGATION"]=S("IPW"),t["GR.IC.JOINT FIRE SUPPORT"]=S("JFS"),t["GR.IC.JOINT INFORMATION BUREAU"]=S("JIB"),t["GR.IC.JOINT INTELLIGENCE CENTRE"]=S("JIC"),t["GR.IC.JUDGE ADVOCATE GENERAL"]=S("JAG"),t["GR.IC.LABOUR"]={type:"path",d:"m 90,85 20,0 m -10,0 0,25 -10,0 10,10 10,-10 -10,0",fill:!1},t["GR.IC.LAUNDRY/BATH"]={type:"path",d:"m 95,80 10,10 0,30 m 0,-30 -10,0 m 10,0 -10,10",fill:!1},t["GR.IC.LAW ENFORCEMENT"]={type:"path",d:"M100,140 c-20,-10 -40,-10 -40,-70 c0,15 40,15 40,0 c0,15 40,15 40,0 c0,60 -20,60 -40,70 z",fill:!1},t["GR.IC.LIAISON"]=S("LO"),t["GR.IC.MAINTENANCE"]={type:"path",d:"M70,90 c10,0 10,20 0,20 m10,-10 l40,0 m10,-10 c-10,0 -10,20 0,20",fill:!1},t["GR.IC.MATERIEL"]=S("MAT"),t["GR.IC.METEOROLOGICAL"]=S("MET"),t["GR.IC.MILITARY INFORMATION SUPPORT OPERATIONS (MISO)"]={type:"path",d:"M70,85 l40,0 10,-10 0,50 -10,-10 -40,0 z M120,85 l10,0 M120,95 l10,0 M120,105 l10,0 M120,115 l10,0"},t["GR.IC.MILITARY INTELLIGENCE"]=S("MI"),t["GR.IC.MILITARY POLICE"]=S("MP"),t["GR.IC.MINE"]={type:"path",d:"m 120,100 c 0,5.5 -9,10 -20,10 -11,0 -20,-4.5 -20,-10 0,-5.5 9,-10 20,-10 11,0 20,4.5 20,10 z m -5,-20 -30,40 m 0,-40 30,40 m -15,-40 0,40"},t["GR.IC.MINE CLEARING"]=[t["GR.IC.MINE"],{type:"text",stroke:!1,x:100,y:77,fontsize:25,text:"CLR"}],t["GR.IC.MINE LAUNCHING"]=[t["GR.IC.MINE"],{type:"path",d:"m 80,125 0,10 40,0 0,-10 z"}],t["GR.IC.MINE LAYING"]=[t["GR.IC.MINE"],{type:"path",d:"m 80,65 0,10 40,0 0,-10 z"}],t["GR.IC.MISSILE"]={type:"path",d:"M90,120 L90,90 C90,80 110,80 110,90 L110,120 M100,120 L100,80",fill:!1},t["GR.IC.MISSILE.LIGHT"]={type:"path",d:"M90,90 L110,90"},t["GR.IC.MISSILE.MEDIUM"]={type:"path",d:"M90,90 L110,90 M90,97 L110,97"},t["GR.IC.MISSILE.HEAVY"]={type:"path",d:"M90,90 L110,90 M90,97 L110,97 M90,104 L110,104"},t["GR.IC.MORALE, WELFARE, AND RECREATION"]={type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"MWR"},t["GR.IC.MORTAR"]=[{type:"circle",cx:100,cy:115,r:5,fill:!1},{type:"path",d:"M100,111 l0,-30 M90,90 l10,-10 10,10",fill:!1}],t["GR.IC.MORTUARY AFFAIRS"]={type:"path",d:"m 90,95 20,0 m -10,-10 0,30 m -15,-35 30,0 0,40 -30,0 z",fill:!1},t["GR.IC.MULTINATIONAL (MN)"]=S("MN"),t["GR.IC.NAVAL"]=[{type:"path",d:"m 105,85 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m -20,5 30,0 m -15,0 0,30",fill:!1},{type:"path",d:"m 83.9,105 c -0.8,0.1 0.5,7.7 1.1,8.2 0.3,0.3 1.4,-1.4 1.8,-1 6.8,7.5 12.9,7.3 13.6,7.3 0,0 0.1,-0 0.1,0 0.7,0 6.8,0.2 13.6,-7.3 0.4,-0.4 1.5,1.3 1.8,1 0.6,-0.5 1.9,-8.2 1.1,-8.2 -0.8,-0.1 -1.5,1.5 -2.6,2.4 -1.2,0.9 -2.9,1.3 -3,1.7 -0.1,0.3 1.9,1.3 1.5,1.8 -2,2.3 -5.9,6.2 -12.3,6.3 l -0.1,1.6 -0.1,-1.6 c -6.3,-0.1 -10.3,-4 -12.3,-6.3 -0.4,-0.5 1.6,-1.5 1.5,-1.8 -0.1,-0.4 -1.8,-0.7 -3,-1.7 -1.1,-0.8 -1.8,-2.4 -2.6,-2.4 z",stroke:!1}],t["GR.IC.OBSERVER/OBSERVATION"]={type:"path",d:"m 100,80 -25,40 50,0 z",fill:!1},t["GR.IC.ORDNANCE"]={type:"path",d:"M 90,97 83,83 m 27,14 7,-14 M 95,95 90,81 m 15,14 5,-14 m 10,26.5 c 0,6.9 -9,12.5 -20,12.5 -11,0 -20,-5.6 -20,-12.5 0,-6.9 9,-12.5 20,-12.5 11,0 20,5.6 20,12.5 z",fill:!1},t["GR.IC.PERSONNEL SERVICES"]=S("PS"),t["GR.IC.PETROLEUM OIL LUBRICANTS"]={type:"path",d:"m 100,119 0,-24 m 0,0 C 99,95 85,81 85,81 l 30,0 z",fill:!1},t["GR.IC.PIPELINE"]={type:"path",d:"m 115,110 15,0 m -15,-15 15,0 m -45,15 -15,0 M 85,95 70,95 m 30,-15 0,10 -15,0 0,25 30,0 0,-25 -15,0 m -10,-10 20,0",fill:!1},t["GR.IC.POSTAL"]={type:"path",d:"m 80,80 30,0 c -1.4,15.5 0,25 10,35 -20,0 -40,-20 -40,-35 z",fill:!1},t["GR.IC.PUBLIC AFFAIRS"]=S("PA"),t["GR.IC.PUBLIC AFFAIRS BROADCAST"]=S("BPAD"),t["GR.IC.PSYCHOLOGICAL OPERATIONS"]={type:"path",fill:!!R&&U,stroke:i,d:"M70,85 l40,0 10,-10 0,50 -10,-10 -40,0 z M120,85 l10,0 M120,95 l10,0 M120,105 l10,0 M120,115 l10,0"},t["GR.IC.QUARTERMASTER"]={type:"path",fill:!1,d:"m 115,95 c 0,15 15,15 15,0 0,-15 -15,-15 -15,0 z m 0,0 -45,0 0,10 10,0 0,-10"},t["GR.IC.RADAR"]={type:"path",d:"M72,95 l30,-25 0,25 30,-25 M70,70 c0,35 15,50 50,50",fill:!1},t["GR.IC.RADIO"]=[{type:"circle",cx:100,cy:130,r:10,fill:!1},{type:"path",fill:!1,d:"M100,120 l0,-60 M70,70 l10,-10 10,10 10,-10 10,10 10,-10 10,10"}],t["GR.IC.RADIO RELAY"]=[{type:"circle",cx:100,cy:130,r:10,fill:!1},{type:"path",fill:!1,d:"M100,120 l-15,-40 15,0 0,-20 M70,60 l60,0"}],t["GR.IC.RADIO TELETYPE CENTRE"]=[{type:"text",stroke:!1,x:100,y:135,fontsize:30,text:"C"},{type:"path",fill:!1,d:"M100,140 l0,-80  M70,60 l60,0 M80,70 l40,0"}],t["GR.IC.RAILHEAD"]=[{type:"path",fill:!1,d:"M100,80 l0,40 M81,90.5 l38,19 M81,109.5 l38,-19"},{type:"circle",cx:100,cy:100,r:20,fill:!1},MS.translate(0,-50,[{type:"path",d:"M60,120 l80,0",fill:!1},{type:"circle",fill:!1,cx:65,cy:125,r:5},{type:"circle",fill:!1,cx:75,cy:125,r:5},{type:"circle",fill:!1,cx:125,cy:125,r:5},{type:"circle",fill:!1,cx:135,cy:125,r:5}])],t["GR.IC.RELIGIOUS SUPPORT"]=S("REL"),t["GR.IC.REPLACEMENT HOLDING UNIT"]=S("RHU"),t["GR.IC.SEA-AIR-LAND"]=S("SEAL"),t["GR.IC.SEAPORT OF DEBARKATION"]=[{type:"path",fill:!1,d:"M100,80 l0,40 M81,90.5 l38,19 M81,109.5 l38,-19"},{type:"circle",cx:100,cy:100,r:20,fill:!1},MS.translate(0,-35,MS.scale(.6,t["GR.IC.NAVAL"]))],t["GR.IC.SECURITY"]=S("SEC"),t["GR.IC.SECURITY POLICE (AIR)"]=[S("SP"),{type:"path",d:"M 78.8 121.5 C 68.1 121.5 68.1 138.5 78.8 138.5 L 100 130 L 78.8 121.5 z M 100 130 L 121.3 138.5 C 131.9 138.5 131.9 121.5 121.3 121.5 L 100 130 z"}],t["GR.IC.SENSOR"]={type:"path",d:"m 100,60 c 0,15 25,40 40,40 -15,0 -40,25 -40,40 0,-15 -25,-40 -40,-40 15,0 40,-25 40,-40 z"},t["GR.IC.SHORE PATROL"]=S("SP"),t["GR.IC.SNIPER"]={type:"path",fill:!1,d:"M 60 85 L 90 85 L 60 85 z M 110 85 L 140 85 L 110 85 z M 100 90 L 100 115 L 100 90 z"},t["GR.IC.SPECIAL FORCES"]=S("SF"),t["GR.IC.SPECIAL OPERATIONS FORCES"]=t["AR.I.SPECIAL OPERATIONS FORCES"],t["GR.IC.SURVEILLANCE"]={type:"path",d:"m 100,80 -25,40 50,0 z"},t["GR.IC.SURVEY"]=[{type:"path",d:"M85,120 l15,-15 15,15 ",fill:!1},{type:"path",d:"M100,105 l0,-25 20,12.5 z",fill:!!R&&U}],t["GR.IC.SUSTAINMENT"]=S("SUST"),t["GR.IC.TELEPHONE SWITCH"]=[{type:"text",stroke:!1,x:100,y:135,fontsize:30,text:"C"},{type:"path",fill:!1,d:"M100,140 l0,-80  M70,60 l60,0"}],t["GR.IC.TOPOGRAPHIC"]={type:"path",fill:!1,d:"m 85,105 c 10,5 20,5 30,0 m -15,-15 15,30 m -30,0 15,-30 0,-10"},t["GR.IC.TRANSPORTATION"]=[{type:"path",fill:!1,d:"M100,80 l0,40 M81,90.5 l38,19 M81,109.5 l38,-19"},{type:"circle",cx:100,cy:100,r:20,fill:!1}],t["GR.IC.TRANSPORTATION SECURITY AGENCY (TSA)"]=S("TSA"),t["GR.IC.UNMANNED SYSTEMS"]=t["AR.I.UNMANNED AERIAL VEHICLE"],t["GR.IC.VIDEO IMAGERY"]={type:"path",fill:!1,d:"m 140,110 -26,0 m 7,-20 19,0 m -15,-10 -65,0 0,40 50,0 z m 15,5 0,30"},t["GR.IC.UNITED STATES SECRET SERVICE(TREAS) (USSS)"]=S("USSS"),t["GR.IC.WATER"]={type:"path",d:"m 65,90 50,0 c 10,0 20,10 20,20 m -40,-30 20,0 m -10,0 0,10",fill:!1},t["GR.IC.WATER PURIFICATION"]=[t["GR.IC.WATER"],{type:"text",stroke:!1,x:65,y:110,fontsize:20,text:"PURE"}],t["GR.IC.FF.AIR ASSAULT WITH ORGANIC LIFT"]={Unknown:{type:"path",d:"M35,120 L 90,120 l10,10 10,-10 L165,120",fill:!1},Friend:{type:"path",d:"M25,120 L 90,120 l10,10 10,-10 L175,120",fill:!1},Neutral:{type:"path",d:"M45,120 L 90,120 l10,10 10,-10 L155,120",fill:!1},Hostile:{type:"path",d:"M50,120 L 90,120 l10,10 10,-10 L150,120",fill:!1}}[O],t["GR.IC.FF.AIR DEFENCE"]={Unknown:{type:"path",d:"M65,140 C65,115 135,115 135,140",fill:!1},Friend:{type:"path",d:"M25,150 C25,110 175,110 175,150",fill:!1},Neutral:{type:"path",d:"M45,150 C45,110 155,110 155,150",fill:!1},Hostile:{type:"path",d:"M70,140 C70,115 130,115 130,140",fill:!1}}[O],t["GR.IC.FF.AIR AND NAVAL GUNFIRE LIAISON COMPANY"]=[],t["GR.IC.FF.AMPHIBIOUS"]={Unknown:{type:"path",d:"M30,105 c10,0 0,-15 13.5,-15  c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c13.5,0 3.5,15 13.5,15",fill:!1},Friend:{type:"path",d:"M25,110 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 20,20",fill:!1},Neutral:{type:"path",d:"M45,90 c18.8,0 0,20 18,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18,-20",fill:!1},Hostile:{type:"path",d:"M32,105 c10,0 0,-15 11.5,-15  c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c18.8,0 0,20 18.8,20 c18.8,0 0,-20 18.8,-20 c11.5,0 1.5,15 11.5,15",fill:!1}}[O],t["GR.IC.FF.ANALYSIS"]={type:"path",d:"m 100,120 0,-65 m 0,90 -30,-25 60,0 z",fill:!1},t["GR.IC.FF.ANTITANK/ANTIARMOUR"]={Unknown:{type:"path",fill:!1,d:"M55,135 L100,33 145,135"},Friend:{type:"path",fill:!1,d:"M25,150 L100,52 175,150"},Neutral:{type:"path",fill:!1,d:"M45,150 L100,47 155,150"},Hostile:{type:"path",fill:!1,d:"M60,132 L100,30 140,132"}}[O],t["GR.IC.FF.BORDER PATROL"]=[{type:"path",stroke:!1,d:"M 122.8 66.8 C 119.9 66.8 117.4 68.6 117.4 71.6 L 117.4 73.1 L 128.7 73.1 L 128.7 72.4 C 128.7 68.8 126.5 66.8 122.8 66.8 z M 108.6 74.8 L 108.6 76 L 117.6 76 L 117.5 77.5 L 118 80.8 C 119.1 81.5 118.9 82.5 120.8 83.5 C 122.1 84.1 124 84 125.2 83.4 C 127.5 82.4 129 79.2 128.3 76 L 137.5 76 L 137.5 74.8 L 108.6 74.8 z M 94.8 82.1 C 93.3 82.1 92 83.5 92 85 L 92 85.2 C 92 86.6 96 91.3 97 92.6 C 98.2 94.3 100.8 98.8 103.2 98.8 C 104.5 98.8 111.1 93.7 112.6 92.8 L 112.6 106.2 L 126.4 85.6 C 123 85.6 114.9 85.2 112.2 85.9 C 110.2 86.4 105 91.6 103.6 91.7 C 103.4 91 100.6 87.5 100 86.5 C 99.2 85.4 97.2 82.1 95.6 82.1 L 94.8 82.1 z M 130.4 85.6 C 129.6 85.6 117.5 104.1 116.3 106.2 L 128.1 106.2 L 128.1 110.6 L 112.5 110.6 L 112.5 133.2 L 120.7 133.2 L 122 117.5 L 124.3 117.5 L 125.6 133.2 L 133.5 133.2 L 133.5 87.9 C 133.5 87.2 131.2 85.6 130.4 85.6 z M 66.9 90.7 C 66.5 91.4 62.5 96.9 62.5 96.9 C 62.5 97.8 76.7 107.2 78.5 108.3 C 81.4 110.2 83.9 112.1 86.7 114 C 88.2 115 89.4 115.9 90.8 116.8 C 92.1 117.7 94.1 118.5 94.1 120.4 L 94.1 133.2 L 105.5 133.2 L 105.5 121.7 C 105.5 120.6 107.2 119 107.2 118.8 C 107.2 117.6 106.1 118.6 105.6 116.9 C 105.2 115.4 105.4 115.6 104.5 114.5 C 103.5 113.1 101.9 112 99.8 112 C 96.8 112 97.6 111.8 95.3 110.3 C 93.9 109.3 92.5 108.4 91.2 107.4 C 88.7 105.5 85.8 103.5 83.2 101.8 C 80.9 100.3 68.2 91 66.9 90.7 z M 67.9 92.6 L 72.7 95.7 L 72.8 103 L 67.9 99.9 L 67.9 92.6 z M 77.8 99.3 L 82.6 102.6 L 82.6 110 L 77.8 106.6 L 77.8 99.3 z M 87.4 106.2 L 92.5 109.5 L 92.4 116.9 L 87.4 113.5 L 87.4 106.2 z"},{type:"path",fill:!!R&&U,stroke:!1,d:"M 117.4 73.1 L 117.4 74.8 L 128.7 74.8 L 128.7 73.1 L 117.4 73.1 z M 126.4 85.6 L 112.6 106.2 L 112.6 110.6 L 128.1 110.6 L 128.1 106.2 L 116.4 106.2 C 117.5 104.1 129.6 85.6 130.4 85.6 L 126.4 85.6 z M 67.9 92.6 L 67.9 99.9 L 72.8 103 L 72.7 95.7 L 67.9 92.6 z M 77.8 99.3 L 77.8 106.6 L 82.6 110 L 82.6 102.6 L 77.8 99.3 z M 87.4 106.2 L 87.4 113.5 L 92.4 116.9 L 92.5 109.5 L 87.4 106.2 z "}],t["GR.IC.FF.BROADCAST TRANSMITTER ANTENNA"]={type:"path",fill:!1,d:"m 80,60 20,20 20,-20 m -20,0 0,80"},t["GR.IC.FF.CORPS SUPPORT"]={Unknown:{type:"path",d:"M160,75 l-15,25 15,25",fill:!1},Friend:{type:"path",d:"M175,50 l-30,50 30,50",fill:!1},Neutral:{type:"path",d:"M155,50 l-20,50 20,50",fill:!1},Hostile:{type:"path",d:"M150,80 l-15,20 15,20",fill:!1}}[O],t["GR.IC.FF.CUSTOMS SERVICE"]=[{type:"path",stroke:!1,d:"M 115.5 69.8 C 115.8 70.4 116.9 72.9 117.5 72.9 L 128.3 72.9 L 128.3 69.8 L 115.5 69.8 z M 117.3 74.7 C 116.8 74.7 116 75.7 115.8 76.1 L 117.2 76.1 L 117.2 76.8 C 117.2 79.6 119.8 81.8 122.8 81.8 C 126.5 81.8 128.3 78.6 128.3 74.7 L 117.3 74.7 z M 111.3 83.6 C 110.5 83.6 99.4 91.8 97.8 92.9 C 95.6 94.4 93 96.1 91 97.7 C 89.1 99.2 85.4 100.5 85.4 103.6 L 85.4 104 C 85.4 104.7 87.1 106.7 88.2 106.7 L 88.8 106.7 C 90.2 106.7 108 93.4 111.3 91.7 L 111.3 105.3 L 126 83.6 L 111.3 83.6 z M 75.3 83.6 C 74.5 83.6 73.4 84.4 73.4 85 L 73.4 108.9 C 73.4 109.8 73.9 110.2 74.4 110.5 L 78.5 110.5 L 78.5 83.6 L 75.3 83.6 z M 78.5 110.5 L 78.5 135.2 L 105.6 135.2 L 105.6 110.5 L 78.5 110.5 z M 130.5 83.6 C 129.6 83.6 123.8 92.9 122.9 94.2 C 121.9 95.7 115.7 104.5 115.5 105.3 L 127.6 105.3 L 127.6 110.3 L 111.5 110.3 L 111.5 134.8 L 119.6 134.8 C 120.6 134.8 121.1 127.9 121.3 126.6 C 121.7 123.9 122.4 120.4 122.6 117.8 L 122.9 117.8 L 125.4 134.8 L 133.9 134.8 L 133.9 86.7 C 133.9 85.6 131.9 83.6 130.7 83.6 L 130.5 83.6"},{type:"path",fill:!!R&&U,stroke:!1,d:"M 117.5 72.9 L 117.3 74.7 L 128.3 74.7 L 128.3 72.9 L 117.5 72.9 z M 126 83.7 L 111.3 105.3 L 111.5 110.3 L 127.7 110.3 L 127.7 105.3 L 115.5 105.3 C 115.7 104.5 121.9 95.7 122.9 94.3 C 123.8 92.9 129.6 83.7 130.5 83.7 L 126 83.7 z "}],t["GR.IC.FF.DEPARTMENT OF JUSTICE (DOJ)"]={type:"path",stroke:!1,d:"M 100.2 62.3 C 100.1 63.2 99 66.3 98.7 67.4 C 97.8 69.9 99.4 70 99.4 72.3 L 99.4 73 C 99.4 73.7 98.9 73.5 98.3 73.8 C 96.6 72.4 94.2 71 91.3 71 L 90 71 C 84.2 71 80 75.5 74.6 75.5 L 73.9 75.5 C 72.3 75.5 71.5 74.1 71.3 75.8 L 74.3 77.2 C 71.8 82.4 69.9 89.7 67.5 95.5 C 66.3 98.6 65.3 101.6 64.1 104.7 C 63.5 106.3 63.1 107.7 62.5 109.3 C 62 110.5 61.8 113.1 60.2 113.2 C 62.4 116.4 68 120.5 73.3 120.5 L 76 120.5 C 81.6 120.5 87.3 116.6 89.5 113.2 L 88.2 113.2 L 75.4 77.2 L 74.5 77.2 L 74.5 77 L 75.4 77.2 L 78.6 77.7 L 79.3 77.7 L 89.3 76.2 L 90.4 76.3 C 93.7 76.3 93.8 80.2 94.7 80.2 L 97.7 80.2 L 97.7 129.2 L 86.1 129.2 L 86.1 131.5 L 81.4 131.5 L 81.4 134.1 L 77.5 134.1 L 77.5 138.2 L 123.3 138.2 L 123.3 133.9 L 119.3 133.9 L 119.3 131.6 L 114.5 131.6 L 114.5 129.2 L 102.6 129.2 L 102.6 80.2 L 106 80.2 C 107 80.2 106.6 76.4 110.7 76.4 L 111.3 76.4 L 121.2 77.7 L 122.2 77.7 L 125.4 77.3 C 124.3 79.7 123.1 83.8 122.1 86.4 C 120.9 89.6 119.9 92.6 118.7 95.8 C 117.5 98.9 116.6 101.9 115.4 105 C 114.9 106.4 114.2 108.1 113.7 109.6 C 113.4 110.4 113.1 111.1 112.9 111.9 C 112.5 113.2 112.8 113.2 111.2 113.2 C 113.3 116.4 119.2 120.5 124.6 120.5 L 127.2 120.5 C 132.6 120.5 138.8 116.4 140.9 113.2 L 139.8 113.2 L 126.4 77.1 C 127.4 76.9 129.3 76.2 129.3 75.3 C 129.3 74.5 127.8 75.5 126.7 75.5 L 126.3 75.5 C 120.8 75.5 116.6 71 110.9 71 L 109.6 71 C 106.7 71 104.2 72.4 102.6 73.8 C 101.8 73.4 101.3 73.6 101.3 72.3 C 101.3 71.9 102.4 68.8 102.5 68.5 L 100.6 62.3 L 100.2 62.3 z M 126.1 80.8 L 137.8 113.2 L 114.1 113.2 L 126.1 80.8 z M 74.8 80.8 L 86.5 113.2 L 63.1 113.1 L 74.8 80.8 z"},t["GR.IC.FF.DIRECTION FINDING"]={type:"path",d:"M100,140 l0,-80 M80,80 l20,-20 20,20",fill:!1},t["GR.IC.FF.DIVISION AND BELOW SUPPORT"]={Unknown:{type:"path",d:"M40,75 l15,25 -15,25",fill:!1},Friend:{type:"path",d:"M25,50 l30,50 -30,50",fill:!1},Neutral:{type:"path",d:"M45,50 l20,50 -20,50",fill:!1},Hostile:{type:"path",d:"M50,80 l15,20 -15,20",fill:!1}}[O],t["GR.IC.FF.EMERGENCY OPERATION"]=[{type:"path",d:"M 100 65 L 115.2 91.3 L 130.3 117.5 C 133.3 112.4 135 106.4 135 100 C 135 80.7 119.3 65 100 65 z M 100 65 C 80.7 65 65 80.7 65 100 C 65 106.4 66.7 112.4 69.7 117.5 L 84.8 91.3 L 100 65 z M 69.7 117.5 C 75.7 128 87 135 100 135 C 113 135 124.3 128 130.3 117.5 L 100 117.5 L 69.7 117.5 z"},{type:"path",fill:!!R&&U,stroke:!1,d:"M 69.7,117.5 100,65 l 30.3,52.5 z"}],t["GR.IC.FF.FIELD ARTILLERY ROCKET"]={type:"path",d:"M100,150 l0,-97 M85,130 l0,-50 M115,130 l0,-50 M85,73 l15,-20 15,20",fill:!1},t["GR.IC.FF.HEADQUARTERS OR HEADQUARTERS ELEMENT"]={Unknown:{type:"path",d:"M35,80 l130,0 ",fill:!1},Friend:{type:"path",d:"M25,80 l150,0 ",fill:!1},Neutral:{type:"path",d:"M45,80 l110,0 ",fill:!1},Hostile:{type:"path",d:"M50,80 l100,0 ",fill:!1}}[O],t["GR.IC.FF.HORSE"]={type:"path",d:"m 129,72.8 c 0,0 -6.3,2 -9,2.6 -3.4,0.7 -4.9,1.8 -7.7,3.1 -4.2,1.9 -6.8,3.6 -11.3,4.3 -3.3,0.5 -7.7,1.7 -11,1 -3.9,-0.9 -6.1,-2.9 -10.1,-2.9 -3.7,-0 -7.4,-0.6 -10.6,1.3 -2.6,1.6 -4.7,4.2 -5.8,7.1 -2.3,5.4 -0.8,12.5 -1.2,18.4 -0.2,3.1 -0.4,9.3 -0.6,10.2 0,0 1.6,-0 3.4,-2.5 0.9,-1.2 1.7,-3.4 1.9,-4.9 0.5,-3.1 -0.7,-7.5 -0.4,-10 1.1,-0.3 2.4,2.8 2.6,4.7 0.2,2 -1,3.3 -1.4,5.2 -0.5,3 0.3,5 0.6,8.3 0.1,1.6 0.8,3.9 0.5,6 -0.2,2 -0.2,4.3 -0.2,4.3 l 6.9,0 -0.4,-3.8 c 0,0 -1.8,-2.5 -2.1,-4.3 -0.5,-2.7 -0.5,-5.4 0.2,-8 0.5,-2 3.1,-4.3 4.1,-6.1 1.8,-3.1 3.1,-7.1 3.1,-7.1 0,0 5.1,3.4 9.1,4.2 3.8,0.8 11.6,1.4 11.6,1.4 0,0 -0.2,7.3 0.1,12.4 -0,0.1 0.3,3.9 0.3,3.1 -1.4,3.2 -0,8.2 -0,8.2 0,0 2.9,0 6.3,-0 l -0.3,-3.4 c 0,0 -1.5,-3.5 -1.5,-5.3 0,-3.1 0.1,-5.9 0.9,-8.9 0.4,-1.2 0.7,-2.9 1.3,-4 1.4,-2.2 3.1,-3.8 4.2,-6.1 1.1,-2.6 2.3,-5.3 3.6,-7.9 1.6,-3.3 7.8,-7.3 7.8,-7.3 0,0 5,2.9 8.4,4.9 1.2,0.7 3,0.1 3.7,-1 0.7,-1.1 0.8,-2.2 0.3,-3.3 -3.2,-6.7 -7.8,-9.4 -7.8,-9.4 z",stroke:!1},t["GR.IC.FF.INFANTRY"]={Unknown:{type:"path",d:"M50,65L150,135M50,135L150,65"},Friend:{type:"path",d:"M25,50 L175,150 M25,150 L175,50"},Neutral:{type:"path",d:"M45,45L155,155M45,155L155,45"},Hostile:{type:"path",d:"M60,70L140,130M60,130L140,70"}}[O],t["GR.IC.FF.INTERCEPT"]={type:"path",d:"M100,120 l0,-60 M80,120 l20,20 20,-20"},t["GR.IC.FF.JAMMING"]={Unknown:{type:"path",d:"M63,60 c10,0 0,10 7,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 7,-10 M40,75 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10",fill:!1,strokewidth:2},Friend:{type:"path",d:"M25,60 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 M25,75 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10",fill:!1,strokewidth:2},Neutral:{type:"path",d:"M45,60 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10  M45,75 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10",fill:!1,strokewidth:2},Hostile:{type:"path",d:"M67,60 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 13,10   M52,75 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 10,-10 c10,0 0,10 10,10 c10,0 0,-10 7,-10",fill:!1,strokewidth:2}}[O],t["GR.IC.FF.LAW ENFORCEMENT"]={type:"path",d:"m 99.6,51 c -2.8,0 -5,2.3 -5,5.3 0,2.1 1.2,3.9 2.8,4.7 L 87.8,78.3 69.5,78.4 c -0.1,-2.8 -2.3,-5.1 -5,-5.1 -2.8,0 -5,2.3 -5,5.3 0,2.9 2.2,5.3 5,5.3 0.7,0 1.4,-0.2 2,-0.4 l 9.2,16.8 -9.4,17.2 c -0.6,-0.2 -1.2,-0.4 -1.8,-0.4 -2.8,0 -5,2.4 -5,5.3 0,2.9 2.2,5.3 5,5.3 2.8,0 5,-2.3 5,-5.3 0,-0.1 -0,-0.2 -0,-0.3 l 18.3,0.1 9.5,17.1 c -1.6,0.9 -2.7,2.6 -2.7,4.6 0,2.9 2.3,5.3 5,5.3 2.8,0 5,-2.3 5,-5.3 0,-1.9 -0.9,-3.5 -2.3,-4.4 l 9.6,-17.3 18.7,-0.1 c -0,0.1 -0,0.2 -0,0.3 0,2.9 2.3,5.3 5,5.3 2.8,0 5,-2.3 5,-5.3 0,-2.9 -2.2,-5.3 -5,-5.3 -0.8,0 -1.5,0.2 -2.1,0.5 l -9.5,-17.4 9.5,-17.4 c 0.6,0.3 1.4,0.5 2.1,0.5 2.8,0 5,-2.4 5,-5.3 0,-2.9 -2.2,-5.3 -5,-5.3 -2.8,0 -5,2.3 -5,5.3 0,0.1 0,0.2 0,0.3 L 111.8,78.3 102.1,60.8 c 1.5,-0.9 2.5,-2.6 2.5,-4.5 0,-2.9 -2.2,-5.3 -5,-5.3 z"},t["GR.IC.FF.MAIN GUN SYSTEM"]={Unknown:{type:"path",d:"M55,65L55,135"},Friend:{type:"path",d:"M55,50L55,150"},Neutral:{type:"path",d:"M55,45L55,155"},Hostile:{type:"path",d:"M55,72L55,128"}}[O],t["GR.IC.FF.MEDICAL"]={type:"path",d:"M100,"+G.bbox.y1+"L100,"+G.bbox.y2+"M"+G.bbox.x1+",100L"+G.bbox.x2+",100"},t["GR.IC.FF.MEDICAL THEATER"]={Unknown:{type:"path",d:"M100,170 l0,-140 M40,75 l15,25 -15,25 M160,75 l-15,25 15,25 M55,100 l90,0",fill:!1},Friend:{type:"path",d:"M100,150 l0,-100 M25,50 l30,50 -30,50 M175,50 l-30,50 30,50 M55,100 l90,0",fill:!1},Neutral:{type:"path",d:"M100,155 l0,-110  M45,50 l20,50 -20,50 M155,50 l-20,50 20,50 M65,100 l70,0",fill:!1},Hostile:{type:"path",d:"M100,172 l0,-144 M50,80 l15,20 -15,20 M150,80 l-15,20 15,20 M65,100 l70,0",fill:!1}}[O],t["GR.IC.FF.MEDICAL CORPS"]={Unknown:{type:"path",d:"M100,170 l0,-140 M160,75 l-15,25 15,25 M30,100 l115,0",fill:!1},Friend:{type:"path",d:"M100,150 l0,-100  M175,50 l-30,50 30,50 M25,100 l120,0",fill:!1},Neutral:{type:"path",d:"M100,155 l0,-110 M155,50 l-20,50 20,50 M45,100 l90,0",fill:!1},Hostile:{type:"path",d:"M100,172 l0,-144  M150,80 l-15,20 15,20 M28,100 l110,0",fill:!1}}[O],t["GR.IC.FF.MEDICAL TREATMENT FACILITY"]=[t["GR.IC.FF.MEDICAL"],{type:"path",fill:!1,d:"M70,90 l0,20  M130,90 l0,20"}],t["GR.IC.FF.MOTORIZED"]={type:"path",d:"M100,"+G.bbox.y1+"L100,"+G.bbox.y2},t["GR.IC.FF.NAVAL"]=[{type:"path",d:"M 100,145 100,65",fill:!1},{type:"path",d:"m 70,70 60,0",fill:!1},{type:"path",d:"m 57.8,105.5 c -2.2,0.1 1.3,20.6 2.8,22.1 0.8,0.8 3.5,-3.8 4.6,-2.6 17.4,20.2 33,19.7 34.7,19.6 0,0 0.2,-0 0.3,0 1.7,0.1 17.3,0.5 34.7,-19.6 1,-1.2 3.7,3.4 4.6,2.6 1.4,-1.5 4.9,-21.9 2.8,-22.1 -2.2,-0.1 -4,4.2 -6.7,6.4 -3,2.4 -7.5,3.4 -7.7,4.5 -0.1,0.8 4.9,3.5 3.9,4.9 -5.1,6.3 -15.1,16.6 -31.3,17 l -0.3,4.3 -0.3,-4.3 c -16.2,-0.4 -26.3,-10.7 -31.3,-17 -1.1,-1.3 4,-4.1 3.9,-4.9 -0.2,-1 -4.7,-2 -7.7,-4.5 -2.7,-2.3 -4.5,-6.6 -6.7,-6.4 z",stroke:!1},{type:"circle",cx:100,cy:60,r:5,fill:!1}],t["GR.IC.FF.PRISON"]={type:"path",stroke:!1,d:"M 62.5 67.9 L 62.5 73.4 L 69.9 73.4 L 69.9 106 C 66.8 106.7 64.4 109.6 64.4 113.4 C 64.4 116 65.8 116.9 65.9 118.4 C 66 120.4 65.6 122.5 65.6 124.7 L 65.6 126.6 L 62.5 126.6 L 62.5 132.1 L 137.5 132.1 L 137.5 126.6 L 136 126.6 L 135.6 117.5 C 138.3 113.4 135.8 107 131.5 106 L 131.5 73.4 L 137.5 73.4 L 137.5 67.9 L 62.5 67.9 z M 74.5 73.4 L 87.2 73.4 L 87.2 108.4 C 87.2 109.2 84.8 109.7 83.9 110.6 C 83.1 111.3 82.2 112.7 81.6 113.6 C 80.5 115.2 78.6 118.7 78.6 121.1 L 76.1 117 C 76.5 116.4 76.9 114.6 76.9 113.7 L 76.9 112.2 C 76.9 109.5 74.5 107.9 74.5 106.5 L 74.5 73.4 z M 91.5 73.4 L 110.2 73.4 L 110.2 90.9 C 109 89.6 108.8 87.8 106.8 85.7 C 105.4 84.3 103.5 83 100.8 83 L 100.3 83 C 98.2 83 96.1 83.6 94.9 84.5 C 94.3 85 93.6 85.4 93.1 86 C 92.4 86.6 92.2 87.3 91.5 87.8 L 91.5 73.4 z M 114.3 73.4 L 127.2 73.4 L 127.2 106.5 C 127.2 106.9 124.8 109.2 124.4 111.1 C 123.7 114.2 124.5 114.6 125 117 L 123.3 120.2 C 122.7 118.3 120.7 115 119.7 113.5 C 118.3 111.4 117.3 109.1 114.3 108.9 L 114.3 73.4 z M 99.7 84.9 L 100.6 84.9 C 104.8 84.9 108.5 90.4 108.5 94.7 L 108.5 96.4 C 108.5 100.4 105 106.2 101.3 106.2 L 99.4 106.2 C 94.9 106.2 91.4 100.2 91.6 95.5 C 91.8 90.7 94.9 84.9 99.7 84.9 z M 110.3 100.5 L 110.2 106.9 L 106.7 106.3 L 110.3 100.5 z M 91.5 103.6 L 94.3 106.8 L 91.5 107.4 L 91.5 103.6 z M 70.7 107.9 C 72.9 107.9 74.7 110.4 74.7 112.7 L 74.7 113.4 C 74.7 117.9 70 120.2 67.6 116.7 C 65.7 113.8 66.9 107.9 70.7 107.9 z M 130.6 107.9 C 132.8 107.9 134.4 110.8 134.4 113.2 L 134.4 113.4 C 134.4 116.7 133 116.7 132 118.2 L 128.9 118.3 L 126.7 115.4 L 126.5 113.2 C 126.1 111 128.2 107.9 130.6 107.9 z M 105.9 108.2 C 107.2 108.2 108.9 109 110.2 109.3 L 110.2 126.6 L 91.5 126.6 L 91.5 110.1 C 91.5 108.6 96.6 108.9 98.4 108.9 C 101.1 108.9 104 108.2 105.9 108.2 z M 114.3 110.8 C 117.2 112.3 117.4 113.4 119 116.4 C 120.1 118.5 121.7 120.9 121.7 124 C 121.9 124.2 122.3 124.9 122.7 124.9 C 124 124.9 125.5 119.8 126.7 118.9 L 126.7 119.4 L 127.2 119.4 L 127.2 126.6 L 114.3 126.6 L 114.3 110.8 z M 87.2 111.3 L 87.2 126.6 L 74.5 126.6 L 74.5 118.9 C 75.8 119.4 77.4 125.4 78.6 125.4 C 80.6 125.4 80.7 119.6 81.9 117.5 C 83.2 115.3 84.4 111.9 87.2 111.3 z M 133.6 119.7 L 133.9 126.6 L 131.5 126.6 L 131.5 120.4 L 133.6 119.7 z M 68.1 119.9 C 68.6 120.1 69.9 120.3 69.9 121.1 L 69.9 126.6 L 67.7 126.6 L 68.1 119.9 z"},t["GR.IC.FF.JAIL BREAK"]=[t["GR.IC.FF.PRISON"],{type:"path",strokewidth:5,d:"m 70,130 L130,70",fill:!1}],t["GR.IC.FF.RECONNAISSANCE"]={Unknown:{type:"path",d:"M50,135L150,65"},Friend:{type:"path",d:"M25,150L175,50"},Neutral:{type:"path",d:"M45,155L155,45"},Hostile:{type:"path",d:"M60,130L140,70"}}[O],t["GR.IC.FF.SEARCH"]={type:"path",d:"m 100,145 0,-90 m 30,65 -30,25 -30,-25",fill:!1},t["GR.IC.FF.SENSOR"]=[{type:"path",d:"M"+G.bbox.x1+",100 L75,100 M"+(200-G.bbox.x1)+",100 L125,100"},{type:"path",d:"M65,85 l70,0 -15,30 -40,0 z",fill:!!R&&U}],t["GR.IC.FF.SIGNAL"]={Unknown:{type:"path",fill:!1,d:"M50,65 100,110 100,90 150,135"},Friend:{type:"path",fill:!1,d:"M25,50 100,110 100,90 175,150"},Neutral:{type:"path",fill:!1,d:"M45,45 100,110 100,90 155,155"},Hostile:{type:"path",fill:!1,d:"M57,70 100,110 100,90 143,130"}}[O],t["GR.IC.FF.SOUND"]=[{type:"path",d:"M"+G.bbox.x1+",100 L75,100 M"+(200-G.bbox.x1)+",100 L125,100"},{type:"path",d:"M65,85 l70,0 -15,30 -40,0 z",fill:!!R&&U},{type:"text",stroke:!1,x:100,y:110,fontsize:25,text:"S"}],t["GR.IC.FF.SUPPLY"]={Unknown:{type:"path",d:"M35,120 l130,0 ",fill:!1},Friend:{type:"path",d:"M25,120 l150,0",fill:!1},Neutral:{type:"path",d:"M45,120 l110,0",fill:!1},Hostile:{type:"path",d:"M50,120 l100,0 ",fill:!1}}[O],t["GR.IC.FF.SUPPLY CORPS"]={Unknown:{type:"path",d:"M160,75 l-15,25 15,25 M35,120 l120,0",fill:!1},Friend:{type:"path",d:"M175,50 l-30,50 30,50 M25,120 l135,0",fill:!1},Neutral:{type:"path",d:"M155,50 l-20,50 20,50 M45,120 l100,0",fill:!1},Hostile:{type:"path",d:"M150,80 l-15,20 15,20 M50,120 l100,0",fill:!1}}[O],t["GR.IC.FF.SUPPLY DIVISION AND BELOW"]={Unknown:{type:"path",d:"m 45,120 120,0 M 40,75 55,100 40,125",fill:!1},Friend:{type:"path",d:"m 45,120 130,0 M 25,50 55,100 25,150",fill:!1},Neutral:{type:"path",d:"m 57,120 98,0 M 45,50 65,100 45,150",fill:!1},Hostile:{type:"path",d:"m 50,120 100,0 M 50,80 65,100 50,120",fill:!1}}[O],t["GR.IC.FF.SUPPLY THEATER"]={Unknown:{type:"path",d:"M40,75 l15,25 -15,25 M160,75 l-15,25 15,25 M45,120 l110,0 ",fill:!1},Friend:{type:"path",d:"M25,50 l30,50 -30,50 M175,50 l-30,50 30,50 M40,120 l120,0 ",fill:!1},Neutral:{type:"path",d:" M45,50 l20,50 -20,50 M155,50 l-20,50 20,50 M55,120 l90,0 ",fill:!1},Hostile:{type:"path",d:"M50,80 l15,20 -15,20 M150,80 l-15,20 15,20 M50,120 l100,0",fill:!1}}[O],t["GR.IC.FF.CLASS ALL"]={type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"ALL"},t["GR.IC.FF.CLASS MULTIPLE"]={type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"MULT"},t["GR.IC.FF.CLASS I"]={type:"path",d:"m 105,85 c -5,10 -5,20 0,30 m 0,-30 c -20,0 -20,30 0,30",fill:!1},t["GR.IC.FF.NATO SUPPLY CLASS I"]=S("I"),t["GR.IC.FF.CLASS II"]=t["GR.IC.QUARTERMASTER"],t["GR.IC.FF.NATO SUPPLY CLASS II"]=S("II"),t["GR.IC.FF.CLASS III"]={type:"path",d:"m 100,120 0,-20 -15,-20 30,0 -15,20 ",fill:!1},t["GR.IC.FF.CLASS IV"]=t["GR.IC.ENGINEER"],t["GR.IC.FF.NATO SUPPLY CLASS IV"]=S("IV"),t["GR.IC.FF.CLASS V"]={type:"path",d:"m 90,115 0,-25 c 0,-10 20,-10 20,0 l 0,25 m -25,0 30,0",fill:!1},t["GR.IC.FF.CLASS VI"]=[{type:"circle",cx:100,cy:85,r:5,fill:!1},{type:"path",d:"m 85,95 30,0 m -15,15 0,-20 m -10,30 10,-10 10,10",fill:!1}],t["GR.IC.FF.CLASS VII"]=[{type:"circle",cx:75,cy:100,r:7},{type:"circle",cx:125,cy:100,r:7},{type:"path",d:"M75,100 c0,-20 50,-20 50,0",fill:!1}],t["GR.IC.FF.CLASS VIII"]={Unknown:{type:"path",fill:!1,d:"M100,120 l0,-90 M165,80 l-130,0"},Friend:{type:"path",fill:!1,d:"M100,120 l0,-70 M175,80 l-150,0"},Neutral:{type:"path",fill:!1,d:"M100,120 l0,-75 M155,80 l-110,0"},Hostile:{type:"path",fill:!1,d:"M100,120 l0,-92 M153,80 l-106,0"}}[O],t["GR.IC.FF.CLASS VIII.THEATER"]={Unknown:{type:"path",fill:!1,d:"M100,120 l0,-90 M155,80 l-110,0"},Friend:{type:"path",fill:!1,d:"M100,120 l0,-70 M155,80 l-110,0"},Neutral:{type:"path",fill:!1,d:"M100,120 l0,-75 M145,80 l-90,0"},Hostile:{type:"path",fill:!1,d:"M100,120 l0,-92 M153,80 l-106,0"}}[O],t["GR.IC.FF.CLASS VIII.CORPS"]={Unknown:{type:"path",fill:!1,d:"M100,120 l0,-90 M155,80 l-120,0"},Friend:{type:"path",fill:!1,d:"M100,120 l0,-70 M155,80 l-130,0"},Neutral:{type:"path",fill:!1,d:"M100,120 l0,-75 M145,80 l-100,0"},Hostile:{type:"path",fill:!1,d:"M100,120 l0,-92 M153,80 l-106,0"}}[O],t["GR.IC.FF.CLASS IX"]=[{type:"circle",cx:100,cy:100,r:10,fill:!1},{type:"path",d:"m 100,110 0,10 m 0,-30 0,-10 m 8.7,14.2 8.4,-4.8 m -8.4,15.9 8,5.4 m -25.4,-5.4 -8.2,5.4 m 8.2,-16.3 -8,-5.4",fill:!1}],t["GR.IC.FF.CLASS X"]={type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"CA"},t["GR.IC.FF.THEATRE SUPPORT"]={Unknown:{type:"path",d:"M40,75 l15,25 -15,25 M160,75 l-15,25 15,25",fill:!1},Friend:{type:"path",d:"M25,50 l30,50 -30,50 M175,50 l-30,50 30,50",fill:!1},Neutral:{type:"path",d:"M45,50 l20,50 -20,50 M155,50 l-20,50 20,50",fill:!1},Hostile:{type:"path",d:"M50,80 l15,20 -15,20 M150,80 l-15,20 15,20",fill:!1}}[O],t["GR.IC.FF.US MARSHALS SERVICE"]={type:"path",d:"m 100,70 7.1,20.3 21.5,0.4 -17.1,13 6.2,20.6 L 100,112 82.4,124.3 88.6,103.7 71.5,90.7 92.9,90.3 z m 0,-5 c -19.3,0 -35,15.7 -35,35 0,19.3 15.7,35 35,35 19.3,0 35,-15.7 35,-35 0,-19.3 -15.7,-35 -35,-35 z m 0,5 c 16.6,0 30,13.4 30,30 0,16.6 -13.4,30 -30,30 -16.6,0 -30,-13.4 -30,-30 0,-16.6 13.4,-30 30,-30 z"},t["GR.M1.ACCIDENT"]=N("ACC"),t["GR.M1.AIRMOBILE/AIR ASSAULT"]={type:"path",fill:!1,d:"M85,55 L100,75 115,55"},t["GR.M1.AMMUNITION"]={type:"path",d:"M95,75 L95,60 C95,55 105,55 105,60 L105,75 M90,75 L110,75",fill:!1},t["GR.M1.ANTISUBMARINE WARFARE"]=N("P"),t["GR.M1.AREA"]=N("AREA"),t["GR.M1.ATTACK"]=N("A"),t["GR.M1.AVIATION"]={type:"path",d:"m 75,60 0,15 50,-15 0,15 z"};t["GR.M1.BIOLOGICAL"]=N("B");t["GR.M1.BORDER"]=N("BOR"),t["GR.M1.BRIDGING"]={type:"path",fill:!1,d:"m 80,80 5,-5 30,0 5,5 m -40,-20 5,5 30,0 5,-5"},t["GR.M1.CHEMICAL"]=N("C"),t["GR.M1.INTRUSION"]=N("I"),t["GR.M1.CHEMICAL SURVEILLANCE"]=N("RS"),t["GR.M1.CIVILIAN"]=N("CIV"),t["GR.M1.CLOSE PROTECTION"]=N("CLP"),t["GR.M1.COMBAT"]=N("CBT"),t["GR.M1.COMMAND AND CONTROL"]=N(R?"Y":"C2"),t["GR.M1.COMMUNICATIONS CONTINGENCY PACKAGE"]=N("CCP"),t["GR.M1.CONSTRUCTION"]={type:"text",stroke:!1,x:100,y:75,fontsize:20,text:"CONST"},t["GR.M1.CROSS CULTURAL COMMUNICATION"]=N("CCC"),t["GR.M1.CROWD AND RIOT CONTROL"]=N("CRC"),t["GR.M1.DECONTAMINATION"]=N("D"),t["GR.M1.DETENTION"]=N("DET"),t["GR.M1.DIRECT COMMUNICATIONS"]={type:"path",fill:!1,d:"m 95,65 -5,5 5,5 m 10,-10 5,5 -5,5 M 90,70 c 20,0 20,0 20,0 m 15,0 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m -40,0 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z"},t["GR.M1.DIVING"]={type:"path",fill:!1,d:"m 104.6,64.8 c 0,2.7 -2.1,4.8 -4.6,4.8 -2.5,0 -4.6,-2.2 -4.6,-4.8 0,-2.7 2.1,-4.8 4.6,-4.8 2.5,0 4.6,2.2 4.6,4.8 z m 0,8.7 4.6,4.8 -18.3,0 4.6,-4.8 M 108.3,60 l 4.6,0 0,9.6 -4.6,0 m -16.5,0 -4.6,0 0,-9.6 4.6,0 m 17.4,4.8 c 0,5.3 -4.1,9.6 -9.2,9.6 -5.1,0 -9.2,-4.3 -9.2,-9.6 0,-5.3 4.1,-9.6 9.2,-9.6 5.1,0 9.2,4.3 9.2,9.6 z"},t["GR.M1.DIVISION"]=N("D"),t["GR.M1.DOG"]=N("DOG"),t["GR.M1.DRILLING"]={type:"path",d:"m 90,60 5,15 10,0 5,-15 z"},t["GR.M1.ELECTRO-OPTICAL"]=N("EO"),t["GR.M1.ENHANCED"]=N("ENH"),t["GR.M1.EXPLOSIVE ORDNANCE DISPOSAL"]=N("EOD"),t["GR.M1.EARLY WARNING RADAR"]=N("EWR"),t["GR.M1.FIRE DIRECTION CENTRE"]=N("FDC"),t["GR.M1.FORCE"]=N("F"),t["GR.M1.FORWARD"]=N("FWD"),t["GR.M1.GROUND STATION MODULE"]=N("GSM"),t["GR.M1.INTRUSION"]=N("I"),t["GR.M1.LANDING SUPPORT"]=N("LS"),t["GR.M1.LARGE COMMUNICATIONS CONTINGENCY PACKAGE"]=N("LCCP"),t["GR.M1.LARGE EXTENSION NODE"]=N("LEN"),t["GR.M1.MAINTENANCE"]={type:"path",fill:!1,
d:"m 84,70 32,0 m 4,-5 c -5,0 -5,10 0,10 M 80,65 c 5,0 5,10 0,10"},t["GR.M1.MEDEVAC"]=t["AIR.M1.MEDEVAC"],t["GR.M1.METEOROLOGICAL"]=N("MET"),t["GR.M1.MINE COUNTERMEASURE"]=N("MCM"),t["GR.M1.MISSILE"]={type:"path",d:"M95,80 L95,60 C95,55 105,55 105,60 L105,80 M100,80 L100,55",fill:!1},t["GR.M1.(MOBILE) ADVISOR AND SUPPORT"]={type:"path",d:"m 105,65 5,5 -5,5 M 90,70 c 20,0 20,0 20,0 m 15,0 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m -40,0 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z",fill:!1},t["GR.M1.MOBILE SUBSCRIBER EQUIPMENT"]=N("MSE"),t["GR.M1.MOBILITY SUPPORT"]=N("MS"),t["GR.M1.MOVEMENT CONTROL CENTRE"]=N("MCC"),t["GR.M1.MULTINATIONAL"]=N("MN"),t["GR.M1.MULTINATIONAL SPECIALIZED UNIT"]=N("MSU"),t["GR.M1.MULTIPLE ROCKET LAUNCHER"]={type:"path",d:"M85,75 l15,-15 15,15 M85,67 l15,-15 15,15",fill:!1},t["GR.M1.NATO MEDICAL ROLE 1"]={type:"text",stroke:!1,x:120,y:77,fontsize:25,text:"1"},t["GR.M1.NATO MEDICAL ROLE 2"]={type:"text",stroke:!1,x:120,y:77,fontsize:25,text:"2"},t["GR.M1.NATO MEDICAL ROLE 3"]={type:"text",stroke:!1,x:120,y:77,fontsize:25,text:"3"},t["GR.M1.NATO MEDICAL ROLE 4"]={type:"text",stroke:!1,x:120,y:77,fontsize:25,text:"4"},t["GR.M1.NAVAL"]=MS.translate(0,-35,MS.scale(.6,t["GR.IC.NAVAL"])),t["GR.M1.NODE CENTRE"]=N("NC"),t["GR.M1.NUCLEAR"]=N("N"),t["GR.M1.OPERATIONS"]=N("OPS"),t["GR.M1.OPTICAL"]=N("OPT"),t["GR.M1.OTHER"]=N("OTH"),t["GR.M1.PERSONNEL RECOVERY"]=N("H"),t["GR.M1.RADAR"]=MS.translate(0,-30,MS.scale(.5,t["GR.IC.RADAR"])),t["GR.M1.RADIO FREQUENCY IDENTIFICATION (RFID) INTERROGATOR/ SENSOR"]=N("RF"),t["GR.M1.RAILROAD"]=MS.translate(0,-50,[{type:"path",d:"M60,120 l80,0",fill:!1},{type:"circle",fill:!1,cx:65,cy:125,r:5},{type:"circle",fill:!1,cx:75,cy:125,r:5},{type:"circle",fill:!1,cx:125,cy:125,r:5},{type:"circle",fill:!1,cx:135,cy:125,r:5}]),t["GR.M1.RADIOLOGICAL"]=N("RAD"),t["GR.M1.RANGER"]=N("RGR"),t["GR.M1.RECON"]=N("R"),t["GR.M1.SEARCH AND RESCUE"]=N("SAR"),t["GR.M1.SECURITY"]=N("SEC"),t["GR.M1.SENSOR"]={type:"path",d:"m 100,55 c -2,5 -5,8 -10,10 5,2 8,5 10,10 2,-5 5,-8 10,-10 -5,-2 -8,-5 -10,-10 z"},t["GR.M1.SENSOR CONTROL MODULE"]=N("SCM"),t["GR.M1.SIGNALS INTELLIGENCE"]={type:"path",fill:!1,d:"m 100,55 0,23 m -15,-18 5,-5 5,5 5,-5 5,5 5,-5 5,5"},t["GR.M1.SIGNAL SUPPORT"]=N("SPT"),t["GR.M1.SINGLE SHELTER SWITCH"]=N("SSS"),t["GR.M1.SINGLE ROCKET LAUNCHER"]={type:"path",d:"M85,75 l15,-15 15,15",fill:!1},t["GR.M1.SMALL EXTENSION NODE"]=N("SEN"),t["GR.M1.SMOKE"]=N("S"),t["GR.M1.SMOKE/DECON"]=N("SD"),t["GR.M1.SNIPER"]={type:"path",d:"M75,55 l20,0 M100,80 l0,-20 M125,55 l-20,0",fill:!1},t["GR.M1.SOUND RANGING"]=N("SDR"),t["GR.M1.SPECIAL OPERATIONS FORCES (SOF)"]=N("SOF"),t["GR.M1.SPECIAL WEAPONS AND TACTICS"]={type:"text",stroke:!1,x:100,y:77,fontsize:23,text:"SWAT"},t["GR.M1.SUPPORT"]=N("SPT"),t["GR.M1.SURVEY"]={type:"path",d:"m 108,78 -8,-8 m 0,0 -8,8 m 8,-8 0,-15 15,8 z"},t["GR.M1.TACTICAL EXPLOITATION"]=N("TE"),t["GR.M1.TARGET ACQUISITION"]=N("TA"),t["GR.M1.TOPOGRAPHIC"]={type:"path",fill:!1,d:"m 92,65 c 6,3 10,3 16,0 m -18,13 10,-23 10,23"},t["GR.M1.TRAINING CAMP"]=N("TNG"),t["GR.M1.UNMANNED AERIAL VEHICLE"]=t["AIR.M1.UNMANNED AERIAL VEHICLE"],t["GR.M1.UPGRADED EARLY WARNING RADAR"]=N("UEW"),t["GR.M1.UTILITY"]=N("U"),t["GR.M1.VIDEO IMAGERY"]={type:"path",fill:!1,d:"m 120,65 -11,0 m 11,10 -14,0 m 4,-14 -30,0 0,18 25,0 z m 10,2 0,14"},t["GR.M1.YARD"]=N("YRD"),t["GR.M2.AIRBORNE"]={type:"path",d:"M75,140 C75,125 100,125 100,140 C100,125 125,125 125,140",strokewidth:2,fill:!1},t["GR.M2.ARCTIC"]={type:"path",d:"M115,125 C125,125 125,135 115,135 L85,135 C75,135 75,125 85,125",fill:!1},t["GR.M2.ATTACK"]=T("A"),t["GR.M2.BATTLE DAMAGE REPAIR"]=T("BDR"),t["GR.M2.BICYCLE EQUIPPED"]={type:"circle",cx:100,cy:132,r:11,fill:!1},t["GR.M2.CASUALTY STAGING"]=T("CS"),t["GR.M2.CLEARING"]=T("CLR"),t["GR.M2.CLOSE RANGE"]=T("CR"),t["GR.M2.COMBAT SEARCH AND RESCUE"]=T("CSAR"),t["GR.M2.CONTROL"]={type:"path",d:"m 98,130 2,-4 2,4 m -8,8 -4,-2 4,-2 m 8,8 -2,4 -2,-4 m 8,-8 4,2 -4,2 m -14,-2 16,0 m -8,-8 0,16",fill:!1},t["GR.M2.CROSS-COUNTRY TRUCK"]=[{type:"path",d:"M60,120 l80,0",fill:!1},{type:"circle",fill:!1,cx:65,cy:125,r:5},{type:"circle",fill:!1,cx:100,cy:125,r:5},{type:"circle",fill:!1,cx:135,cy:125,r:5}],t["GR.M2.CAVALRY"]={type:"text",stroke:!1,x:110,y:140,fontsize:25,text:"CAV"},t["GR.M2.DECONTAMINATION"]=T("D"),t["GR.M2.DEMOLITION"]=T("DEM"),t["GR.M2.DENTAL"]={type:"text",stroke:!1,x:115,y:133,fontsize:25,text:"D"},t["GR.M2.DIGITAL"]=T("DIG"),t["GR.M2.ENHANCED POSITION LOCATION REPORTING SYSTEM"]={type:"path",d:"m 87,142 13,-12 13,12 m -13,-20 0,20 0,0",fill:!1},t["GR.M2.EQUIPMENT"]=T("E"),t["GR.M2.EQUIMENT/TROOP"]=T("E/T"),t["GR.M2.HEAVY"]=T("H"),t["GR.M2.HIGH ALTITUDE"]=T("HA"),t["GR.M2.HIGH TO MEDIUM ALTITUDE"]=T("HMA"),t["GR.M2.HIGH TO LOW ALTITUDE"]=T("HLA"),t["GR.M2.INTERMODAL"]={type:"path",d:"m 80,125 40,0 0,-4 8,9 -8,9 0,-4 -40,0 0,4 -8,-9 8,-9 z",fill:!1},t["GR.M2.INTENSIVE CARE"]=T("IC"),t["GR.M2.LIGHT"]=T("L"),t["GR.M2.LABORATORY"]=T("LAB"),t["GR.M2.LAUNCHER"]={type:"path",fill:!1,d:"M80,140 L115,120 120,140"},t["GR.M2.LONG RANGE"]=T("LR"),t["GR.M2.LONG RANGE SURVEILLANCE"]={type:"text",stroke:!1,x:110,y:140,fontsize:25,text:"LRS"},t["GR.M2.LOW ALTITUDE"]=T("LA"),t["GR.M2.MEDIUM"]=T("M"),t["GR.M2.MEDIUM ALTITUDE"]=T("MA"),t["GR.M2.MEDIUM TO LOW ALTITUDE"]=T("MLA"),t["GR.M2.MEDIUM RANGE"]=T("MR"),t["GR.M2.MOUNTAIN"]={type:"path",stroke:!1,d:"M90,140 L100,120 110,140"},t["GR.M2.MULTIPLE ALTITUDES"]=T("H/MA"),t["GR.M2.MULTI-CHANNEL"]=T("MC"),t["GR.M2.OPTICAL"]=T("OPT"),t["GR.M2.PACK ANIMAL"]={type:"path",d:"m 84,140 9,-15 7,15 7,-15 9,15",fill:!1},t["GR.M2.PATIENT EVACUATION COORDINATION"]=T("PEC"),t["GR.M2.PREVENTIVE MAINTENANCE"]=T("PM"),t["GR.M2.PSYCHOLOGICAL"]={type:"text",stroke:!1,x:115,y:133,fontsize:25,text:"P"},t["GR.M2.RADIO RELAY LINE OF SIGHT"]=[{type:"circle",cx:100,cy:132,r:11,fill:!1},{type:"path",d:"M 90.8 128.2 C 90.3 129.3 90 130.6 90 132 C 90 133.4 90.3 134.7 90.8 135.8 L 100 132 L 90.8 128.2 z M 100 132 L 109.3 135.8 C 109.7 134.7 110 133.4 110 132 C 110 130.6 109.7 129.3 109.3 128.2 L 100 132 z"}],t["GR.M2.RAILROAD"]=[{type:"path",d:"M60,120 l80,0",fill:!1},{type:"circle",fill:!1,cx:65,cy:125,r:5},{type:"circle",fill:!1,cx:75,cy:125,r:5},{type:"circle",fill:!1,cx:125,cy:125,r:5},{type:"circle",fill:!1,cx:135,cy:125,r:5}],t["GR.M2.RECOVERY (UNMANNED SYSTEMS)"]={type:"path",d:"m 70,125 c0,20 60,20 60,0",fill:!1},t["GR.M2.RECOVERY (MAINTENANCE)"]={type:"path",fill:!1,d:"M75,125 c8,0 8,16 0,16 m8,-8 l35,0 m8,-8 c-8,0 -8,16 0,16"},t["GR.M2.REFUEL"]=T("K"),t["GR.M2.RESCUE COORDINATION CENTRE"]=T("RCC"),t["GR.M2.RIVERINE"]={type:"path",d:"m 80,125 c 0,10 40,10 40,0 z",fill:!1},t["GR.M2.SINGLE CHANNEL"]=T("SC"),t["GR.M2.SKI"]={type:"path",d:"m 95,145 -9,-8 m 28,0 -9,8 m -15,-24 20,20 m 0,-20 -20,20",fill:!1},t["GR.M2.SHORT RANGE"]=T("SR"),t["GR.M2.STRATEGIC"]=T("STR"),t["GR.M2.STRATEGIC MISSILE"]=T("S"),t["GR.M2.SUPPORT"]=T("SPT"),t["GR.M2.TACTICAL"]=T("TAC"),t["GR.M2.TACTICAL MISSILE"]=T("T"),t["GR.M2.TARGET ACQUISITION"]=T("TA"),t["GR.M2.TOWED"]=[{type:"path",d:"M70,120 l60,0",fill:!1},{type:"circle",fill:!1,cx:65,cy:120,r:5},{type:"circle",fill:!1,cx:135,cy:120,r:5}],t["GR.M2.TROOP"]=T("T"),t["GR.M2.TRACKED"]={type:"path",d:"M 70,120 l 60,0 c10,0 10,10 0,10 l -60,0 c-10,0 -10,-10 0,-10",fill:!1},t["GR.M2.TRUCK"]=[{type:"path",d:"M60,120 l80,0",fill:!1},{type:"circle",fill:!1,cx:65,cy:125,r:5},{type:"circle",fill:!1,cx:135,cy:125,r:5}],t["GR.M2.UTILITY"]=T("U"),t["GR.M2.VERTICAL OR SHORT TAKE-OFF AND LANDING "]={type:"text",stroke:!1,x:100,y:135,fontsize:20,text:"VSTOL"},t["GR.M2.VETERINARY"]={type:"text",stroke:!1,x:115,y:133,fontsize:25,text:"V"},t["GR.M2.WHEELED"]=[{type:"circle",cx:70,cy:125,r:5,fill:!1},{type:"circle",cx:100,cy:125,r:5,fill:!1},{type:"circle",cx:130,cy:125,r:5,fill:!1}],t["GR.M2.WHEELED LIMITED"]=[{type:"circle",cx:70,cy:125,r:5,fill:!1},{type:"circle",cx:130,cy:125,r:5,fill:!1}],t["GR.EQ.SHORT RANGE"]={type:"path",d:"m 85,100 30,0",fill:!1},t["GR.EQ.INTERMEDIATE RANGE"]={type:"path",d:"m 85,105 30,0 m -30,-10 30,0",fill:!1},t["GR.EQ.LONG RANGE"]={type:"path",d:"m 85,110 30,0 m -30,-20 30,0 m -30,10 30,0",fill:!1},t["GR.EQ.WEAPON"]={type:"path",d:"m 100,60 0,80",fill:!1},t["GR.EQ.RIFLE"]={type:"path",d:"m 100,60 0,80 M 85,75 100,60 115,75",fill:!1},t["GR.EQ.MACHINE GUN"]={type:"path",d:"m 100,60 0,80 M 85,75 100,60 115,75 M 80,140 120,140",fill:!1},t["GR.EQ.GRENADE LAUNCHER"]=[t["GR.EQ.RIFLE"],{type:"circle",cx:100,cy:90,r:15,fill:!1}],t["GR.EQ.FLAME THROWER"]={type:"path",fill:!1,d:"m 90,135 0,-70 c 0,-15 20,-15 20,0"},t["GR.EQ.AIR DEFENCE GUN"]=[{type:"path",d:"m 85,140 30,0 c 0,-20 -30,-20 -30,0 z m 15,-80 0,65 m 15,-45 0,40 m -30,-40 0,40",fill:!1}],R||t["GR.EQ.AIR DEFENCE GUN"].push({type:"path",d:"M 85,75 100,60 115,75",fill:!1}),t["GR.EQ.ANTITANK GUN"]={type:"path",d:"m 85,140 15,-15 15,15 m -15,-80 0,65 m -15,-45 0,40 m 30,-40 0,40",fill:!1},t["GR.EQ.DIRECT FIRE GUN"]={type:"path",d:"m 100,60 0,80 m 15,-60 0,40 m -30,-40 0,40",fill:!1},t["GR.EQ.RECOILLESS GUN"]={type:"path",d:"m 85,75 15,-15 15,15 m 0,5 0,40 m -30,-40 0,40 m 15,-60 0,80",fill:!1},t["GR.EQ.HOWITZER"]=[{type:"circle",cx:100,cy:130,r:10,fill:!1},{type:"path",d:"m 115,80 0,40 m -30,-40 0,40 m 15,-60 0,60",fill:!1}],R||t["GR.EQ.HOWITZER"].push({type:"path",d:"M 85,75 100,60 115,75",fill:!1}),t["GR.EQ.HOWITZER TRACKED"]={type:"path",d:"M 70,120 l 60,0 c10,0 10,10 0,10 l -60,0 c-10,0 -10,-10 0,-10",fill:!1},t["GR.EQ.MISSILE LAUNCHER"]={type:"path",d:"m 100,140 0,-80 m -15,80 0,-65 c 0,-20 30,-20 30,0 l 0,65",fill:!1},t["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"]={type:"path",d:"m 85,140 30,0 c 0,-20 -30,-20 -30,0 z m 15,-15 0,-65 m -15,80 0,-65 c 0,-20 30,-20 30,0 l 0,65",fill:!1},t["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"R"},t["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]=[{type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"E"},{type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"R"}],t["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR THEATRE"]={type:"text",stroke:!1,x:100,y:145,fontsize:30,text:"T"},t["GR.EQ.ANTITANK MISSILE LAUNCHER"]={type:"path",d:"m 85,140 15,-15 15,15 M 85,130 85,75 c 0,-20 30,-20 30,0 l 0,55 m -15,-5 0,-65",fill:!1},t["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"]=[t["GR.EQ.MISSILE LAUNCHER"]],R&&t["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"].push({type:"path",d:"m 85,140 30,0",fill:!1}),t["GR.EQ.MORTAR"]=[{type:"path",d:"m 100,60 0,60 M 85,75 100,60 115,75",fill:!1},{type:"circle",cx:100,cy:130,r:10,fill:!1}],t["GR.EQ.SINGLE ROCKET LAUNCHER"]={type:"path",d:"m 85,75 15,-15 15,15 m -15,-5 0,70 M 85,85 100,70 115,85",fill:!1},t["GR.EQ.MULTIPLE ROCKET LAUNCHER"]={type:"path",d:"m 115,90 0,40 m -30,-40 0,40 m 0,-55 15,-15 15,15 m -15,-5 0,70 M 85,85 100,70 115,85",fill:!1},t["GR.EQ.ANTITANK ROCKET LAUNCHER"]={type:"path",d:"m 85,140 15,-15 15,15 M 85,85 100,70 115,85 m -15,-15 0,55 M 85,75 100,60 115,75",fill:!1},t["GR.EQ.NON-LETHAL WEAPON"]={type:"path",d:"m 100,60 0,80 M 80,60 l40,0",fill:!1},t["GR.EQ.TASER"]=[t["GR.EQ.NON-LETHAL WEAPON"],S("Z")],t["GR.EQ.WATER CANNON"]=[t["GR.EQ.NON-LETHAL WEAPON"],S("W")],t["GR.EQ.LIMITED CROSS-COUNTRY"]=[{type:"path",d:"m 70,130 60,0",fill:!1},{type:"circle",cx:75,cy:135,r:5,fill:!1},{type:"circle",cx:125,cy:135,r:5,fill:!1}],t["GR.EQ.CROSS-COUNTRY"]=[{type:"path",d:"m 70,130 60,0",fill:!1},{type:"circle",cx:75,cy:135,r:5,fill:!1},{type:"circle",cx:100,cy:135,r:5,fill:!1},{type:"circle",cx:125,cy:135,r:5,fill:!1}],t["GR.EQ.ARMOURED FIGHTING VEHICLE"]={type:"path",d:"m 70,100 30,-30 30,30 -30,30 z m 60,-30 0,60 m -60,-60 0,60 0,0",fill:!1},t["GR.EQ.ARMOURED FIGHTING VEHICLE (AFV) COMMAND AND CONTROL"]=[t["GR.EQ.ARMOURED FIGHTING VEHICLE"]],e&&t["GR.EQ.ARMOURED FIGHTING VEHICLE (AFV) COMMAND AND CONTROL"].push([{type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"C2"},{type:"path",d:"m 80,90 20,15 0,-10 20,15",fill:!1}]),t["GR.EQ.ARMOURED PERSONNEL CARRIER"]={type:"path",fill:!1,d:"m 70,80 30,-10 30,10 0,0 m -60,50 60,0 m 0,-60 0,60 m -60,-60 0,60 0,0"},t["GR.EQ.ARMOURED PERSONNEL CARRIER COMBAT SERVICE SUPPORT VEHICLE"]=[t["GR.EQ.ARMOURED PERSONNEL CARRIER"],{type:"path",d:"m 70,972.4 60,0",fill:!1}],t["GR.EQ.ARMOURED PERSONNEL CARRIER ENGINEER RECON VEHICLE"]={type:"path",fill:!1,d:"M 130,80 70,130"},t["GR.EQ.COMBAT SERVICE SUPPORT VEHICLE"]={type:"path",fill:!1,d:"M 70,120 130,120"},t["GR.EQ.ARMOURED MEDICAL PERSONNEL CARRIER"]={type:"path",fill:!1,d:"m 70,100 60,0 m -30,-30 0,60"},t["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"]=[t["GR.IC.ARMOUR"],t["GR.M2.WHEELED LIMITED"]],t["GR.EQ.ARMOURED VEHICLE"]=S("A"),t["GR.EQ.ARMORED CARRIER WITH VOLCANO"]=S("V"),t["GR.EQ.TANK"]={type:"path",fill:!1,d:"m 70,80 60,0 m -60,40 60,0 m -60,-50 0,60 0,0 m 60,-60 0,60"};t["GR.EQ.LIGHT TANK"]={type:"path",fill:!1,d:"m 100,80 0,40"};t["GR.EQ.MEDIUM TANK"]={type:"path",fill:!1,d:"m 105,80 0,40 m -10,-40 0,40"},t["GR.EQ.HEAVY TANK"]={type:"path",fill:!1,d:"m 110,80 0,40 m -20,-40 0,40 m 10,-40 0,40"},t["GR.EQ.TANK RECOVERY VEHICLE"]={type:"path",fill:!1,d:"m 85,100 30,0 m 10,-10 c -13.1,0 -12.4,20 0,20 M 75,90 c 12.7,0.3 12.7,20.3 0,20"},t["GR.EQ.BRIDGE"]={type:"path",d:"m 115,75 -10,10 0,30 10,10 m -30,-50 10,10 0,30 -10,10 m -15,-55 60,0 0,60 -60,0 0,-60",fill:!1},t["GR.EQ.FIXED BRIDGE"]={type:"path",d:"M 100,70 100,130",fill:!1},t["GR.EQ.FOLDING GIRDER BRIDGE"]={type:"path",d:"M 110, 80 90,80 90,120 110,120",fill:!1},t["GR.EQ.HOLLOW DECK BRIDGE"]={type:"path",d:"M 110, 80 90,80 90,120 110,120 z",fill:!1},t["GR.EQ.DRILL"]=t["GR.IC.DRILLING"],t["GR.EQ.DOZER"]={type:"path",d:"m 90,60 20,0 m -10,0 0,20 m -30,0 60,0 m -60,-10 0,60 0,0 m 60,-60 0,60 m -60,-10 60,0",fill:!1},t["GR.EQ.DOZER ARMORED"]={type:"path",d:"m 70,130 60,0 m -30,-70 0,10 m -30,10 30,-10 30,10 m 0,-10 0,60 m -60,-60 0,60 0,0 m 20,-70 20,0",fill:!1},t["GR.EQ.EARTHMOVER"]={type:"path",d:"m 100,60 0,20 m -25,-15 5,-5 40,0 5,5 m -55,15 60,0 m -60,40 60,0 m 0,-50 0,60 m -60,-60 0,60 0,0",fill:!1},t["GR.EQ.MULTIFUNCTIONAL EARTHMOVER/DIGGER"]=[t["GR.EQ.EARTHMOVER"],S("MF")],t["GR.EQ.MINE CLEARING EQUIPMENT"]={type:"path",d:"m 100,80 0,15 -30,25 60,0 -30,-25",fill:!1},t["GR.EQ.MINE LAYING VEHICLE"]=[{type:"path",d:"m 90,85 20,30 m 0,-30 -20,30 m 10,-30 0,30",fill:!1},{type:"circle",cx:100,cy:100,r:10}],t["GR.EQ.MINE SCATTERABLE"]=[S("S"),{type:"circle",cx:85,cy:115,r:5,fill:!1},{type:"circle",cx:100,cy:115,r:5,fill:!1},{type:"circle",cx:115,cy:115,r:5,fill:!1}],t["GR.EQ.UTILITY VEHICLE"]={type:"path",fill:!1,d:"m 70,65 c 0,15 60,15 60,0 l 0,65 -60,0 z"},t["GR.EQ.UTILITY VEHICLE BACKHOE"]=[{type:"path",fill:!1,d:"M 130,130 100,80 75,95 75,95"},{type:"path",d:"M 75,105 85,95 75,95 z"}],t["GR.EQ.UTILITY VEHICLE FERRY TRANSPORTER"]={type:"path",fill:!1,d:"m 75,100 c 15,15 35,15 50,0 z"},t["GR.EQ.UTILITY VEHICLE LIGHT"]={type:"path",fill:!1,d:"M 100,78.3 100,130"},t["GR.EQ.UTILITY VEHICLE MEDIUM"]={type:"path",fill:!1,d:"m 105,130 0,-52 M 95,130 l0,-52"},t["GR.EQ.UTILITY VEHICLE HEAVY"]={type:"path",fill:!1,d:"m 110,130 0,-53 m -20,50 0,-53 m 10,1.3 0,52"},t["GR.EQ.UTILITY VEHICLE.TOW TRUCK"]={type:"path",fill:!1,d:"m 130,130 -40,-40 0,25 c 0,5 -10,5 -10,0"},t["GR.EQ.UTILITY VEHICLE.TOW TRUCK.LIGHT"]={type:"path",fill:!1,d:"m 105,115 10,-10"},t["GR.EQ.UTILITY VEHICLE.TOW TRUCK.HEAVY"]={type:"path",fill:!1,d:"m 120,110 -10,10 m -10,-10 10,-10 m -5,15 10,-10"},t["GR.EQ.MEDICAL VEHICLE"]={type:"path",fill:!1,d:"m 70,100 l 60,0 M 100,78.3 100,130"},t["GR.EQ.MEDICAL EVACUATION"]={type:"path",d:"m 95,85 10,0 0,10 10,0 0,10 -10,0 0,10 -10,0 0,-10 -10,0 0,-10 10,0 z"},t["GR.EQ.MOBILE EMERGENCY PHYSICIAN"]={type:"path",fill:!1,d:"m 70,100 l 60,0 M 100,78.3 100,130 M 85,85 115,85"},t["GR.EQ.BUS"]=[t["GR.EQ.UTILITY VEHICLE"],S("B")],t["GR.EQ.SEMI-TRAILER TRUCK"]=[t["GR.EQ.UTILITY VEHICLE"],{type:"path",fill:!1,d:"m 140,90 0,20 m -10,-10 10,0"},{type:"circle",cx:75,cy:135,r:5,fill:!1},{type:"circle",cx:85,cy:135,r:5,fill:!1},{type:"circle",cx:125,cy:135,r:5,fill:!1}],t["GR.EQ.WATER VEHICLE"]=[t["GR.EQ.UTILITY VEHICLE"],{type:"path",fill:!1,d:"m 70,95 c 10,0 0,10 10,10 10,0 0,-10 10,-10 10,0 0,10 10,10 10,0 0,-10 10,-10 10,0 0,10 10,10 10,0 0,-10 10,-10"}],t["GR.EQ.TRAIN LOCOMOTIVE"]={type:"path",fill:!1,d:"m 70,70 0,60 60,0 0,-30 -30,0 0,-30 z"},t["GR.EQ.RAILCAR"]=[t["GR.EQ.UTILITY VEHICLE"],{type:"circle",fill:!1,cx:75,cy:135,r:5},{type:"circle",fill:!1,cx:85,cy:135,r:5},{type:"circle",fill:!1,cx:115,cy:135,r:5},{type:"circle",fill:!1,cx:125,cy:135,r:5}],t["GR.EQ.CBRN EQUIPMENT"]=[{type:"path",d:"M80,140 c0,-20 10,-60 50,-63 m-10,63 c0,-20 -10,-60 -50,-63 ",fill:!1},{type:"circle",cx:70,cy:85,r:8},{type:"circle",cx:130,cy:85,r:8}],t["GR.EQ.COMPUTER SYSTEM"]={type:"path",d:"m 100,132 0,-10 -35,0 0,-50 70,0 0,50 -35,0 m -25,10 50,0",fill:!1},t["GR.EQ.COMMAND LAUNCH EQUIPMENT (CLE)"]=S("CLE"),t["GR.EQ.GENERATOR SET"]=S("G"),t["GR.EQ.GROUND-BASED MIDCOURSE DEFENSE (GMD) FIRE CONTROL (GFC) CENTER"]=S("GFC"),t["GR.EQ.IN-FLIGHT INTERCEPTOR COMMUNICATIONS SYSTEM (IFICS) DATA TERMINAL (IDT)"]={type:"path",fill:!1,d:"m 80,82.4 45,-2 -4,37 m -6,-1 0,-35 -34,9 m 12,21 0,8 M 80,82.4 c 0,25 16,35 41,35"},t["GR.EQ.LASER"]={type:"path",fill:!1,d:"m 100,55 0,25 10,5 -20,5 20,5 -20,5 10,5 0,15 10,5 -20,5 20,5 -20,5 20,5 M 90,65 100,55 110,65"},t["GR.EQ.TENT"]={type:"path",fill:!1,d:"m 65,124.4 10,-37 25,-10 25,10 10,37 z"},t["GR.EQ.UNIT DEPLOYMENT SHIPMENTS"]=S("DPLY"),t["GR.EQ.CIVILIAN VEHICLE.LIGHT"]={type:"path",fill:!1,d:"m 100,125 0,-20"},t["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]={type:"path",fill:!1,d:"m 103,105 0,20 m -6,-20 0,20"},t["GR.EQ.CIVILIAN VEHICLE.HEAVY"]={type:"path",fill:!1,d:"m 106,105 0,20 m -12,-20 0,20 m 6,-20 0,20"},t["GR.EQ.CIVILIAN VEHICLE.TRAILER"]={type:"path",fill:!1,d:"m 140,105 0,20 m -10,-10 10,0"},t["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"]=[{type:"path",fill:!!R&&U,d:"m 90,125 20,0 m -20,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 35,0 5,0 0,-20 -20,0 0,-20 -20,0 0,20 -20,0 0,20 5,0 m 50,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z"},{type:"path",fill:!1,strokewidth:2,d:"m 95,90 0,15 10,0 0,-15 z"}],t["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"]=[{type:"path",fill:!!R&&U,d:"m 90,125 20,0 m -20,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 35,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 0,0 5,0 0,-20 -20,0 -20,0 0,-20 -20,0 0,20 0,20 5,0"},{type:"path",fill:!1,strokewidth:2,d:"m 75,90 0,15 10,0 0,-15 z"}],t["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"]=[{type:"path",fill:!!R&&U,d:"m 90,125 20,0 m -20,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 35,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 0,0 5,0 0,-20 0,-20 -20,0 -20,0 -20,0 0,20 0,20 5,0"},{type:"path",fill:!1,strokewidth:2,d:"m 115,90 0,15 10,0 0,-15 z m -20,0 0,15 10,0 0,-15 z m -20,0 0,15 10,0 0,-15 z"}],t["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"]=[{type:"path",fill:!!R&&U,d:"m 90,125 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 35,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m -35,0 20,0 m 15,0 5,0 0,-20 0,-20 -20,0 -20,0 0,20 -20,0 0,20 5,0"},{type:"path",fill:!1,strokewidth:2,d:"m 95,90 0,15 10,0 0,-15 z"}],t["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"]={type:"path",fill:!!R&&U,d:"m 90,125 20,0 m -20,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 35,0 c 0,-4.1 -3.4,-7.5 -7.5,-7.5 -4.1,0 -7.5,3.4 -7.5,7.5 0,4.1 3.4,7.5 7.5,7.5 4.1,0 7.5,-3.4 7.5,-7.5 z m 0,0 5,0 0,-20 -60,0 0,20 5,0 m 15,-20 5,-15"},t["GR.EQ.PACK ANIMAL"]={type:"path",fill:!1,d:"m 70,125 15,-50 15,50 15,-50 15,50 "},t["GR.EQ.MISSILE SUPPORT"]=[{type:"text",stroke:!1,x:100,y:100,fontsize:20,text:"MSL"},{type:"text",stroke:!1,x:100,y:115,fontsize:20,text:"SPT"}],t["GR.EQ.MISSILE TRANSLOADER"]=[{type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"MSL"},{type:"path",fill:!1,d:"m 75,70 50,0 m -25,10 c 0,-5 0,-10 0,-10"}],t["GR.EQ.MISSILE TRANSPORTER"]=[{type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"MSL"},{type:"path",fill:!1,d:"m 55,85 90,0"}],t["GR.EQ.MISSILE CRANE/LOADING DEVICE"]=[{type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"MSL"},{type:"path",fill:!1,d:"m 75,80 25,-20 c 0,0 0,15 0,15 l 5,0 0,-5"}],t["GR.EQ.MISSILE PROPELLANT TRANSPORTER"]=[{type:"text",stroke:!1,x:90,y:110,fontsize:20,text:"MSL"},{type:"path",fill:!1,d:"m 120,115 0,-15 -10,-10 20,0 -10,10"}],t["GR.EQ.MISSILE WARHEAD TRANSPORTER"]=[{type:"text",stroke:!1,x:100,y:100,fontsize:20,text:"MSL"},{type:"text",stroke:!1,x:100,y:115,fontsize:20,text:"WHD"}],t["GR.EQ.LAND MINE"]=e?{type:"circle",cx:100,cy:100,r:22,fill:!1}:[{type:"path",fill:!1,d:"m 70,65 60,0 -30,65 z"},{type:"text",stroke:!1,x:100,y:90,fontfamily:"Arial",fontsize:30,text:"M"}],t["GR.EQ.ANTIPERSONNEL LAND MINE"]=[{type:"circle",cx:100,cy:100,r:22},{type:"path",d:"M117,82 l20,-18 -18,25z M83,82 l-20,-18 18,25z",stroke:!1}],t["GR.EQ.ANTIPERSONNEL LAND MINE LESS THAN LETHAL"]=[{type:"circle",cx:100,cy:100,r:22,fill:!1},{type:"path",d:"M117,82 l20,-18 -18,25z M83,82 l-20,-18 18,25z",stroke:!1}],t["GR.EQ.ANTITANK MINE"]={type:"circle",cx:100,cy:100,r:22},t["GR.EQ.IMPROVISED EXPLOSIVE DEVICE"]=S("IED"),t["GR.EQ.LAND MINES"]=[{type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"M"},{type:"path",fill:!1,d:R?"m 135,70 -70,0 35,70 z":"m 65,130 70,0 -35,-70 z"}],t["GR.EQ.SENSOR"]={type:"path",d:"m 100,60 c 0,15 25,40 40,40 -15,0 -40,25 -40,40 0,-15 -25,-40 -40,-40 15,0 40,-25 40,-40 z"},t["GR.EQ.SENSOR EMPLACED"]=[MS.scale(.9,t["GR.EQ.SENSOR"]),{type:"path",fill:!1,d:"m 70,75 10,-15 10,15 10,-15 10,15 10,-15 10,15"}],t["GR.EQ.RADAR"]={type:"path",d:"M72,95 l30,-25 0,25 30,-25 M70,70 c0,35 15,50 50,50",fill:!1},t["GR.EQ.ANTENNAE"]=[],t["GR.EQ.PSYCHOLOGICAL OPERATIONS EQUIPMENT"]={type:"path",fill:!!R&&U,stroke:i,d:"m 110,95 10,0 m -10,10 10,0 m -10,10 10,0 m -10,-30 10,0 m -10,-5 -10,10 -30,0 0,20 30,0 10,10 z"},t["GR.IN.IC.ELDER CARE"]={type:"path",d:"m 120.1,119.1 c 0,-6.3 2.3,-8.2 3.9,-12.6 1,-2.6 1.6,-3.3 1.8,-6.5 0.2,-2.4 0.9,-4.7 0.9,-7.2 v -2.6 c 0,-2.6 -2.2,-8.9 -3.3,-10.5 -1.3,-2 -4.8,-5.4 -6.7,-6.9 -2.2,-1.8 -5.4,-4.6 -8.2,-5.6 -1.6,-0.5 -9.8,-2.4 -11.4,-2.3 l -5.7,0.6 v 0.8 c 0,0.8 2,2.7 2.4,3.3 0,3.3 0.8,6.8 -1.3,8.4 -2.2,1.6 -2.8,3.4 -3.8,6.3 -0.4,1 -0.9,3.1 -1,4 -0.2,1 -0.2,4 -0.4,4.6 -1.1,2.4 -2.6,4.2 -3.8,6.4 l -5.1,0.5 c -2.1,3.2 -4.6,4.1 -4.6,9.6 v 26.4 c 0.6,0.2 0.4,0.2 0.9,0.2 0.5,0 0.3,-0.1 0.9,-0.2 v -27.5 c 0,-0.7 0.8,-3 1.1,-3.5 0.4,0.2 0.8,0.6 1.3,0.6 0.3,0 1.1,-0.3 1.3,-0.4 l 2.6,0.9 0.8,-0.6 0.6,2.5 c 0.4,0.3 0.4,0.5 0.8,0.5 h 0.4 c 0.5,0 0.6,-0.2 0.6,-0.6 v -0.4 c 0,-1 -1.2,-3 -1.5,-3.7 1.2,-2.5 6.3,-2.6 8.2,-5.8 0.9,-1.6 1.8,-3 2.6,-4.5 0.4,-0.9 2.3,-4.1 2.4,-4.4 h 4.4 c 2.3,0 2.1,2.5 2.6,4.2 0.6,2 2,2 2,4.6 0,2.8 -2.9,7 -4,9 -0.3,0.7 -3.9,8.8 -3.9,8.9 v 2 c 0,3 2.6,9.1 2.6,11.2 v 2.2 c -1.2,0.3 -6.8,2.4 -6.8,3.5 0,0.3 0.4,0.6 0.9,0.6 h 6.8 c 2.3,0 4.5,-1 6.6,-1.1 v -3 c 0,-0.6 -1.1,-2.2 -1.1,-3.7 -0.9,-1.3 -1.8,-6 -1.8,-8.2 0,-3.2 1.2,-5.4 2.5,-7.4 2.5,-4 0.4,-2.3 4.6,-5.1 l 1.8,1.7 c -1,1.8 -2.3,3.7 -2.3,6.4 v 5.9 h 0.4 v 0.6 c 0,0.9 5,9 5.7,10.3 -1.5,2.3 -6.7,1.6 -6.8,5 h 7.5 c 1.2,0 3.3,-1 4.5,-1.4 1.6,-0.5 2.9,-1.1 2.9,-3 0,-0.7 -2.9,-4.6 -3.6,-5.7 -0.3,-0.4 -2.4,-6 -2.4,-6.6 v -0.4 z m -45.3,-47.9 v 0.6 c 0,4.3 3.7,7.9 8.1,7.9 h 0.2 c 3.7,0 7.7,-3.6 7.7,-7 v -2.2 c 0,-3.2 -3.9,-6.8 -7.5,-6.8 h -1.2 c -3.4,0 -7.3,4 -7.3,7.5 z",stroke:!1},t["GR.IN.IC.RAW MATERIAL PRODUCTION/STORAGE"]=[{type:"text",stroke:!1,x:100,y:90,fontsize:30,text:"PS"},{type:"text",stroke:!1,x:100,y:120,fontsize:30,text:"RM"}],t["GR.IN.IC.MINE"]={type:"path",d:"m 105,85 10,10 5,-5 c -5,-5 -10,-5 -15,-5 z M 95,85 85,95 80,90 c 5,-5 10,-5 15,-5 z m -5,5 30,30 m -40,0 30,-30"},t["GR.IN.IC.PROCESSING FACILITY"]=[{type:"text",stroke:!1,x:100,y:90,fontsize:30,text:"PROC"},{type:"text",stroke:!1,x:100,y:120,fontsize:30,text:"FAC"}],t["GR.IN.IC.UTILITY FACILITY"]={type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"UTIL"},t["GR.IN.IC.RESEARCH"]={type:"text",stroke:!1,x:100,y:110,fontsize:30,text:"R&D"},t["GR.IN.IC.TELECOMMUNICATIONS"]={type:"path",d:"m 95,80 10,20 -10,0 10,20",fill:!1},t["GR.IN.IC.ELECTRIC POWER"]={type:"path",d:"M 100 80 C 91.7 80 85 86.7 85 95 C 85 101.5 89.2 107.1 95 109.1 L 95 119.1 C 96.6 119.7 98.2 120 100 120 C 101.8 120 103.4 119.7 105 119.1 L 105 109.1 C 110.8 107.1 115 101.5 115 95 C 115 86.7 108.3 80 100 80 z ",fill:!1},t["GR.IN.IC.ELECTRIC POWER NUCLEAR"]={type:"text",stroke:!1,x:100,y:103,fontsize:23,text:"N"},t["GR.IN.IC.ELECTRIC POWER DAM"]={type:"text",stroke:!1,x:100,y:103,fontsize:23,text:"H"},t["GR.IN.IC.ELECTRIC POWER FOSSIL"]={type:"text",stroke:!1,x:100,y:103,fontsize:23,text:"F"},t["GR.IN.IC.ATOMIC ENERGY"]={type:"path",d:R?"M 90.4,82.4 C 84.2,85.8 80,92.4 80,100 l 20,0 -9.6,-17.6 z m 19.3,0.1 L 100,100 l 20,0 c 0,-7.5 -4.2,-14.1 -10.3,-17.5 z M 100,100 89.7,117.1 C 92.7,118.9 96.2,120 100,120 c 3.8,0 7.3,-1.1 10.3,-2.9 L 100,100 z":"M 89.9,82.5 110,82.7 89.7,117.1 80,99.9 120.1,100 110,117.3 z",fill:!1},t["GR.IN.IC.ATOMIC ENERGY WEAPONS GRADE"]={type:"path",d:R?"M 90.4,82.4 C 84.2,85.8 80,92.4 80,100 l 20,0 -9.6,-17.6 z m 19.3,0.1 L 100,100 l 20,0 c 0,-7.5 -4.2,-14.1 -10.3,-17.5 z M 100,100 89.7,117.1 C 92.7,118.9 96.2,120 100,120 c 3.8,0 7.3,-1.1 10.3,-2.9 L 100,100 z":"M 89.9,82.5 110,82.7 89.7,117.1 80,99.9 120.1,100 110,117.3 z"},t["GR.IN.IC.AIRCRAFT PRODUCTION & ASSEMBLY"]={type:"path",stroke:!1,d:"m 95.1,109.3 c 0,0 -20.8,4.9 -30.1,6.7 -2.2,0.4 -5.7,0.2 -6.5,-2 -0.4,-1.1 3.3,-6.6 6.5,-7.3 8.7,-1.9 25.7,-5.5 25.7,-5.5 l 3.1,-16.1 4,-0.8 0.3,15.9 25.6,-5.8 6.5,-13.2 5.3,-1.4 -3.3,16.1 14,4.8 -4.3,1.2 -13.7,-2.8 -23.6,6.7 31.6,11.8 -5.5,2.5 z"},t["GR.IN.IC.BRIDGE"]={type:"path",d:"m 70,115 10,-10 40,0 10,10 m -60,-30 10,10 40,0 10,-10",fill:!1},t["GR.IN.IC.BASE"]={type:"path",d:"m 75,85 50,30 m -50,0 50,-30",fill:!1},t["GR.IN.IC.SEA SURFACE INSTALLATION, OIL RIG/PLATFORM"]=[{type:"path",d:"m 85,105 0,-40 m 25,40 0,15 m -35,0 0,-15 50,0 0,15",fill:!1},{type:"path",d:"m 85,90 15,0 0,15 -15,0 0,-15"}],t["GR.IN.IC.MILITARY/CIVILIAN.MATERIEL"]=S("MAT"),t["GR.IN.IC.MILITARY/CIVILIAN.PRINTED MEDIA"]=[{type:"circle",cx:100,cy:90,r:10,fill:!1},{type:"circle",cx:100,cy:110,r:10,fill:!1},{type:"path",d:"m 65,100 75,0",fill:!1}],t["GR.IN.IC.INFRASTRUCTURE.BANKING FINANCE AND INSURANCE  INFRASTRUCTURE.ECONOMIC INFRASTRUCTURE ASSET"]=S("ECON"),t["GR.IN.IC.INFRASTRUCTURE.TELECOMMUNICATIONS INFRASTRUCTURE.TELECOMMUNICATIONS"]={type:"path",d:"m 90,105 20,0 0,0 m -25,15 15,-30 15,30 m -55,-40 25,10 0,-10 15,10 15,-10 0,10 25,-10",fill:!1},t["GR.IN.M1.RADIOLOGICAL"]=N("R"),t["GR.IN.M1.COAL"]=N("CO"),t["GR.IN.M1.GEOTHERMAL"]=N("GT"),t["GR.IN.M1.HYDROELECTRIC"]=N("HY"),t["GR.IN.M1.NATURAL GAS"]=N("NG"),t["GR.IN.M1.PETROLEUM"]={type:"path",d:"m 100,75 0,-10 -6,-10 12,0 -6,10",fill:!1},t["GR.IN.M1.CIVILIAN"]=N("CIV"),t["GR.IN.M1.CIVILIAN TELEPHONE"]=N("T"),t["GR.IN.M1.CIVILIAN TELEVISION"]=N("TV"),t["GR.IN.M2.CHEMICAL WARFARE PRODUCTION"]=T("C"),t["GR.IN.M2.NUCLEAR WARFARE PRODUCTION"]=T("N"),t["GR.IN.M2.RADIOLOGICAL WARFARE PRODUCTION"]=T("R"),t["GR.IN.M2.ATOMIC ENERGY REACTOR"]=T("A"),t["GR.IN.M2.NUCLEAR MATERIAL PRODUCTION"]=T("P"),t["GR.IN.M2.NUCLEAR MATERIAL STORAGE"]=T("S"),t["GR.IN.M2.CHEMICAL & BIOLOGICAL WARFARE"]=T("B"),t["GR.IN.M2.SHIP CONSTRUCTION"]=T("YRD"),t["GR.IN.M2.WEAPONS GRADE PRODUCTION"]=T("W"),t["SE.IC.MILITARY"]=S("MIL"),t["SE.IC.COMBATANT"]=[{type:"path",d:"m 86.9,110 c -3.6,2 -7.2,3.9 -10.8,5.9 2.1,2.9 6.7,3.9 10,2.1 2.6,-0.9 4.7,-3.8 3.1,-6.1 -0.8,-0.6 -1.5,-1.3 -2.3,-1.9 z m 26.3,0.1 c 3.6,2 7.2,3.9 10.8,5.9 -2.1,2.9 -6.7,3.9 -10,2.1 -2.6,-0.9 -4.7,-3.8 -3.1,-6.1 0.8,-0.6 1.5,-1.3 2.3,-1.9 z",fill:!1},{type:"path",d:"m 112.9,110 c -5.6,-4 -11.3,-7.9 -16.1,-12.5 -4.2,-4.5 -7,-9.8 -9.2,-15.1 -0.8,4.4 -0.9,9.3 2.4,13.2 3.6,4.5 8.6,8.1 13.5,11.8 2.3,1.7 4.7,3.3 7.1,4.8 0.8,-0.7 1.5,-1.5 2.3,-2.2 m -25.7,0 c 5.6,-4 11.3,-7.9 16.1,-12.5 4.2,-4.5 7,-9.8 9.2,-15.1 0.8,4.4 0.9,9.3 -2.4,13.2 -3.6,4.5 -8.6,8.1 -13.5,11.8 -2.3,1.7 -4.7,3.3 -7.1,4.8 -0.8,-0.7 -1.5,-1.5 -2.3,-2.2",fill:h,strokewidth:2}],t["SE.IC.SURFACE COMBATANT, LINE"]={type:"path",d:"m 100,120 -25,-15 15,0 0,-10 5,0 0,-5 -15,0 0,-5 15,0 0,-5 10,0 0,5 15,0 0,5 -15,0 c 0,0 0,5 0,5 l 5,0 0,10 15,0 z"},t["SE.IC.CARRIER"]={type:"path",d:"m 80,100 20,20 20,-20 -20,0 0,-20 -20,0 z"},t["SE.IC.BATTLESHIP"]=S("BB"),t["SE.IC.CRUISER"]=S("CC"),t["SE.IC.CRUISER, GUIDED MISSILE"]=S("CG"),t["SE.IC.DESTROYER"]=S("DD"),t["SE.IC.FRIGATE"]=S("FF"),t["SE.IC.CORVETTE"]=S("FS"),t["SE.IC.LITTORAL COMBATANT SHIP"]=S("LL"),t["SE.IC.AMPHIBIOUS WARFARE SHIP"]={type:"path",d:"m 100,120 20,0 m -20,0 -20,-20 10,0 0,-20 20,0 0,20 10,0 z"},t["SE.IC.AMPHIBIOUS FORCE FLAGSHIP"]=S("LCC"),t["SE.IC.AMPHIBIOUS ASSAULT"]=S("LA"),t["SE.IC.AMPHIBIOUS ASSAULT SHIP, GENERAL"]=S("LHA"),t["SE.IC.AMPHIBIOUS ASSAULT SHIP, MULTI-PURPOSE"]=S("LHD"),t["SE.IC.AMPHIBIOUS TRANSPORT, DOCK"]=S("LPD"),t["SE.IC.AMPHIBIOUS ASSAULT SHIP, HELICOPTER"]=S("LPH"),t["SE.IC.LANDING SHIP"]=S("LS"),t["SE.IC.LANDING CRAFT"]=S("LC"),t["SE.IC.MINE WARFARE VESSEL"]={type:"path",d:"M 98.3 81 L 98.3 85.1 C 95.9 85.4 93.7 86.5 91.9 88 L 88.4 84.5 L 86 86.9 L 89.6 90.5 C 89.6 90.5 89.6 90.5 89.6 90.5 C 88.3 92.5 87.5 94.9 87.5 97.5 C 87.5 98.4 87.6 99.2 87.8 100 L 80 100 L 100 120 L 120 100 L 112.3 100 C 112.4 99.2 112.5 98.4 112.5 97.5 C 112.5 94.8 111.6 92.3 110.2 90.3 L 113.8 86.6 L 111.5 84.2 L 107.9 87.8 C 106.1 86.4 104 85.4 101.7 85.1 L 101.7 81 L 98.3 81 z"},t["SE.IC.MINELAYER"]=S("ML"),t["SE.IC.MINESWEEPER"]=S("MS"),t["SE.IC.MINESWEEPER, DRONE"]=S("MSD"),t["SE.IC.MINEHUNTER"]=S("MH"),t["SE.IC.MINE COUNTER MEASURE SUPPORT SHIP"]=S(R?"MA":"MCS"),t["SE.IC.MINE COUNTERMEASURES"]=S("MCM"),t["SE.IC.SEA SURFACE DECOY"]={type:"path",d:"M 105,110 90,95 105,80 z M 85,110 70,95 85,80 z m 40,-30 -15,15 15,15 z m -55,40 0,-5 55,0 0,5 z"},t["SE.IC.PATROL"]={type:"path",d:"m 80,100 20,20 20,-20 -10,0 -10,-20 -10,20 z"},t["SE.IC.PATROL CRAFT"]=S("PC"),t["SE.IC.PATROL ANTI SUBMARINE WARFARE"]={type:"path",d:"m 100,120 -25,-25 5,-5 10,10 5,0 0,-20 10,0 0,20 5,0 10,-10 5,5 z"},t["SE.IC.PATROL ANTISHIP MISSILE"]=S("PM"),t["SE.IC.PATROL TORPEDO"]=S("PT"),t["SE.IC.PATROL GUN"]=S("PG"),t["SE.IC.PATROL SHIP"]=[],t["SE.IC.MILITARY SPEEDBOAT"]={type:"path",stroke:!1,d:"m 120,120 -40,0 -15,-25 15,0 5,-15 10,0 -5,15 45,0 z"},t["SE.IC.MILITARY SPEEDBOAT, RIGID-HULL INFLATABLE BOAT"]=[{type:"path",stroke:!1,d:"M 85 80 L 80 95 L 65 95 L 80 120 L 120 120 L 135 95 L 90 95 L 95 80 L 85 80 z M 87 100.7 L 93.1 100.7 C 94.6 100.7 95.7 100.8 96.4 101.1 C 97.1 101.3 97.7 101.8 98.1 102.4 C 98.5 103.1 98.7 103.8 98.7 104.7 C 98.7 105.8 98.4 106.7 97.8 107.4 C 97.1 108.1 96.2 108.5 94.9 108.7 C 95.6 109.1 96.1 109.4 96.5 109.9 C 96.9 110.3 97.4 111.1 98.1 112.2 L 99.9 115 L 96.4 115 L 94.3 111.9 C 93.6 110.8 93.1 110.1 92.8 109.8 C 92.5 109.5 92.2 109.3 91.9 109.2 C 91.6 109.1 91.2 109 90.5 109 L 89.9 109 L 89.9 115 L 87 115 L 87 100.7 z M 101.5 100.7 L 107.2 100.7 C 108.3 100.7 109.2 100.7 109.7 100.8 C 110.3 100.9 110.8 101.1 111.2 101.4 C 111.7 101.7 112 102.1 112.3 102.6 C 112.6 103.1 112.7 103.7 112.8 104.3 C 112.7 105 112.6 105.6 112.2 106.1 C 111.9 106.7 111.4 107.1 110.8 107.4 C 111.6 107.7 112.3 108.1 112.8 108.7 C 113.2 109.3 113.5 110 113.5 110.8 C 113.5 111.5 113.3 112.1 113 112.8 C 112.7 113.4 112.3 113.8 111.8 114.2 C 111.2 114.6 110.6 114.8 109.8 114.9 C 109.3 115 108.2 115 106.3 115 L 101.5 115 L 101.5 100.7 z M 104.3 103.1 L 104.3 106.4 L 106.3 106.4 C 107.4 106.4 108.1 106.3 108.3 106.3 C 108.8 106.3 109.2 106.1 109.5 105.8 C 109.8 105.5 109.9 105.1 109.9 104.7 C 109.9 104.2 109.8 103.9 109.6 103.6 C 109.3 103.3 109 103.2 108.5 103.1 C 108.2 103.1 107.4 103.1 106 103.1 L 104.3 103.1 z M 89.9 103.1 L 89.9 106.8 L 92 106.8 C 93.4 106.8 94.3 106.7 94.6 106.6 C 95 106.4 95.2 106.3 95.4 106 C 95.6 105.7 95.7 105.3 95.8 104.9 C 95.7 104.4 95.6 104 95.3 103.7 C 95.1 103.4 94.7 103.2 94.3 103.2 C 94 103.1 93.3 103.1 92.2 103.1 L 89.9 103.1 z M 104.3 108.8 L 104.3 112.6 L 107 112.6 C 108.1 112.6 108.7 112.6 109 112.5 C 109.4 112.4 109.8 112.2 110.1 111.9 C 110.3 111.6 110.5 111.2 110.5 110.7 C 110.5 110.3 110.4 109.9 110.2 109.6 C 109.9 109.3 109.6 109.1 109.3 109 C 108.9 108.8 108 108.8 106.7 108.8 L 104.3 108.8 z"
},{type:"text",fill:R?U:!L&&U,stroke:!1,x:100,y:115,fontsize:20,text:"RB"}],t["SE.IC.MILITARY JETSKI"]={type:"path",stroke:!1,d:"m 135,105 0,15 -60,0 -10,-15 20,-25 10,0 0,10 -5,0 -5,15 z"},t["SE.IC.UNMANNED SURFACE WATER VEHICLE"]=t["AR.I.UNMANNED AERIAL VEHICLE"],t["SE.IC.NAVY TASK ORGANIZATION UNIT"]=[{type:"path",d:"m 110,80 15,15 0,25 M 90,80 75,95 l 0,25",fill:!1}],R&&t["SE.IC.NAVY TASK ORGANIZATION UNIT"].push({type:"path",d:"m 100,80 -15,15 0,25 30,0 0,-25 -15,-15"}),t["SE.IC.NAVY TASK FORCE"]=[t["SE.IC.NAVY TASK ORGANIZATION UNIT"],{type:"text",stroke:!1,x:100,y:R?150:120,fontsize:30,text:"TF"}],t["SE.IC.NAVY TASK GROUP"]=[t["SE.IC.NAVY TASK ORGANIZATION UNIT"],{type:"text",stroke:!1,x:100,y:R?150:120,fontsize:30,text:"TG"}],t["SE.IC.NAVY TASK UNIT"]=[t["SE.IC.NAVY TASK ORGANIZATION UNIT"],{type:"text",stroke:!1,x:100,y:R?150:120,fontsize:30,text:"TU"}],t["SE.IC.NAVY TASK ELEMENT"]=[t["SE.IC.NAVY TASK ORGANIZATION UNIT"],{type:"text",stroke:!1,x:100,y:R?150:120,fontsize:30,text:"TE"}],t["SE.IC.CONVOY"]={type:"path",d:"m 80,115 -20,0 0,-35 80,0 0,35 -20,0 0,-20 -40,0 z"},t["SE.IC.NONCOMBATANT"]={type:"path",d:"m 80,100 0,-20 40,0 0,20 15,0 0,20 -70,0 0,-20 z"},t["SE.IC.AUXILIARY SHIP"]=S(R?"AR":"AA"),t["SE.IC.AMMUNITION SHIP"]=S("AE"),t["SE.IC.STORES SHIP"]=S("AF"),t["SE.IC.AUXILIARY FLAG OR COMMAND SHIP"]=S("AGF"),t["SE.IC.INTELLIGENCE COLLECTOR"]=S(R?"JI":"AI"),t["SE.IC.OCEAN RESEARCH SHIP"]=S("AGO"),t["SE.IC.SURVEY SHIP"]=S("AGS"),t["SE.IC.HOSPITAL SHIP"]=S("AH"),t["SE.IC.CARGO SHIP"]=S("AK"),t["SE.IC.COMBAT SUPPORT SHIP, FAST"]=S("AOE"),t["SE.IC.OILER, REPLENISHMENT"]=S("AO"),t["SE.IC.REPAIR SHIP"]=S("AR"),t["SE.IC.SUBMARINE TENDER"]=S("AS"),t["SE.IC.TUG, OCEAN GOING"]=S(R?"AS":"AT"),t["SE.IC.SERVICE CRAFT, YARD, GENERAL"]=S("YY"),t["SE.IC.BARGE, NOT SELF-PROPELLED"]=S("YB"),t["SE.IC.BARGE, SELF-PROPELLED"]=S("YS"),t["SE.IC.TUG, HARBOUR"]=S("YT"),t["SE.IC.LAUNCH"]=S("YFT"),t["SE.IC.MERCHANT SHIP, GENERAL"]={type:"path",fill:R?U:!L&&U,d:"m 75,100 0,-35 50,0 0,35 20,0 -15,35 -60,0 -15,-35 z"},t["SE.IC.CARGO, GENERAL"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:R?"CA":"A"}],t["SE.IC.CONTAINER SHIP"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"C"}],t["SE.IC.DREDGE"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"D"}],t["SE.IC.ROLL ON-ROLL OFF"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:"30",text:R?"RO":"E"}],t["SE.IC.FERRY"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:R?"FE":"F"}],t["SE.IC.HEAVY LIFT"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"H"}],t["SE.IC.HOVERCRAFT"]={type:"path",d:R?"m 65,100 0,-30 5,10 60,0 5,-10 0,30 10,0 -15,35 -60,0 -15,-35 z":"m 90,80 0,15.6 C 78.4,96.9 70,100.6 70,105 c 0,5.5 13.4,10 30,10 16.6,0 30,-4.5 30,-10 0,-4.4 -8.4,-8.1 -20,-9.4 L 110,80 90,80 z m -15,40 50,0"},t["SE.IC.HOVERCRAFT 2525D"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"J"}],t["SE.IC.HOVERCRAFT CIVILIAN"]={type:"path",fill:R?U:!L&&U,d:R?"m 65,100 0,-30 5,10 60,0 5,-10 0,30 10,0 -15,35 -60,0 -15,-35 z":"m 90,80 0,15.6 C 78.4,96.9 70,100.6 70,105 c 0,5.5 13.4,10 30,10 16.6,0 30,-4.5 30,-10 0,-4.4 -8.4,-8.1 -20,-9.4 L 110,80 90,80 z m -15,40 50,0"},t["SE.IC.HOVERCRAFT NONCOMBATANT"]=[{type:"path",d:"m 65,100 0,-30 5,10 60,0 5,-10 0,30 10,0 -15,35 -60,0 -15,-35 z",strokewidth:!1},R?{type:"text",fill:h,stroke:!1,x:100,y:120,fontsize:30,text:"NC"}:[]],t["SE.IC.MERCHANT SHIP, LASH CARRIER (WITH BARGES)"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"L"}],t["SE.IC.OILER/TANKER"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:R?"OT":"O"}],t["SE.IC.PASSENGER SHIP"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:R?"PA":"P"}],t["SE.IC.TUG, OCEAN GOING CIVILIAN"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:R?"TU":"T"}],t["SE.IC.TOW"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"TW"}],t["SE.IC.TRANSPORT SHIP, HAZARDOUS MATERIAL"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"HZ"}],t["SE.IC.JUNK/DHOW"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"QJ"}],t["SE.IC.BARGE, NOT SELF-PROPELLED"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"text",stroke:!1,x:100,y:115,fontsize:30,text:"YB"}],t["SE.IC.HOSPITAL SHIP2"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"path",stroke:!1,d:"m 95,95 0,-15 10,0 0,15 15,0 0,10 -15,0 0,15 -10,0 0,-15 -15,0 0,-10 z"}],t["SE.IC.FISHING VESSEL"]={type:"path",fill:R?U:!L&&U,d:"m 75,100 0,-15 20,0 0,15 50,0 -15,35 -60,0 -15,-35 z M 105,57.4 105,100 m 30,-35 -30,35"},t["SE.IC.DRIFTER"]=[t["SE.IC.FISHING VESSEL"],{type:"text",stroke:!1,x:100,y:125,fontsize:30,text:"DF"}],t["SE.IC.TRAWLER"]=[t["SE.IC.FISHING VESSEL"],{type:"text",stroke:!1,x:100,y:125,fontsize:30,text:"TR"}],t["SE.IC.FISHING VESSEL DREDGE"]=[t["SE.IC.FISHING VESSEL"],{type:"text",stroke:!1,x:100,y:125,fontsize:30,text:"DR"}],t["SE.IC.LAW ENFORCEMENT VESSEL"]=[t["SE.IC.MERCHANT SHIP, GENERAL"],{type:"path",d:"m 135,100 -15,35 -10,0 15,-35 z"}],t["SE.IC.LEISURE CRAFT, SAILING BOAT"]={type:"path",fill:R?U:!L&&U,d:"m 105,55 0,40 35,0 z m -5,-5 0,50 m 45,0 -15,35 -60,0 -15,-35 z"},t["SE.IC.LEISURE CRAFT, MOTORIZED"]={type:"path",fill:R?U:!L&&U,d:"m 70,97.4 15,-30 10,0 -15,30 65,0 -15,35 -60,0 -15,-35 z"};t["SE.IC.LEISURE CRAFT, MOTORIZED, RIGID-HULL INFLATABLE BOAT"]=[t["SE.IC.LEISURE CRAFT, MOTORIZED"],{type:"text",stroke:!1,x:100,y:125,fontsize:30,text:"RB"}];t["SE.IC.LEISURE CRAFT, MOTORIZED, SPEEDBOAT"]=[t["SE.IC.LEISURE CRAFT, MOTORIZED"],{type:"text",stroke:!1,x:100,y:125,fontsize:30,text:"SP"}],t["SE.IC.LEISURE CRAFT, JETSKI"]={type:"path",fill:R?U:!L&&U,d:"m 85,60 -30,45 10,15 75,0 0,-20 -60,0 10,-30 5,0 0,-10 z"},t["SE.IC.UNMANNED SURFACE WATER VEHICLE (USV)"]=t["AR.I.CIVILIAN UNMANNED AERIAL VEHICLE"],t["SE.IC.OWN SHIP"]={type:"path",fill:!1,stroke:C?l:U,d:"m 50,100 100,0 m -50,-50 0,100 m 50,-50 c 0,27.6 -22.4,50 -50,50 -27.6,0 -50,-22.4 -50,-50 0,-27.6 22.4,-50 50,-50 27.6,0 50,22.4 50,50 z"},t["SE.IC.DITCHED AIRCRAFT"]={type:"path",fill:C?l:U,stroke:C?l:U,d:"m 145,120 -15,-15 m -15,15 15,-15 m -75,15 15,-15 m 15,15 -15,-15 m 10,10 25,-30 -10,-10 10,-10 20,20 -10,35 -15,-15 -15,15 z"},t["SE.IC.PERSON IN WATER"]={type:"path",fill:C?l:U,stroke:C?l:U,d:"m 105,110 10,-10 0,-15 5,0 0,20 -10,10 z m -10,0 -10,-10 0,-15 -5,0 0,20 10,10 z m 5,-5 0,-10 -5,0 -5,-5 0,-10 5,-5 10,0 5,5 0,10 -5,5 -5,0 m -15,25 15,-15 m 45,15 -15,-15 m -15,15 15,-15 m -75,15 15,-15 m 15,15 -15,-15 m 45,15 -15,-15"},t["SE.IC.DISTRESSED VESSEL"]={type:"path",fill:C?l:U,stroke:C?l:U,d:"m 120,65 -20,20 20,-20 m -5,55 -35,-35 0,-20 45,45 z m -30,0 -15,-15 m -15,15 15,-15 m 45,15 15,-15 m 15,15 -15,-15 m -45,15 15,-15"},t["SE.IC.SEA MINELIKE"]={type:"path",fill:C?l:U,stroke:C?l:U,d:"m 117.7,75 c 3.5,-3.5 7.1,-7.1 7.1,-7.1 l 7.1,7.1 -7.1,7.1 m -49.5,0 c -3.5,-3.5 -7.1,-7.1 -7.1,-7.1 l 7.1,-7.1 7.1,7.1 M 95,70 c 0,-5 0,-10 0,-10 l 10,0 0,10 m 25,30 c 0,16.6 -13.4,30 -30,30 -16.6,0 -30,-13.4 -30,-30 0,-16.6 13.4,-30 30,-30 16.6,0 30,13.4 30,30 z"},t["SE.IC.NAVIGATIONAL"]={type:"path",fill:!1,stroke:C?l:"red",d:"m 75,90 -10,10 70,0 -10,10"},t["SE.IC.ICEBERG"]={type:"path",fill:C?l:U,stroke:C?l:U,d:"m 75,100 25,-30 25,30 -5,15 -5,-5 -15,20 -15,-20 -5,5 z m -15,0 80,0"},t["SE.IC.FUSED TRACK"]=[S("?"),{type:"path",fill:!1,d:"m 70,65 10,35 -10,35 60,0 -10,-35 10,-35 z"}],t["SE.M1.OWN SHIP"]=N("OWN"),t["SE.M1.ANTIAIR WARFARE"]=N("AAW"),t["SE.M1.ANTISUBMARINE WARFARE"]=N("ASW"),t["SE.M1.ESCORT"]=N("E"),t["SE.M1.ELECTRONIC WARFARE"]=N("EW"),t["SE.M1.INTELLIGENCE, SURVEILLANCE, RECONNAISSANCE"]=N("ISR"),t["SE.M1.MINE COUNTER MEASURES"]=N("MCM"),t["SE.M1.MISSILE DEFENSE"]=N("MD"),t["SE.M1.MEDICAL"]=N("ME"),t["SE.M1.MINE COUNTERMEASURES"]=N("MCM"),t["SE.M1.MINE WARFARE"]=N("MIW"),t["SE.M1.REMOTE MULTI-MISSION VEHIHLE"]=N("RMV"),t["SE.M1.SPECIAL OPERATIONS FORCE"]=N("SOF"),t["SE.M1.SURFACE WARFARE"]=N("SUW"),t["SE.M1.BALLISTIC MISSILE"]=N("B"),t["SE.M1.GUIDED MISSILE"]=N("G"),t["SE.M1.OTHER GUIDED MISSILE"]=N("M"),t["SE.M1.TORPEDO"]=N("T"),t["SE.M1.DRONE-EQUIPPED"]=t["AIR.M1.UNMANNED AERIAL VEHICLE"],t["SE.M1.HELICOPTER-EQUIPPED"]=N("H"),t["SE.M1.BALLISTIC MISSILE DEFENSE, SHOOTER"]=N("BM"),t["SE.M1.BALLISTIC MISSILE DEFENSE, LONG- RANGE SURVEILLANCE AND TRACK (LRS&T)"]=N("ST"),t["SE.M1.SEA-BASE X-BAND"]=N("SBX"),t["SE.M1.HIJACKING/HIJACKED"]=N("H"),t["SE.M2.NUCLEAR POWERED"]=T("N"),t["SE.M2.HEAVY"]=T("H"),t["SE.M2.LIGHT"]=T("L"),t["SE.M2.MEDIUM"]=T("M"),t["SE.M2.DOCK"]=T("D"),t["SE.M2.LOGISTICS"]=T("LOG"),t["SE.M2.TANK"]=T("T"),t["SE.M2.VEHICLE"]=T("V"),t["SE.M2.FAST"]=T("F"),t["SE.M2.AIR-CUSHIONED"]=T("J"),t["SE.M2.AIR-CUSHIONED (USA ONLY)"]=T("AC"),t["SE.M2.HYDROFOIL"]=T("K"),t["SE.M2.AUTONOMOUS CONTROL"]=T("AUT"),t["SE.M2.REMOTELY PILOTED"]=T("RP"),t["SE.M2.EXPENDABLE"]=T("EXP"),t["SU.IC.MILITARY"]=S("MIL"),t["SU.IC.SUBMARINE"]={type:"path",d:"m 75,85 50,0 15,15 -15,15 -50,0 -15,-15 z"},t["SU.IC.SUBMARINE CONVENTIONAL PROPULSION"]={type:"path",d:"m 75,110 -10,-10 10,-10 20,0 0,-10 10,0 0,10 20,0 10,10 -10,10 z"},t["SU.IC.SUBMARINE CONVENTIONAL PROPULSION, SURFACED"]=[{type:"path",d:"m 75,110 -10,-10 10,-10 20,0 0,-10 10,0 0,10 20,0 10,10 -10,10 z"},{type:"path",fill:!1,d:"m 65,120 10,-10 10,10 10,-10 10,10 10,-10 10,10 10,-10"}],t["SU.IC.SUBMARINE NUCLEAR PROPULSION"]={type:"path",d:"m 75,110 -10,-10 10,-10 0,-10 50,0 0,10 10,10 -10,10 z"},t["SU.IC.SUBMARINE NUCLEAR PROPULSION, SURFACED"]=[{type:"path",d:"m 75,110 -10,-10 10,-10 0,-10 50,0 0,10 10,10 -10,10 z"},{type:"path",fill:!1,d:"m 65,120 10,-10 10,10 10,-10 10,10 10,-10 10,10 10,-10"}],t["SU.IC.SUBMARINE ATTACK (SSN)"]={type:"text",fill:h,stroke:!1,x:100,y:110,fontsize:30,text:"A"},t["SU.IC.SUBMARINE MISSILE (TYPE UNKNOWN)"]={type:"text",fill:h,stroke:!1,x:100,y:110,fontsize:30,text:"M"},t["SU.IC.SUBMARINE GUIDED MISSILE (SSGN)"]={type:"text",fill:h,stroke:!1,x:100,y:110,fontsize:30,text:"G"},t["SU.IC.SUBMARINE BALLISTIC MISSILE (SSBN)"]={type:"text",fill:h,stroke:!1,x:100,y:110,fontsize:30,text:"B"},t["SU.IC.SUBMARINE, SURFACED"]=[{type:"path",d:"m 75,80 50,0 15,15 -15,15 -50,0 -15,-15 z"},{type:"path",fill:!1,d:"m 65,120 10,-10 10,10 10,-10 10,10 10,-10 10,10 10,-10"}],t["SU.IC.SUBMARINE, BOTTOMED"]=[{type:"path",d:"m 75,80 50,0 15,15 -15,15 -50,0 -15,-15 z"},{type:"path",d:"m 70,120 0,-5 60,0 0,5 z"}],t["SU.IC.SUBMARINE, SNORKELING"]=[{type:"path",d:"m 75,120 -10,-10 10,-10 20,0 0,-20 10,0 0,20 20,0 10,10 -10,10 z"},{type:"path",fill:!1,d:"m 65,95 10,-10 10,10 10,-10 10,10 10,-10 10,10 10,-10"}],t["SU.IC.OTHER SUBMERSIBLE"]={type:"path",d:"m 85,90 0,-10 30,0 0,10 m 20,10 c 0,5.5 -15.7,10 -35,10 -19.3,0 -35,-4.5 -35,-10 0,-5.5 15.7,-10 35,-10 19.3,0 35,4.5 35,10 z"},t["SU.IC.OTHER SUBMERSIBLE, SURFACED"]=[t["SU.IC.OTHER SUBMERSIBLE"],{type:"path",fill:!1,d:"m 65,120 10,-10 10,10 10,-10 10,10 10,-10 10,10 10,-10"}],t["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"]={type:"path",d:"M60,90 l40,10 40,-10 0,8 -40,15 -40,-15 Z",stroke:!1},t["SU.IC.NON-SUBMARINE"]=R&&!e?{type:"text",stroke:!1,x:100,y:110,fontsize:35,text:"NON"}:[{type:"text",stroke:!1,x:100,y:100,fontsize:25,text:"NON"},{type:"text",stroke:!1,x:100,y:120,fontsize:25,text:"SUB"}],t["SU.IC.DIVER, MILITARY"]={type:"path",stroke:!1,d:"M 100 80 C 93.7 80 88.3 82.7 85.8 88.3 L 85.8 88.3 L 77.8 88.3 L 77.8 105 L 85.8 105 L 85.8 104.8 C 87.3 108.2 88.8 110 92 111.7 L 92.1 111.7 L 84.2 120 L 115.8 120 L 107.9 111.7 L 108 111.7 C 111.1 110 112.8 108.3 114.3 105 L 122.2 105 L 122.2 88.3 L 114.3 88.3 L 114.3 88.3 C 111.7 82.8 106.3 80 100 80 z M 100 86.6 C 105.4 86.6 109.8 91.1 109.8 96.6 C 109.8 102.1 105.4 106.6 100 106.6 C 94.6 106.6 90.1 102.1 90.1 96.6 C 90.1 91.1 94.6 86.6 100 86.6 z M 100 89.6 C 96.2 89.6 93.1 92.7 93.1 96.6 C 93.1 100.5 96.2 103.6 100 103.6 C 103.8 103.6 106.8 100.5 106.8 96.6 C 106.8 92.7 103.8 89.6 100 89.6 z"},t["SU.IC.SUBMERSIBLE, CIVILIAN"]={type:"path",fill:R?U:!L&&U,d:"m 85,90 0,-10 30,0 0,10 m 20,10 c 0,5.5 -15.7,10 -35,10 -19.3,0 -35,-4.5 -35,-10 0,-5.5 15.7,-10 35,-10 19.3,0 35,4.5 35,10 z"},t["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV), CIVILIAN"]={type:"path",fill:R?U:!L&&U,d:"M60,90 l40,10 40,-10 0,8 -40,15 -40,-15 Z"},t["SU.IC.DIVER, CIVILIAN"]={type:"path",fill:U,d:"M 114.3,94 C 114.3,102.3 107.9,109 100,109 c -7.9,0 -14.2,-6.7 -14.2,-15 0,-8.3 6.4,-15 14.2,-15 7.9,0 14.3,6.7 14.3,15 z m 0,27 14.3,15 -57,0 14.3,-15 M 125.7,79 l 14.3,0 0,30 -14.3,0 m -51.3,0 -14.3,0 0,-30 14.3,0 m 54.2,15 c 0,16.6 -12.8,30 -28.5,30 -15.7,0 -28.5,-13.4 -28.5,-30 C 71.5,77.4 84.3,64 100,64 115.7,64 128.5,77.4 128.5,94 z"},t["SU.IC.UNDERWATER WEAPON"]=S("WPN"),t["SU.IC.TORPEDO"]={type:"path",d:"m 65,105 -5,-5 5,-5 60,0 c 0,0 5,5 5,5 l 5,-5 0,10 -5,-5 -5,5 z"},t["SU.IC.IMPROVISED EXPLOSIVE DEVICE (IED)"]=S("IED"),t["SU.IC.UNDERWATER DECOY"]={type:"path",stroke:i,d:R?"M 105,110 90,95 105,80 z M 85,110 70,95 85,80 z m 40,-30 -15,15 15,15 z m -55,40 0,-5 55,0 0,5 z":"M 105,120 90,105 105,90 z M 85,120 70,105 85,90 z m 40,-30 -15,15 15,15 z m -55,-5 0,-5 55,0 0,5 z",fill:R?l:U},t["SU.IC.UNDERWATER DECOY DSymbol"]={type:"path",d:"M 85 81 L 65 98 L 85 119 L 85 81 z M 110 81 L 90 98 L 110 119 L 110 81 z M 135 81 L 115 98 L 135 119 L 135 81 z"},t["SU.IC.ECHO TRACKER CLASSIFIER (ETC)/POSSIBLE CONTACT (POSCON)"]={type:"text",stroke:!1,x:100,y:130,fontsize:60,text:"?"},t["SU.IC.FUSED TRACK"]=[S("?"),{type:"path",fill:!1,d:"m 70,65 10,35 -10,35 60,0 -10,-35 10,-35"}],t["SU.IC.SEA MINE"]={type:"path",fill:R&&!C?E.iconColor.Hostile:U,stroke:R&&!C?i:l,d:"M 115.9,73 126.5,62.4 137.1,73 126.5,83.6 m -53,0 L 62.9,73 73.5,62.4 84.1,73 m 8.4,-3 0,-15 15,0 0,15 m 22.5,30 c 0,16.6 -13.4,30 -30,30 -16.6,0 -30,-13.4 -30,-30 0,-16.6 13.4,-30 30,-30 C 116.6,70 130,83.4 130,100 z"},t["SU.IC.SEA MINE - BOTTOM"]=[t["SU.IC.SEA MINE"],{type:"path",fill:R&&!C?E.iconColor.Hostile:U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE - MOORED"]=[t["SU.IC.SEA MINE"],{type:"path",fill:R&&!C?E.iconColor.Hostile:U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE - FLOATING"]=[t["SU.IC.SEA MINE"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.SEA MINE - RISING"]=[t["SU.IC.SEA MINE"],{type:"path",fill:e&&A?"":R&&!C?E.iconColor.Hostile:U,stroke:R&&!C?i:l,d:"m 100,128 -10,15 20,0 z"}],t["SU.IC.SEA MINE (IN OTHER POSITION)"]=[t["SU.IC.SEA MINE"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 130,100 15,0 M 70,100 l -15,0"}],t["SU.IC.SEA MINE - KINGFISHER"]=[t["SU.IC.SEA MINE"],{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:110,fontsize:35,text:"K"}],t["SU.IC.SEA MINE - SMALL OBJECT"]=[t["SU.IC.SEA MINE"],{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"SO"}],t["SU.IC.SEA MINE EXERCISE MINE"]=[{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"M 115.9,73 126.5,62.4 137.1,73 126.5,83.6 m -53,0 L 62.9,73 73.5,62.4 84.1,73 m 8.4,-3 0,-15 15,0 0,15 m 22.5,30 c 0,16.6 -13.4,30 -30,30 -16.6,0 -30,-13.4 -30,-30 0,-16.6 13.4,-30 30,-30 C 116.6,70 130,83.4 130,100 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"EX"},e?[]:{type:"text",stroke:!1,fill:R&&!C?i:l,x:150,y:46,fontsize:40,text:"X"}],t["SU.IC.SEA MINE EXERCISE MINE - BOTTOM"]=[t["SU.IC.SEA MINE EXERCISE MINE"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE EXERCISE MINE - MOORED"]=[t["SU.IC.SEA MINE EXERCISE MINE"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE EXERCISE MINE - FLOATING"]=[t["SU.IC.SEA MINE EXERCISE MINE"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.SEA MINE EXERCISE MINE - RISING"]=[t["SU.IC.SEA MINE EXERCISE MINE"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 100,128 -10,15 20,0 z"}],t["SU.IC.SEA MINE DECOY"]={type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 106.6,101.6 0,26.3 -13.1,-13.1 z m -19.7,0 0,26.3 -13.1,-13.1 z m 39.4,0 0,26.3 -13.1,-13.1 13.1,-13.1 M 100,75.3 c -14.5,0 -26.3,11.8 -26.3,26.3 l 52.5,0 C 126.3,87.1 114.5,75.3 100,75.3 z m -6.6,0 0,-13.1 13.1,0 0,13.1 m -29.8,12.3 -9.3,-9.3 9.3,-9.3 9.3,9.3 m 27.9,0 9.3,-9.3 9.3,9.3 -9.3,9.3"},t["SU.IC.SEA MINE DECOY, BOTTOM/GROUND"]=[t["SU.IC.SEA MINE DECOY"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE DECOY, MOORED"]=[t["SU.IC.SEA MINE DECOY"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 75,140 50,0 M 100,100 l 0,40"}],t["SU.IC.SEA MINE NEUTRALIZED"]=[{type:"path",fill:R&&!C?E.iconColor.Neutral:U,stroke:R&&!C?i:l,d:"M 115.9,73 126.5,62.4 137.1,73 126.5,83.6 m -53,0 L 62.9,73 73.5,62.4 84.1,73 m 8.4,-3 0,-15 15,0 0,15 m 22.5,30 c 0,16.6 -13.4,30 -30,30 -16.6,0 -30,-13.4 -30,-30 0,-16.6 13.4,-30 30,-30 C 116.6,70 130,83.4 130,100 z"},{type:"path",strokewidth:5,stroke:A?h:i,d:"m 135,65 -70,70 m 0,-70 70,70"}],t["SU.IC.SEA MINE NEUTRALIZED - BOTTOM"]=[t["SU.IC.SEA MINE NEUTRALIZED"],{type:"path",fill:R&&!C?E.iconColor.Neutral:U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE NEUTRALIZED - MOORED"]=[t["SU.IC.SEA MINE NEUTRALIZED"],{type:"path",fill:R&&!C?E.iconColor.Neutral:U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE NEUTRALIZED - FLOATING"]=[t["SU.IC.SEA MINE NEUTRALIZED"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.SEA MINE NEUTRALIZED - RISING"]=[t["SU.IC.SEA MINE NEUTRALIZED"],{type:"path",fill:R&&!C?E.iconColor.Neutral:U,stroke:R&&!C?i:l,d:"m 100,128 -10,15 20,0 z"}],t["SU.IC.SEA MINE (IN OTHER POSITION) NEUTRALIZED"]=[t["SU.IC.SEA MINE NEUTRALIZED"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 130,100 15,0 M 70,100 l -15,0"}],t["SU.IC.SEA MINE MILEC"]=[{type:"path",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"E"}],t["SU.IC.SEA MINE MILEC - BOTTOM"]=[t["SU.IC.SEA MINE MILEC"],{type:"path",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE MILEC - MOORED"]=[t["SU.IC.SEA MINE MILEC"],{type:"path",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE MILEC - FLOATING"]=[t["SU.IC.SEA MINE MILEC"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.SEA MINE MINE ANCHOR"]=[{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:!(!R||C)&&i,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:105,fontsize:18,text:"ANCR"}],t["SU.IC.SEA MINE MILCO"]=[{type:"path",fill:R&&!C?A?i:"rgb(255,141,42)":U,stroke:R&&!C?i:l,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},e?[]:{type:"text",stroke:!1,fill:R&&!C?i:l,x:100,y:112,fontsize:30,text:"#"}],t["SU.IC.SEA MINE MILCO - BOTTOM"]=[t["SU.IC.SEA MINE MILCO"],{type:"path",fill:R&&!C?A?i:"rgb(255,141,42)":U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE MILCO - MOORED"]=[t["SU.IC.SEA MINE MILCO"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE MILCO - FLOATING"]=[t["SU.IC.SEA MINE MILCO"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 1"]={type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:110,fontsize:35,text:"1"},t["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 2"]={type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:110,fontsize:35,text:"2"},t["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 3"]={type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:110,fontsize:35,text:"3"},t["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 4"]={type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:110,fontsize:35,text:"4"},t["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 5"]={type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:110,fontsize:35,text:"5"},t["SU.IC.SEA MINE NEGATIVE REACQUISITION"]=[{type:"path",strokedasharray:"8,4",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"NR"}],t["SU.IC.SEA MINE NEGATIVE REACQUISITION - BOTTOM"]=[t["SU.IC.SEA MINE NEGATIVE REACQUISITION"],{type:"path",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE NEGATIVE REACQUISITION - MOORED"]=[t["SU.IC.SEA MINE NEGATIVE REACQUISITION"],{type:"path",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE NEGATIVE REACQUISITION - FLOATING"]=[t["SU.IC.SEA MINE NEGATIVE REACQUISITION"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.SEA MINE GENERAL OBSTRUCTOR"]=[{type:"path",fill:R&&!C?A?i:"rgb(255,255,0)":U,stroke:R&&!C?i:l,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"OB"}],t["SU.IC.SEA MINE GENERAL OBSTRUCTOR NEUTRALIZED"]=[{type:"path",fill:R&&!C?E.iconColor.Neutral:U,stroke:R&&!C?i:l,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"OB"},{type:"path",strokewidth:5,stroke:A?h:i,d:"m 135,65 -70,70 m 0,-70 70,70"}],t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT"]=[{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 113.8,127.6 -27.6,0 -13.8,-13.8 0,-27.6 13.8,-13.8 27.6,0 13.8,13.8 0,27.6 z"},{type:"text",stroke:!1,fill:!R||C||A?h:i,x:100,y:112,fontsize:30,text:"N"}],t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - BOTTOM"]=[t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 74.8,125.2 50.4,0 0,12.6 -50.4,0 z"}],t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - MOORED"]=[t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT"],{type:"path",fill:R&&!C?A?i:"rgb(0, 130, 24)":U,stroke:R&&!C?i:l,d:"m 75.5,136.8 49,0 M 100,124.5 l 0,12.3"}],t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - FLOATING"]=[t["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT"],{type:"path",fill:!1,stroke:R&&!C?i:l,d:"m 75,140 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10 5,-10 5,10"}],t["SU.IC.UNEXPLODED EXPLOSIVE ORDNANCE"]=[{type:"path",strokedasharray:"8,4",fill:!1,stroke:R&&!C?E.iconColor.Hostile:l,d:"m 85,65 30,0 20,20 0,30 -20,20 -30,0 -20,-20 0,-30 z"},{type:"text",stroke:!1,fill:R&&!C?E.iconColor.Hostile:l,x:100,y:110,fontsize:30,text:"UXO"}],t["SU.IC.ENVIRONMENTAL REPORT LOCATION"]=[{type:"path",fill:!1,stroke:R&&!C?E.iconColor.Neutral:l,d:"m 70,70 0,60 60,0 0,-60 z"},{type:"text",stroke:!1,fill:R&&!C?E.iconColor.Neutral:l,x:100,y:122,fontsize:60,text:"E"}],t["SU.IC.DIVE REPORT LOCATION"]=[{type:"path",fill:!1,stroke:R&&!C?E.iconColor.Neutral:l,d:"m 70,70 0,60 60,0 0,-60 z"},{type:"text",stroke:!1,fill:R&&!C?E.iconColor.Neutral:l,x:100,y:122,fontsize:60,text:"D"}],t["SU.IC.SEABED INSTALLATION/MANMADE"]={type:"path",fill:U,stroke:i,d:"m 140,125 -80,0 10,-30 10,20 20,-50 20,50 10,-25 z"},t["SU.IC.SEABED ROCK/STONE, OBSTACLE, OTHER"]={type:"path",d:"m 140,125 -80,0 10,-30 10,20 20,-50 20,50 10,-25 z"},t["SU.IC.WRECK"]={type:"path",d:"m 125,85 0,30 m -50,-30 0,30 m 25,-40 0,45 m -40,-20 80,0"},t["SU.IC.MARINE LIFE"]={type:"path",d:"m 60,100 20,-20 45,20 15,-10 0,20 -15,-10 -45,20 z"},t["SU.IC.SEA ANOMALY"]={type:"path",fill:!1,d:"m 65,100 15,-20 20,30 20,-30 15,20 m -70,10 15,-20 20,30 20,-30 15,20"},t["SU.M1.ANTISUBMARINE WARFARE"]=N("ASW"),t["SU.M1.AUXILIARY"]=N("AUX"),t["SU.M1.COMMAND AND CONTROL"]=N("C2"),t["SU.M1.INTELLIGENCE, SURVEILLANCE, RECONNAISSANCE"]=N("ISR"),t["SU.M1.MINE COUNTERMEASURES"]=N("MCM"),t["SU.M1.MINE WARFARE"]=N("MIW"),t["SU.M1.SURFACE WARFARE"]=N("SUW"),t["SU.M1.ATTACK"]=N("A"),t["SU.M1.BALLISTIC MISSILE"]=N("B"),t["SU.M1.GUIDED MISSILE"]=N("G"),t["SU.M1.OTHER GUIDED MISSILES (POINT DEFENCE)"]=N("M"),t["SU.M1.SPECIAL OPERATIONS FORCE"]=N("SOF"),t["SU.M1.POSSIBLE SUBMARINE - LOW 1"]=N("P1"),t["SU.M1.POSSIBLE SUBMARINE - LOW 2"]=N("P2"),t["SU.M1.POSSIBLE SUBMARINE - HIGH 3"]=N("P3"),t["SU.M1.POSSIBLE SUBMARINE - HIGH 4"]=N("P4"),t["SU.M1.PROBABLE SUBMARINE"]=N("PB"),t["SU.M1.CERTAIN SUBMARINE"]=N("CT"),t["SU.M1.ANTI-TORPEDO TORPEDO"]=N("ATT"),t["SU.M1.HIJACKING/HIJACKED"]=N("H"),t["SU.M2.AIR INDEPENDENT PROPULSION"]=T("AI"),t["SU.M2.CERTSUB"]=T("CT"),t["SU.M2.DIESEL PROPULSION"]=T("D"),t["SU.M2.DIESEL - TYPE 1"]=T("D1"),t["SU.M2.DIESEL - TYPE 2"]=T("D2"),t["SU.M2.DIESEL - TYPE 3"]=T("D3"),t["SU.M2.NUCLEAR POWERED"]=T("N"),t["SU.M2.NUCLEAR - TYPE 1"]=T("N1"),t["SU.M2.NUCLEAR - TYPE 2"]=T("N2"),t["SU.M2.NUCLEAR - TYPE 3"]=T("N3"),t["SU.M2.NUCLEAR - TYPE 4"]=T("N4"),t["SU.M2.NUCLEAR - TYPE 5"]=T("N5"),t["SU.M2.NUCLEAR - TYPE 6"]=T("N6"),t["SU.M2.NUCLEAR - TYPE 7"]=T("N7"),t["SU.M2.AUTONOMOUS CONTROL"]=T("AUT"),t["SU.M2.REMOTELY PILOTED"]=T("RP"),t["SU.M2.EXPENDABLE"]=T("EXP"),t["SOF.IC.UNDERWATER DEMOLITION TEAM"]={type:"text",stroke:!1,x:100,y:110,fontsize:32,text:"UDT"},t["SOF.M2.ATTACK"]=T("A"),t["SOF.M2.REFUEL"]=T("K"),t["SOF.M2.UTILITY"]=T("U"),t["SOF.M2.VSTOL"]={type:"text",stroke:!1,x:100,y:135,fontsize:20,text:"VSTOL"},t["SOF.M2.COMBAT SEARCH AND RESCUE"]=T(R?"CSAR":"H"),t["SI.IC.COMMUNICATIONS"]={type:"path",d:"m 93,120 14,0 0,0 m -7,-27 0,27 m 2,-25 8,2 -5,5 13,3 m -20,-10 -8,2 5,5 -14,3 m 21,-13 8,-2 -5,-5 13,-3 m -37,0 14,3 -5,5 8,2",fill:!1},t["SI.IC.RADAR"]={type:"path",d:"m 115,90 -15,15 0,-15 -15,15 M 80,85 c 0,25 15,35 35,35",fill:!1},t["SI.M1.ANTI-AIRCRAFT FIRE CONTROL"]=N("AA"),t["SI.M1.AIRBORNE SEARCH AND BOMBING"]=N("AB"),t["SI.M1.AIRBORNE INTERCEPT"]=N("AI"),t["SI.M1.ALTIMETER"]=N("AL"),t["SI.M1.AIRBORNE RECONNAISSANCE AND MAPPING"]=N("AM"),t["SI.M1.AIR TRAFFIC CONTROL"]=N("AT"),t["SI.M1.BEACON TRANSPONDER (NOT IFF)"]=N("BN"),t["SI.M1.BATTLEFIELD SURVEILLANCE"]=N("BS"),t["SI.M1.CONTROLLED APPROACH"]=N("CA"),t["SI.M1.CONTROLLED INTERCEPT"]=N("CI"),t["SI.M1.CELLULAR/MOBILE"]=N("CM"),t["SI.M1.COASTAL SURVEILLANCE"]=N("CS"),t["SI.M1.DECOY/MIMIC"]=N("DC"),t["SI.M1.DATA TRANSMISSION"]=N("DT"),t["SI.M1.EARTH SURVEILLANCE"]=N("ES"),t["SI.M1.EARLY WARNING"]=N("EW"),t["SI.M1.FIRE CONTROL"]=N("FC"),t["SI.M1.GROUND MAPPING"]=N("GM"),t["SI.M1.HEIGHT FINDING"]=N("HF"),t["SI.M1.HARBOR SURVEILLANCE"]=N("HS"),t["SI.M1.IDENTIFICATION, FRIEND OR FOE (INTERROGATOR)"]=N("IF"),t["SI.M1.INSTRUMENT LANDING SYSTEM"]=N("IL"),t["SI.M1.IONOSPHERIC SOUNDING"]=N("IS");t["SI.M1.IDENTIFICATION, FRIEND OR FOE (TRANSPONDER)"]=N("IT");t["SI.M1.BARRAGE JAMMER"]=N("JB"),t["SI.M1.CLICK JAMMER"]=N("JC"),t["SI.M1.DECEPTIVE JAMMER"]=N("JD"),t["SI.M1.FREQUENCY SWEPT JAMMER"]=N("JF"),t["SI.M1.JAMMER (GENERAL)"]=N("JG"),t["SI.M1.NOISE JAMMER"]=N("JN"),t["SI.M1.PULSED JAMMER"]=N("JP"),t["SI.M1.REPEATER JAMMER"]=N("JR"),t["SI.M1.SPOT NOISE JAMMER"]=N("JS"),t["SI.M1.TRANSPONDER JAMMER"]=N("JT"),t["SI.M1.MISSILE ACQUISITION"]=N("MA"),t["SI.M1.MISSILE CONTROL"]=N("MC"),t["SI.M1.MISSILE DOWNLINK"]=N("MD"),t["SI.M1.METEOROLOGICAL"]=N("ME"),t["SI.M1.MULTI-FUNCTION"]=N("MF"),t["SI.M1.MISSILE GUIDANCE"]=N("MG"),t["SI.M1.MISSILE HOMING"]=N("MH"),t["SI.M1.MISSILE TRACKING"]=N("MT"),t["SI.M1.NAVIGATIONAL/GENERAL"]=N("NA"),t["SI.M1.NAVIGATIONAL/DISTANCE MEASURING EQUIPMENT"]=N("ND"),t["SI.M1.NAVIGATION/TERRAIN FOLLOWING"]=N("NT"),t["SI.M1.NAVIGATIONAL/WEATHER AVOIDANCE"]=N("NW"),t["SI.M1.OMNI-LINE OF SIGHT (LOS)"]=N("OL"),t["SI.M1.PROXIMITY USE"]=N("PF"),t["SI.M1.POINT-TO-POINT LINE OF SIGHT (LOS)"]=N("PP"),t["SI.M1.INSTRUMENTATION"]=N("RI"),t["SI.M1.RANGE ONLY"]=N("RO"),t["SI.M1.SONOBUOY"]=N("SB"),t["SI.M1.SATELLITE DOWNLINK"]=N("SD"),t["SI.M1.SPACE"]=N("SP"),t["SI.M1.SURFACE SEARCH"]=N("SS"),t["SI.M1.SHELL TRACKING"]=N("ST"),t["SI.M1.SATELLITE UPLINK"]=N("SU"),t["SI.M1.TARGET ACQUISITION"]=N("TA"),t["SI.M1.TARGET ILLUMINATION"]=N("TI"),t["SI.M1.TROPOSPHERIC SCATTER"]=N("TS"),t["SI.M1.TARGET TRACKING"]=N("TT"),t["SI.M1.UNKNOWN"]=N("UN"),t["SI.M1.VIDEO REMOTING"]=N("VR"),t["SI.M1.EXPERIMENTAL"]=N("XP"),t["SI.M1.ALPHA"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"A"},t["SI.M1.CHARLIE"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"C"},t["SI.M1.DELTA"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"D"},t["SI.M1.ECHO"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"E"},t["SI.M1.FOXTROT"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"F"},t["SI.M1.INDY"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"I"},t["SI.M1.MIKE"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"M"},t["SI.M1.OSCAR"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"O"},t["SI.M1.PAPA"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"P"},t["SI.M1.SIERRA"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"S"},t["SI.M1.TANGO"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"T"},t["SI.M1.UNIFORM"]={type:"text",stroke:!1,x:68,y:110,fontsize:25,text:"U"},t["SI.M2.ALPHA"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"A"},t["SI.M2.BRAVO"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"B"},t["SI.M2.CHARLIE"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"C"},t["SI.M2.DELTA"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"D"},t["SI.M2.ECHO"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"E"},t["SI.M2.FOXTROT"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"F"},t["SI.M2.GOLF"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"G"},t["SI.M2.INDY"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"I"},t["SI.M2.LIMA"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"L"},t["SI.M2.MIKE"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"M"},t["SI.M2.NOVEMBER"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"N"},t["SI.M2.PAPA"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"P"},t["SI.M2.SIERRA"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"S"},t["SI.M2.TANGO"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"T"},t["SI.M2.UNIFORM"]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"U"},t["SI.M2.WHISKEY "]={type:"text",stroke:!1,x:132,y:110,fontsize:25,text:"W"},t["SI.M3.SPACE"]={type:"text",stroke:!1,x:100,y:75,fontsize:25,text:"S"},t["SI.M3.GROUND"]={type:"text",stroke:!1,x:100,y:75,fontsize:25,text:"G"},t["ST.IC.ARREST"]={type:"path",d:"m 92.5,100 15,0 m -2.5,-10 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m -5,5 0,20 m 20,-15 c 0,11 -9,20 -20,20 -11,0 -20,-9 -20,-20 0,-11 9,-20 20,-20 11,0 20,9 20,20 z",fill:!1},t["ST.IC.ARSON/FIRE"]=R?[{type:"path",d:"m 84.6,101.6 c 1.3,23.1 31,23.2 30.7,-1.9 -1.5,2.1 -4.6,6.5 -8.1,7.3 1.9,-2.4 2.6,-8.5 2.4,-12.9 -1.7,3.4 -4,7.9 -7,7.8 1.7,-4.3 2.7,-9.4 -0.5,-13.7 -0.2,3 0.8,7.1 -1.9,7 -2.7,-0.1 -2.9,-4.4 -1.1,-10.8 -4,4.1 -6.2,9.8 -3.8,17.5 -1.9,-0.2 -4.4,-1.9 -7,-7.8 -1.5,4.9 1.2,9.6 3.2,13.7 -2.4,-1.1 -6,-3 -7,-6.2 z",stroke:!1},{type:"text",stroke:!1,x:100,y:75,fontsize:25,text:"ASN"}]:{type:"text",stroke:!1,x:100,y:110,fontsize:35,text:"FIRE"},t["ST.IC.ATTEMPTED CRIMINAL ACTIVITY"]={type:"path",d:"m 127,127 5,5 m -15,-15 5,5 m -15,-15 5,5 m -15,-15 5,5 m -15,-15 5,5 m -15,-15 5,5 m -15,-15 5,5",
fill:!1},t["ST.IC.BLACK LIST LOCATION"]=S("BLK"),t["ST.IC.BLACK MARKETING"]=[{type:"text",stroke:!1,x:100,y:95,fontsize:30,text:"BLK"},{type:"text",stroke:!1,x:100,y:125,fontsize:30,text:"MKT"}],t["ST.IC.BOMB"]=S("BOMB"),t["ST.IC.BOOBY TRAP"]={type:"path",d:"m 85,105 15,-25 15,25 m -35,5 c 0,-10 40,-10 40,0 0,10 -40,10 -40,0 z",fill:!1},t["ST.IC.COMPOSITE LOSS"]={type:"path",d:"m 100,85 0,30 m -35,-15 45,0 m 20,0 c 0,5.5 -4.5,10 -10,10 -5.5,0 -10,-4.5 -10,-10 0,-5.5 4.5,-10 10,-10 5.5,0 10,4.5 10,10 z",fill:!1},t["ST.IC.DEMONSTRATION"]=S("MASS"),t["ST.IC.DRIVE-BY SHOOTING"]={type:"path",d:"m 95,85 5,-5 5,5 m -5,-5 0,30 m -15,0 30,0 m 5,5 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z m -30,0 c 0,2.8 -2.2,5 -5,5 -2.8,0 -5,-2.2 -5,-5 0,-2.8 2.2,-5 5,-5 2.8,0 5,2.2 5,5 z",fill:!1},t["ST.IC.DRUG RELATED ACTIVITIES"]=S("DRUG"),t["ST.IC.EXPLOSION"]={type:"path",d:"m 110,55 5,20 15,-10 0,15 15,5 -15,10 15,10 -15,5 5,15 -20,-5 -5,20 -10,-15 -10,20 -5,-25 -20,10 5,-15 L 55,105 70,95 60,85 70,80 70,65 85,75 90,55 100,70 z",fill:!1},t["ST.IC.EXTORTION"]={type:"text",stroke:!1,x:100,y:130,fontsize:80,text:"$"},t["ST.IC.FOOD DISTRIBUTION"]=[{type:"path",d:"m 105,85 c -5,10 -5,20 0,30 m 0,-30 c -20,0 -20,30 0,30",fill:!1},{Unknown:{type:"path",d:"M35,120 l130,0 ",fill:!1},Friend:{type:"path",d:"M25,120 l150,0 ",fill:!1},Neutral:{type:"path",d:"M45,120 l110,0 ",fill:!1},Hostile:{type:"path",d:"M50,120 l100,0 ",fill:!1}}[O]],t["ST.IC.GRAFFITI"]={type:"path",d:"m 110,80 c -10,0 -10,10 0,10 10,0 10,10 0,10 -10,0 -10,10 0,10 10,0 10,10 0,10 M 90,80 c -10,0 -10,10 0,10 10,0 10,10 0,10 -10,0 -10,10 0,10 10,0 10,10 0,10",fill:!1},t["ST.IC.GROUP"]={type:"path",d:"m 133,90 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0 m -52,-12.3 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0 m 23,-7.3 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0",fill:!1},t["ST.IC.HIJACKING (AIRPLANE)"]={type:"path",fill:!!R&&U,d:"m 70,95 0,10 65,0 0,-10 z m 55,10 0,10 5,0 0,-10 z m 0,-10 0,-10 5,0 0,10 z m -45,10 0,15 10,0 0,-15 z m 0,-10 0,-15 10,0 0,15 z"},t["ST.IC.HIJACKING (BOAT)"]={type:"path",fill:R?U:!L&&U,d:"m 105,80 0,20 20,0 z m -5,25 0,-25 m -30,25 10,15 40,0 10,-15 z"},t["ST.IC.GRAY LIST LOCATION"]=S("GRAY"),t["ST.IC.IED"]=S("IED"),t["ST.IC.INDIVIDUAL"]={type:"path",d:"m 108,90 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0",fill:!1},t["ST.IC.INTERNAL SECURITY FORCE"]=S("ISF"),t["ST.IC.KILLING VICTIM"]=[{type:"path",d:"m 108,90 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0",fill:!1},{Unknown:{type:"path",fill:!1,d:"M50,65 150,135"},Friend:{type:"path",fill:!1,d:"M25,50 175,150"},Neutral:{type:"path",fill:!1,d:"M45,45 155,155"},Hostile:{type:"path",fill:!1,d:"M57,70 143,130"}}[O]],t["ST.IC.KILLING VICTIMS"]=[{type:"path",d:"m 133,90 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0 m -52,-12.3 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0 m 23,-7.3 c 0,10 -15,10 -15,0 0,-10 15,-10 15,0 z m -8,7.3 0,25 m -10,-20 20,0",fill:!1},{Unknown:{type:"path",fill:!1,d:"M50,65 150,135"},Friend:{type:"path",fill:!1,d:"M25,50 175,150"},Neutral:{type:"path",fill:!1,d:"M45,45 155,155"},Hostile:{type:"path",fill:!1,d:"M57,70 143,130"}}[O]],t["ST.IC.KNOWN INSURGENT VEHICLE"]={type:"path",d:"m 65,95 70,0 m 0,10 c 0,5.5 -4.5,10 -10,10 -5.5,0 -10,-4.5 -10,-10 0,-5.5 4.5,-10 10,-10 5.5,0 10,4.5 10,10 z m -50,0 c 0,5.5 -4.5,10 -10,10 -5.5,0 -10,-4.5 -10,-10 0,-5.5 4.5,-10 10,-10 5.5,0 10,4.5 10,10 z",fill:!1},t["ST.IC.MASS GRAVE LOCATION"]={type:"path",d:"m 77.5,90 10,0 m -5,-5 0,15 m 7.5,-20 0,30 -15,0 0,-30 z m 22.5,10 10,0 m -5,-5 0,15 m -7.5,-20 0,30 15,0 0,-30 z m -15,20 10,0 m -5,-5 0,20 m -7.5,-25 15,0 0,30 -15,0 z",fill:!1},t["ST.IC.MINE LAYING"]=[{type:"path",d:"m 60,85 80,0 0,30 -80,0 z",fill:!1},{type:"path",d:"m 135,100 c 0,5.5 -4.5,10 -10,10 -5.5,0 -10,-4.5 -10,-10 0,-5.5 4.5,-10 10,-10 5.5,0 10,4.5 10,10 z m -25,0 c 0,5.5 -4.5,10 -10,10 -5.5,0 -10,-4.5 -10,-10 0,-5.5 4.5,-10 10,-10 5.5,0 10,4.5 10,10 z m -25,0 c 0,5.5 -4.5,10 -10,10 -5.5,0 -10,-4.5 -10,-10 0,-5.5 4.5,-10 10,-10 5.5,0 10,4.5 10,10 z",stroke:!1}],t["ST.IC.PATROLLING"]={type:"path",d:"m 131,97 0,-14 5,0 c 4,0 4,7 0,7 l -5,0 m -71,15 15,10 M 60,105 75,95 m -15,10 40,0 -15,-15 40,0",fill:!1},t["ST.IC.POISONING"]={type:"path",d:"m 85,95 c 0,-20 30,-20 30,0 0,20 -30,20 -30,0 z m -15,10 60,15 m -60,0 60,-15",fill:!1},t["ST.IC.PSYCHOLOGICAL OPERATIONS"]={type:"path",fill:!!R&&U,stroke:i,d:"m 110,95 10,0 m -10,10 10,0 m -10,10 10,0 m -10,-30 10,0 m -10,-5 -10,10 -30,0 0,20 30,0 10,10 z"},t["ST.IC.RADIO AND TELEVISION PSYCHOLOGICAL OPERATIONS"]=[t["ST.IC.PSYCHOLOGICAL OPERATIONS"],{Unknown:{type:"path",fill:!1,d:"M50,65 100,110 100,90 150,135"},Friend:{type:"path",fill:!1,d:"M25,50 100,110 100,90 175,150"},Neutral:{type:"path",fill:!1,d:"M45,45 100,110 100,90 155,155"},Hostile:{type:"path",fill:!1,d:"M57,70 100,110 100,90 143,130"}}[O]],t["ST.IC.RIOT"]=S("RIOT"),t["ST.IC.SAFE HOUSE"]=S("SAFE"),t["ST.IC.SEARCHING"]={type:"path",d:"m 140,105 c -10,0 -5,0 -10,0 -15,0 -5,-15 -20,-15 -15,0 -5,20 -20,20 -15,0 -5,-20 -20,-20 -10,0 -10,10 -10,10 m 70,0 10,5 -10,5",fill:!1},t["ST.IC.SPY"]=S("SPY"),t["ST.IC.SNIPING"]=[{type:"path",d:"m 95,85 5,-5 5,5 m -5,-5 0,40",fill:!1},{type:"text",stroke:!1,x:100,y:75,fontsize:25,text:"S"}],t["ST.IC.VANDALISM/LOOT/RANSACK/PLUNDER/SACK"]={type:"path",d:"m 115,100 c 0,-5 5,-10 10,-10 M 85,100 C 85,95 80,90 75,90 m 5,25 c -0.5,-29.5 40,-30 40,0 z",fill:!1},t["ST.IC.WHITE LIST LOCATION"]=S("WHT"),t["ST.IC.ROBBERY"]=S("ROB"),t["ST.IC.THEFT"]=S("THF"),t["ST.IC.BURGLARY"]=S("BUR"),t["ST.IC.SMUGGLING"]=S("SMGL"),t["ST.IC.SABOTAGE"]=S("SAB"),t["ST.IC.ILLEGAL DRUG OPERATION"]=S("DRUG"),t["ST.IC.SPY"]=S("SPY"),t["ST.IC.WARRANT SERVED"]=S("WNT"),t["ST.IC.POLLING PLACE/ELECTION"]=S("VOTE"),t["ST.IC.NATURAL EVENT"]=S("NAT"),t["ST.IC.GEOLOGIC"]=S("GEOL"),t["ST.IC.HYDRO-METEOROLOGICAL"]=S("HYDR"),t["ST.IC.INFESTATION"]=S("INFS"),t["ST.IC.GRENADE"]=S("G"),t["ST.IC.INCENDIARY"]=S("I"),t["ST.IC.MINE"]=S("M"),t["ST.IC.HOUSE"]={type:"path",fill:!!R&&U,d:"m 70,100 60,0 m -30,-20 -30,20 0,35 60,0 0,-35 -30,-20 z"},t["ST.IC.ROCK THROWING"]={type:"path",d:"m 90,60 25,25 M 70,65 95,90 M 60,80 80,100 m 45,-5 5,15 -5,15 -20,10 -20,-5 -5,-20 5,-5 10,0 5,-10 10,-5 15,5 z"},t["ST.M1.ACCIDENT"]=N("ACC"),t["ST.M1.ASSASSINATION"]=N("AS"),t["ST.M1.CIVILIAN"]=N("CIV"),t["ST.M1.COERCED/IMPRESSED"]=N("C"),t["ST.M1.COMBAT"]=N("CBT"),t["ST.M1.DEAD BODY"]=N("DB"),t["ST.M1.DISPLACED PERSONS, REFUGEES, AND EVACUEES"]=N("DPRE"),t["ST.M1.DRUG"]=N("DRUG"),t["ST.M1.EVICTION"]=N("EV"),t["ST.M1.EXECUTION (WRONGFUL KILLING)"]=N("EX"),t["ST.M1.EXFILTRATION"]=N("EXFL"),t["ST.M1.FOREIGN FIGHTERS"]=N("FF"),t["ST.M1.GANG"]=N("GANG"),t["ST.M1.GOVERNMENT ORGANIZATION"]=N("GO"),t["ST.M1.HIJACKING/HIJACKED"]=N("H"),t["ST.M1.HOUSE-TO-HOUSE"]={type:"path",fill:!!R&&U,d:"m 110,65 -20,0 0,15 20,0 z m -10,-10 -10,10 20,0 z"},t["ST.M1.IED"]=N("IED"),t["ST.M1.INCIDENT"]=N("INC"),t["ST.M1.INFILTRATION"]=N("INFL"),t["ST.M1.KIDNAPPING"]=N("K"),t["ST.M1.LABRATORY"]=N("LAB"),t["ST.M1.LEADER"]=N("LDR"),t["ST.M1.LOOT"]=N("LOOT"),t["ST.M1.MEETING"]=N("MTG"),t["ST.M1.MURDER"]=N("MU"),t["ST.M1.NONGOVERNMENTAL ORGANIZATION (NGO)"]=N("NGO"),t["ST.M1.OTHER"]=N("OTH"),t["ST.M1.PIRACY"]=N("PI"),t["ST.M1.PREMATURE"]=N("P"),t["ST.M1.RAID"]=N("RAID"),t["ST.M1.RAPE"]=N("RA"),t["ST.M1.RELIGIOUS"]=N("REL"),t["ST.M1.SPEAKER"]=N("SPK"),t["ST.M1.TARGETED"]=N("TGT"),t["ST.M1.TERRORIST"]=N("TER"),t["ST.M1.TRAFFICKING"]=N("TFK"),t["ST.M1.WILLING RECRUIT"]=N("WR"),t["ST.M1.WRITTEN PSYCHOLOGICAL OPERATIONS"]=t["ST.M1.WILLING"]=N("W"),t["ST.M1.FALSE"]=N("FAL"),t["ST.M1.FIND"]=N("FND"),t["ST.M1.FOUND AND CLEARED"]=N("CLR"),t["ST.M1.HOAX (DECOY)"]={type:"path",d:"M 90,75 80,67.5 90,60 90,75 Z m 15,0 -10,-7.5 10,-7.5 0,15 z m 15,0 -10,-7.5 10,-7.5 0,15 z"},t["ST.M1.ATTEMPTED"]=N("ATT"),t["ST.M1.ACCIDENT"]=N("ACC"),t["ST.M1.INCIDENT"]=N("INC"),t["ST.M1.THEFT"]=N("THF"),t["ST.M1.PIRATE"]=[{type:"circle",cx:100,cy:60,r:7,fill:!1},{type:"path",fill:!1,d:"m 82.5,75 35,-15 m 0,15 -35,-15 m 3,7 5,10 m 27,-10 -10,10"}],t["ST.M2.LEADER OR LEADERSHIP"]=T("LDR"),t["ST.M2.RELIGIOUS"]=T("REL"),t["AC.IC.CRIMINAL.ACTIVITY.INCIDENT"]=[{type:"path",stroke:!1,d:"m 98.7,66.7 c -3.2,0.7 -6.3,3.7 -6.4,7 0.3,3.6 5.3,2.8 7,0.6 2,-1.2 1.7,-4.5 4.5,-3.7 2.6,-0.6 3.2,3.2 5.9,3.2 1.6,1.5 4.4,-0.6 5.4,1.2 0.7,1.1 1.5,2.2 2.2,3.3 -2,3.1 -1.3,7.9 1.9,10 3.5,1.1 4.8,-3.5 4.1,-6.2 -0.2,-3 -2.5,-5 -5.1,-5.4 -1.5,-1.9 -2.7,-3.4 -1.6,-5.6 -1,-3.3 -5.1,-4.5 -8.2,-4.3 -2.2,0.3 -2.9,2.6 -5.3,1.9 -1.9,0.4 -1.9,-2.8 -4.3,-2 z m 0.2,1.3 c 2.7,0.5 0.9,0.6 -0.6,1.3 -0.5,2.2 3.8,0.4 1.4,2.9 -0.9,1.9 -5.8,4.7 -5.9,1.1 0.1,-2.5 2.7,-4.8 5.1,-5.2 z m 10.3,0.1 c 2.4,-0.5 7.1,2.3 5.6,3.7 -0.8,-2.1 -3,0 -1.2,1.2 -1.7,0.9 -7.4,-1.6 -5.7,-2.4 2.5,0.8 2.8,-2.7 -0,-1.9 -1.4,0.2 1.1,-0.8 1.3,-0.6 z M 81.9,71.6 c -1.8,1.9 -3.6,3.9 -5.5,5.8 -7.5,-0.1 -14,6.2 -15.7,13.2 -0.6,4.2 0.5,8.5 2.8,12 0.7,3.9 -3.2,6.7 -3,10.7 -0.8,7.4 4.8,14.5 11.7,16.8 2.3,-0.4 1.3,1.3 1.4,2 1.5,-0.4 3,-0.8 4.6,-1.2 -0.2,1.5 -0.1,2.7 1.4,1.2 0.9,-0.3 2.3,-2.2 2.9,-1.5 0.2,2.2 1.2,0.1 2,-0.7 0.8,-1.2 1.6,-2.3 2.4,-0.5 1.2,-2.4 4.1,-7.2 -0.8,-7.3 -3.4,2.3 -7.5,4.6 -11.8,3.5 -6.3,-1.5 -10.9,-8.8 -8.2,-14.9 0.4,-3.9 6.8,-3.4 5,-8.2 -1.8,-2.6 -5.7,-2.9 -5.7,-7 -1.5,-7.3 5.6,-14.7 13,-13.7 4.7,0.5 7.4,4.9 10.8,7.6 1.9,1.9 4.1,5.1 5.9,1.4 2.8,-2 4.3,-4.7 1.8,-7.6 C 94.8,79.7 90.9,77.3 88,74.4 86.3,72.9 83.9,72.6 81.9,71.6 z m 3.3,3.8 c 1.6,1.1 2.9,2.1 0.3,3.3 -0.9,3.7 -5.1,-0.5 -1.5,-1.5 0.4,-0.6 0.9,-1.1 1.2,-1.8 z m 34.2,3.1 c 3,1.4 3.9,6.4 1.4,8.8 -2.9,0.1 -3.6,-4.3 -3.1,-6.6 0.1,-2.9 2.5,2.7 2.5,-0.7 -0.2,-0.5 -0.5,-1 -0.8,-1.4 z M 127.3,90.2 c -4.3,0.4 -8.8,-0 -13.1,1 -2.1,1.1 -5.7,1.5 -4.6,4.5 0.1,1.8 0.2,3.6 0.4,5.4 -4.9,4.9 -5.5,13.3 -2.2,19.2 2.4,4.3 7,7 11.8,7.8 3.3,4.9 7.3,-1.3 11.2,-1.7 5.5,-2.5 8.9,-8.5 8.5,-14.5 0.2,-5 -2.4,-10.1 -6.7,-12.8 -0.1,-2.3 -0.2,-4.6 -0.3,-6.9 -1.6,-0.8 -3.4,-1.4 -5.1,-2.1 z M 127.8,92.5 c -0.9,1.7 0.6,3.8 -0.9,4.9 -2.3,0.7 -1.7,-2.4 -1.9,-3.8 -0.6,-1.7 1.9,-0.7 2.8,-1 z m -2.9,8.3 c 4.1,0.9 8,3.7 9.3,7.9 0.9,3.7 0.5,8 -2.3,10.9 -1.7,2 -5.3,4.3 -7.7,3.1 -3.1,-0.8 -5.8,2.1 -8.6,-0.5 -6.9,-4.2 -7.2,-16 0.2,-19.8 2.7,-1.6 6,-1.6 9.1,-1.6 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"M 85.1 75.3 C 85 75.8 84.2 76.7 83.9 77.1 C 83.6 77.6 82.4 77.9 82.4 78.6 L 82.4 79 C 82.4 79.4 83.3 80.1 83.6 80.1 L 83.8 80.1 C 84.8 80.1 85 79.1 85.4 78.6 C 85.7 78.2 86.7 77.4 87.2 77 L 85.1 75.3 z M 127.8 92.5 L 125 92.7 L 125.2 96.5 C 125.3 97.5 125.9 97.3 126.5 97.6 C 127.1 97.3 127.8 97.1 127.8 96.3 C 127.8 95.8 127.7 95.6 127.5 95.3 L 127.8 92.5 z"}],t["AC.IC.CRIMINAL.CIVIL DISTURBANCE"]={type:"path",stroke:!1,d:"m 110.6,142.4 0,-28.6 -7.1,0 0,28.6 z m -21.2,0 7.1,0 0,-28.6 -7.1,0 z m 7.1,-28.6 h 7.1 v -11.8 h 24.4 V 77.2 h -6.3 v 18.6 h -18 v -10.7 c 0,-0.9 2.1,-1.2 3,-1.7 0.8,-0.4 2.1,-1.4 2.7,-2 1.5,-1.4 3.2,-3.6 3.8,-5.9 1.6,-6.3 -0.2,-10.6 -3.8,-14.1 -3,-3.1 -9.2,-4.9 -14.3,-2.7 -3.6,1.6 -8.4,6.2 -8.4,11 v 3.2 c 0,2.8 1.9,6.2 3.3,7.7 1,1 1.8,1.7 3,2.5 1,0.6 3.6,1.3 3.6,2.2 v 10.7 H 78.4 v -18.6 h -6.3 v 24.9 h 24.4 v 11.8 h -0 z"},t["AC.IC.SHOOTING"]={type:"path",stroke:!1,d:"m 93.2,89.7 h 16.8 v 9.3 c -2.6,0 -7.3,1.6 -9,1 -2.3,-0.8 -5.4,-2 -7.8,-2.6 v -7.8 l 0,0 z m -30,0 h 26.1 v 9.6 c 0,0.9 4.1,2 5,2.3 1.9,0.6 3.6,1.4 5.5,2 2,0.7 3.4,0.4 6,-0.1 1.6,-0.3 5.7,-0.4 6.6,-0.9 0.6,2.7 4.6,14 4.6,15.2 0,1.6 -1.2,4 -1.3,5.7 l 21.5,0 -8.2,-25.9 7.8,-7.7 c -0.8,-1.6 -4.1,-13.4 -5.2,-13.4 h -68.4 v 13.2 l 0,0 z"},t["AC.IC.FIRE EVENT"]={type:"path",stroke:!1,d:"m 96.5,78.5 c 0,-5.1 4.1,-9.7 4.1,-13 v -0.4 c 0,-1.3 -0,-3.8 -1.1,-4.1 -1,4.5 -3.5,8 -5.9,11.2 -1.2,1.6 -2.4,3.3 -3.6,5 -1,1.4 -3.1,3.5 -3.1,5.5 0,1.4 6.1,17.7 3,17.7 -0.1,0 -3.8,-2.5 -4.2,-2.9 -1.4,-1 -2.4,-2.3 -3.3,-3.7 -3.1,-4.6 -2.4,-4.4 -3.8,-10.3 -1.5,0.4 -2.6,5 -2.9,6.9 -0.4,2.4 -0.3,6.6 0.2,9 0.6,2.8 1.4,5 2.5,7.3 0.6,1.2 3,5.5 3.1,6.5 -2.2,-0.5 -7,-4.6 -8.6,-6.2 -1.5,-1.5 -5.5,-8.3 -5.9,-8.6 0,9.9 5,22.8 9.8,27.6 3.1,3.1 6.3,6.4 10.2,8.6 2.4,1.5 10.5,4.3 14.3,4.3 h 2.4 c 2.8,0 10.8,-3 12.9,-4.2 3.4,-1.9 6.9,-4.7 9,-7.9 4.4,-6.5 8,-15 8,-25.8 v -1.3 l -0.4,-5.8 c -0.7,0.4 -2.2,4.4 -2.5,5.2 -0.5,1.3 -2,3.4 -2.9,4.6 -1.4,2.1 -5.2,6.3 -7.8,6.9 v -1.1 c 0,-4.4 2.8,-8.8 2.8,-12.4 v -1.9 l -1.3,-12.2 h -0.6 c -0.3,3.9 -1.6,7.9 -3.4,10.5 -1.3,2 -5.3,5.6 -7.7,6.2 -0.2,-0.4 -0.4,-0.6 -0.4,-1.3 v -2.3 c 0,-5.1 3,-8.9 3,-12.8 v -0.8 c 0,-1.5 -2.1,-3.9 -2.9,-5.2 -0.7,-1.1 -2.4,-4.3 -3.5,-4.6 v 1.3 c 0,6.2 -1.4,10.6 -5.6,12.6 -1.1,-1.7 -3.6,-3.2 -3.6,-6.2 v -1.9 l 0,0 z"},t["AC.IC.NON-REsIdENTIAL FIRE"]={type:"path",stroke:!1,d:"m 121.2,122.3 -6.2,0 0,5.9 6.2,0 z m -12.1,0 -6.1,0 0,5.9 6.1,0 z m -12.2,0 -5.9,0 0,5.9 5.9,0 z m -12.3,0 -5.7,0 0,5.9 5.7,0 z m 30.4,-4.8 h 6.1 v -6.2 h -2.5 c -1.2,0 -2.5,1.5 -3.6,1.8 v 4.4 z m -5.9,-6.2 -6.1,0 0,6.2 6.1,0 z m -12.2,0 -5.9,0 0,6.2 5.9,0 z m -12.3,0 -5.7,0 0,6.2 5.7,0 z m 25,-33.4 c 0,-3.4 3.4,-7.4 3.4,-9.1 0,-1.4 -0.8,-4.2 -1.8,-4.6 0,7.1 -8.6,12.8 -8.6,15.7 v 0.4 c 0,0.7 1.9,5.2 2.3,6.6 0.4,1.7 1.4,5.6 1.6,7.3 -6.2,-0.1 -7.3,-9.8 -10.3,-11.8 l -0.3,3 0,4.6 c 0,4.7 3.4,11.4 5.6,13.9 1,1.1 4.2,3.7 5.5,4.3 0.8,0.4 6.3,3 6.6,3 1.4,0 9.2,-7.2 10.5,-8.6 2.5,-2.5 4,-9.6 4,-14.8 v -0.7 l -0.7,-5.7 c -1,0.6 -2.1,5.6 -2.8,7 -1.5,3.2 -1.8,3.1 -5.4,4 -0.3,-12.2 6.7,-8.3 -2.7,-19.1 0,4.9 -0.9,7.9 -4.1,9.6 -1.4,-0.7 -3,-2.7 -3,-4.8 z m -14.8,26.4 h 3.6 c -0.1,-0.6 -0.3,-1.4 -1.1,-1.4 h -1.2 v -2.7 c 0,-0.9 -0.9,-2.4 -1.4,-3 v 7 z m -16.4,-28.6 h 3.9 v 28.6 h 8.9 v -28.6 h 3.6 v 5.4 c 0.3,-0.2 1.4,-1.4 1.4,-1.8 v -5 h -6.4 v 28.6 h -6.4 v -28.6 h -6.1 v 28.6 h -5.2 v 32.7 h 54.8 v -30.7 c -0.4,0.2 -1.1,1 -1.1,1.6 v 27.5 h -52.5 v -29.8 h 5.2 v -28.6 h -0 z"},t["AC.IC.REsIdENTIAL FIRE"]={type:"path",stroke:!1,d:"m 91.5,88.3 -0.7,-3 -30.1,25.2 15.6,0.1 v 25.6 h 50.5 v -25.6 h 12.4 c -0.4,-0.5 -7.6,-5.9 -8,-5.9 -0.3,0 -1.2,1.6 -1.4,1.9 l 1.4,1.4 h -2.4 c -0.7,0.5 -4.9,3.1 -4.9,3.8 v 22.3 h -18.3 v -12.9 h -8.7 v 12.9 h -18.1 v -23.5 h 22.6 l -2.2,-2.7 -30.7,-0.1 L 91.5,88.3 z m 27.6,28 -8.2,0 0,8.5 8.2,0 z m -27,0.2 -8.7,0 0,8.2 8.7,0 z m 11,-36.4 c 0,0.9 2.1,5.3 2.5,6.9 0.4,1.8 1.5,6.1 1.5,7.8 -7.1,-1.6 -6.9,-9.9 -10.3,-12.2 -1.7,7.5 0.8,15.1 3.7,19.5 2.4,3.6 2.6,3.4 6,6 0.4,0.4 7.9,4.3 7.9,4.3 2,0 9.6,-7.1 11.1,-8.6 1.8,-1.8 5.6,-10.8 5.6,-14.4 V 83.5 c 0,-1.9 -0.3,-3.2 -1.4,-4 0,2 -1.8,7 -2.6,8.4 -0.8,1.8 -4.3,4.2 -6.3,4.7 v -1.7 c 0,-4.4 2.4,-6.8 2.4,-10.1 0,-2 -4,-7.2 -5.2,-8 0,5.4 -0.7,8 -4.2,9.8 -1.2,-0.7 -3.1,-2.6 -3.1,-4.4 v -1 c 0,-1.5 1.8,-5.4 2.5,-6.6 2,-3.9 0.5,-3.8 -0.4,-7 h -0.4 c -1.3,5.5 -0.8,4.8 -3.8,8.9 -1,1.4 -5.4,5.9 -5.4,7.5 z"},t["AC.IC.SCHOOL FIRE"]={type:"path",stroke:!1,d:"m 131.3,73 c -4,-1 -17,-7.2 -19.8,-7.2 h -2.4 V 96 h -0.7 c 0,5.6 -3.8,15.3 -6.2,18.6 -2,2.7 -3.7,4.1 -6.2,6.2 -0.8,0.6 -7,4.9 -7,5.4 v 8 h 44.1 V 96 h -20.4 l 0,-14.8 18.8,-8.2 z m -49.2,11.8 c 0,-3 3.6,-8 3.6,-10 0,-1.8 -0.8,-3.9 -2,-4.6 -0.4,0.8 -0.4,3.6 -0.9,5 -0.3,0.7 -1.8,2.7 -2.3,3.5 -1.6,2.3 -3.4,4.2 -5.1,6.4 -2.2,2.8 0,5 1.1,8.2 0.8,2.2 1.4,7.9 2.1,9.4 C 71.9,102.4 70.6,91.8 67.6,89.9 l -0.6,7.6 0.1,0.2 c 0,5 3.6,12.3 5.9,15 1.1,1.3 4.3,3.6 5.9,4.6 1.1,0.7 2.5,1 3.7,1.6 0.4,0.2 3.2,1.9 3.2,1.9 2.1,0 9.9,-7.4 11.5,-9 1.8,-1.8 5.8,-11 5.8,-14.4 v -6.3 c 0,-2.1 -0.4,-2.6 -0.7,-4.2 h -0.8 c -0.2,1.9 -2.2,7.1 -3,8.7 -0.7,1.3 -6.3,5.7 -6.3,3.7 v -1.2 c 0,-3.8 2.4,-7.2 2.4,-10 v -0.8 c 0,-1.5 -4.3,-6.8 -5.4,-7.6 0,2.5 0.1,4.8 -0.8,6.5 -0.5,0.9 -2.5,3.5 -3.6,3.5 -1.1,0 -3.2,-3.4 -3.2,-5.1 z"},t["AC.IC.HOT SPOT"]=[{type:"path",stroke:!1,d:"m 96.3,78.5 c 0,-5.1 4.1,-9.7 4.1,-13 v -0.4 c 0,-1.3 -0,-3.8 -1.1,-4.1 -1,4.5 -3.5,8 -5.9,11.2 -1.3,1.6 -2.3,3.3 -3.6,4.9 -1,1.3 -3.1,3.4 -3.1,5.5 0,1.4 6.1,17.7 3,17.7 -0.1,0 -3.7,-2.5 -4.2,-2.9 -1.4,-1 -2.4,-2.3 -3.3,-3.7 -3.1,-4.6 -2.4,-4.4 -3.8,-10.3 -1.5,0.4 -2.6,5 -2.9,6.9 -0.4,2.4 -0.3,6.7 0.3,9 0.6,2.8 1.3,5 2.5,7.3 0.6,1.2 3.1,5.5 3.1,6.5 -2.2,-0.5 -7.1,-4.6 -8.6,-6.1 -1.5,-1.5 -5.5,-8.3 -5.9,-8.6 0,9.9 5,22.8 9.8,27.6 3.1,3.1 6.3,6.4 10.1,8.7 2.5,1.5 10.5,4.3 14.3,4.3 h 2.4 c 2.9,0 10.8,-3 12.9,-4.2 3.4,-1.9 6.9,-4.7 9,-7.9 4.4,-6.5 8,-15 8,-25.7 V 99.9 l -0.4,-5.8 c -0.7,0.4 -2.2,4.4 -2.5,5.2 -0.5,1.3 -2,3.4 -2.8,4.6 -1.4,2.1 -5.2,6.3 -7.9,6.9 v -1.1 c 0,-4.4 2.8,-8.8 2.8,-12.4 v -1.9 l -1.3,-12.2 -0.7,8e-4 c -0.3,3.9 -1.7,7.9 -3.4,10.5 -1.3,2 -5.3,5.6 -7.7,6.2 -0.2,-0.4 -0.4,-0.6 -0.4,-1.3 v -2.4 c 0,-5.1 3,-8.9 3,-12.8 V 82.6 c 0,-1.5 -2.1,-3.9 -2.9,-5.2 -0.7,-1.1 -2.4,-4.3 -3.5,-4.6 v 1.3 c 0,6.2 -1.4,10.6 -5.6,12.6 -1.1,-1.7 -3.6,-3.1 -3.6,-6.2 v -1.9 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 113,126.9 c 0,6.3 -5.1,11.4 -11.4,11.4 -6.3,0 -11.4,-5.1 -11.4,-11.4 0,-6.3 5.1,-11.4 11.4,-11.4 6.3,0 11.4,5.1 11.4,11.4 z"}],t["AC.IC.FIRE ORIGIN"]=[{type:"path",stroke:!1,d:"m 96.3,78.5 c 0,-5.1 4.1,-9.7 4.1,-13 v -0.4 c 0,-1.3 -0,-3.8 -1.1,-4.1 -1,4.5 -3.5,8 -5.9,11.2 -1.3,1.6 -2.3,3.3 -3.6,4.9 -1,1.3 -3.1,3.4 -3.1,5.5 0,1.4 6.1,17.7 3,17.7 -0.1,0 -3.7,-2.5 -4.2,-2.9 -1.4,-1 -2.4,-2.3 -3.3,-3.7 -3.1,-4.6 -2.4,-4.4 -3.8,-10.3 -1.5,0.4 -2.6,5 -2.9,6.9 -0.4,2.4 -0.3,6.7 0.3,9 0.6,2.8 1.3,5 2.5,7.3 0.6,1.2 3.1,5.5 3.1,6.5 -2.2,-0.5 -7.1,-4.6 -8.6,-6.1 -1.5,-1.5 -5.5,-8.3 -5.9,-8.6 0,9.9 5,22.8 9.8,27.6 3.1,3.1 6.3,6.4 10.1,8.7 2.5,1.5 10.5,4.3 14.3,4.3 h 2.4 c 2.9,0 10.8,-3 12.9,-4.2 3.4,-1.9 6.9,-4.7 9,-7.9 4.4,-6.5 8,-15 8,-25.7 V 99.9 l -0.4,-5.8 c -0.7,0.4 -2.2,4.4 -2.5,5.2 -0.5,1.3 -2,3.4 -2.8,4.6 -1.4,2.1 -5.2,6.3 -7.9,6.9 v -1.1 c 0,-4.4 2.8,-8.8 2.8,-12.4 v -1.9 l -1.3,-12.2 -0.7,8e-4 c -0.3,3.9 -1.7,7.9 -3.4,10.5 -1.3,2 -5.3,5.6 -7.7,6.2 -0.2,-0.4 -0.4,-0.6 -0.4,-1.3 v -2.4 c 0,-5.1 3,-8.9 3,-12.8 V 82.6 c 0,-1.5 -2.1,-3.9 -2.9,-5.2 -0.7,-1.1 -2.4,-4.3 -3.5,-4.6 v 1.3 c 0,6.2 -1.4,10.6 -5.6,12.6 -1.1,-1.7 -3.6,-3.1 -3.6,-6.2 v -1.9 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"M 99.6 105.9 C 93.3 105.9 88.2 111 88.2 117.3 C 88.2 123.6 93.3 128.7 99.6 128.7 C 105.9 128.7 111 123.6 111 117.3 C 111 111 105.9 105.9 99.6 105.9 z M 105 109.4 L 106.8 111 L 101.2 117.1 L 107.3 123.2 L 105.6 124.9 L 99.5 118.8 L 93.7 125.3 L 91.9 123.6 L 97.8 117.2 L 92.1 111.4 L 93.8 109.8 L 99.5 115.4 L 105 109.4 z"}],t["AC.IC.SMOKE"]=[{type:"path",stroke:!1,d:"m 99.3,69.2 c 0.2,-2.6 4.4,-5.5 7.2,-6 4.2,-0.8 6.9,1.2 9.1,3.3 1.1,1.1 1.9,2.7 2.4,4.3 0.6,2.2 1.9,1.3 4,2.5 2.4,1.4 4.9,4.4 5.6,7.4 5.3,0 10.3,4.8 10.3,9.9 v 1.3 c 0,3 -1.2,4.9 -2.8,6.5 -1.1,1.1 -1.2,1.2 -2.6,2.1 -1.3,0.8 -2.5,0.6 -2.7,2 -0.6,4.6 -4.2,9 -9.4,9 3.3,5 2.3,8.7 -0.6,13 0,4.8 -0.2,6.2 -2.8,8.8 -2.4,2.5 -4.5,2.4 -8.6,2.4 0.7,-1 1.2,-1 2,-2.4 0.6,-1.1 0.8,-1.7 1.4,-2.9 1,-2.2 1.8,-3.7 1.8,-6.8 v -2.1 c 0,-1.4 -0.2,-2.4 -0.8,-3.2 -1.2,5.2 -1.4,6.4 -5.7,8.6 0,-8.3 3.8,-6.8 -1.9,-13.4 0,3.8 -0.2,5.6 -2.7,6.9 -0.8,-0.5 -2.1,-1.7 -2.1,-2.9 v -0.4 c 0,-2 2.5,-5.2 2.5,-6.7 v -0.4 c 0,-1.1 -0.4,-2.1 -1,-2.5 0,2.9 -3.4,7.6 -4.9,9.2 -1.6,1.7 -1.1,2.8 -0.2,5 0.7,1.7 1.1,3.5 1.1,5.8 v 1 c -3.2,-0.3 -4.4,-6.2 -6.1,-8.2 0,3.4 -0.8,6.3 0.4,9.4 0.8,1.9 2.4,5.6 4.4,6.1 v 0.4 l -3.4,0.6 -0.2,-0.1 c -3.4,0 -6.4,-2.4 -7.8,-4.4 -0.8,-1.1 -1.5,-2.7 -1.7,-4.4 -0.3,-2.3 0.6,-3.6 0.6,-5 0,0 -5.1,-4.7 -4.4,-9 l 0.2,-1.7 c -0.4,-0.5 -1.4,-1.4 -2,-2.2 -0.6,-0.8 -1.1,-1.8 -1.6,-2.6 -1.4,0 -2,0.6 -3.2,0.6 h -0.6 c -5.4,0 -10.5,-5.2 -10.5,-10.5 v -0.8 c 0,-4.9 4.1,-9.2 9,-9.2 h 2.1 c 0.8,-3.2 5.7,-6.9 10.1,-5.9 -0.4,-1.5 -1,-2.7 -1,-4.8 v -0.4 c 0,-3.8 3.2,-7.8 6.1,-8.8 1.9,-0.7 3.9,-1 6.1,-0.4 2.3,0.6 3.7,2.2 4.8,2.5 l 0,0 z m -0.4,-1.9 c -1.3,-0.1 -2.9,-2.1 -5.9,-2.1 h -1.9 c -5,0 -10.6,5.8 -10,11.4 l 0.5,3.4 h -0.6 c -4.3,0 -7.1,3.2 -8.6,6.1 -2.3,-1.1 -6.8,1.2 -7.9,2.4 -1.6,1.6 -3.6,4.2 -3.6,7.3 v 1.5 c 0,3.6 2.4,7.3 4.5,8.9 1.8,1.3 2,1.6 4.4,2.4 2.7,0.9 3.7,0.1 5.9,0.2 l 3.1,3.7 c -0.6,1.3 0.4,4.9 0.9,6 0.5,1.2 0.7,1.4 1.4,2.4 0.2,0.4 1.7,2 1.7,2 0,1.1 -0.4,1.4 -0.4,2.7 v 0.2 c 0,6.3 4.8,12 10.7,12 2.1,0 3.6,-0.4 5,-1 2.6,1.4 7.1,3 9.2,-0.1 l 3.4,0.5 c 2.7,0.4 6.8,-2.2 7.9,-3.6 1,-1.4 3.7,-6 2.4,-8.8 1.1,-0.7 2.6,-3.7 2.7,-5.5 0.1,-1.7 0.2,-1.8 -0.1,-3.6 -0.2,-1.4 -0.9,-2.2 -1,-3.2 4,-0.3 8.4,-5.2 8.4,-9.7 2.5,-1.6 3.4,-1.2 5.6,-3.8 1.3,-1.4 2.6,-4.4 2.6,-7 0,-6.3 -4.7,-12 -10.7,-12 -0.9,-4 -4.8,-8.3 -9.2,-8.6 -0.4,-4.4 -5.7,-9.4 -10.7,-9.4 -4.1,-0 -8.9,2.7 -9.6,5.6 l 0,0 z m 15.8,38.4 c 0.5,0 1,0.1 1,-0.4 0,-3.1 -4.1,-6.7 -7.6,-6.7 h -1.9 c -0.6,0 -1,0.8 -0.6,1 0.4,0.2 1.6,0.1 2,0.1 1.2,0 2.6,0.5 3.4,1 2.1,1.6 2.8,2.1 3.5,5.1 z m -34.5,-12.6 v 1.7 c 0,1.4 0.6,2.2 0.6,3.2 0,0 -3.6,3.4 -3.8,5.4 l 0.6,0.2 c 1,-0.6 1.6,-2.6 3,-4 1,-0.9 3.1,-2.2 4.8,-2.2 h 0.6 c 1.3,0 3.6,1 3.6,-0.2 0,-0.9 -2.6,-1 -3.6,-1 h -0.2 c -1.6,0 -3,0.6 -4,1.3 -0.1,-1 -0.6,-1.9 -0.6,-3.2 0,-4.6 3.7,-8.6 8.4,-8.6 h 1 c 1,0 1.5,0.2 2.3,0.4 0.1,-0.2 0.4,-0.6 0.4,-0.7 0,-0.7 -1.8,-1 -2.5,-1 h -1.5 c -4.5,-8e-4 -9.2,4.4 -9.2,8.6 z m 19.1,-15.8 0.6,0.6 c 1.6,-0.9 3.4,-2.3 5.9,-2.3 h 1 c 5.5,0 10.1,4.4 10.1,9.7 v 0.6 c -1.5,-0 -2.6,-0.8 -4.6,-0.8 h -1 c -1.5,0 -4.1,0.3 -4.2,1.7 0.6,0.1 0.4,0.2 0.8,0.2 0.9,0 1.4,-0.6 3,-0.6 h 2.3 c 2.2,0 5.6,1.8 6.6,3.1 2,2.6 1.8,3.7 2.6,7.2 0.5,0 1,0.1 1,-0.4 0,-4 -2.6,-8.1 -5.2,-9.4 0,-6.9 -4.5,-12.4 -11.1,-12.4 h -1.3 c -2.3,0 -5.6,1.6 -6.5,2.9 z"}],t["AC.IC.SPECIAL NEEDS FIRE"]=[{type:"path",stroke:!1,d:"m 75.3,133.9 h 49.4 v -28.9 c -0.6,0.4 -2.4,1.2 -2.4,2 v 24.8 H 77.4 v -30 h -2.2 v 32.1 l 0,0 z M 93,129.1 h 2 c 4.2,0 7.6,-2.4 9.3,-5 l -1.3,-3.5 c -1.2,0.3 -2.1,5.2 -8.6,5.2 h -0.8 c -3.4,0 -6.3,-3.3 -7.2,-6 -0.6,-1.7 -0.6,-3.6 0,-5.4 0.8,-2.5 1.6,-2.4 2.6,-4 l -0.4,-3.4 c -3.2,0.8 -7.1,8 -5.7,12.8 1.2,4.1 5.4,9.2 10.2,9.2 z M 88.9,97.9 v 0.4 c 0,0.8 0.5,1.4 0.8,2 l 1.4,14.7 11.3,0 4.3,10.2 6.2,-2 -1,-3 -3.5,1 C 108,119.9 104.8,111.7 104,111.7 H 94.1 C 94,111 93.8,110.9 93.8,110.1 v -1.1 h 7.6 v -2.4 h -8 l -0.2,-3.7 v -2.2 c 3.4,-0.8 2.7,-6.2 -1.1,-6.2 -1.8,0 -3.2,1.4 -3.2,3.2 z m 19.9,-7.4 v 1 l -0.4,0.3 C 105.1,89.7 101,86.1 101,80.8 99.6,81.7 98.8,84.8 98.8,87.1 v 1.1 c 0,4.5 3,10.7 5,13.3 2.8,3.7 7.4,4.8 11.6,7 1.6,-0.8 9.3,-5.4 10,-6.3 1.3,-1.7 4.2,-9.8 4.2,-12.4 0,-1.9 -0.3,-8.2 -1.3,-8.8 -0.7,2.7 -0.8,4.7 -2.3,6.8 -1,1.4 -3.3,3.5 -5,4 l -0.2,-2.4 v -0.2 c 0,-3 2,-5.4 2,-8.8 0,-1 -3.4,-6.1 -4.1,-6.2 0,1.8 -0.2,4.1 -0.6,5.4 -0.3,1 -1.9,3.4 -2.9,3.4 h -0.6 c -0.4,-1.4 -1.9,-1.7 -1.9,-4.8 V 76.9 c 0,-2.3 2.6,-5.5 2.6,-7.8 l 0,-0.6 -0.3,-2.4 c -1,0.2 -1,1.9 -1.4,2.9 -0.4,1 -1,2 -1.6,2.9 -1.3,1.7 -2.6,3.4 -3.9,5.1 -2,2.8 -2.1,2.7 -1,6.1 0.6,2 1.7,4.8 1.7,7.4 z m 24.3,10.2 -3.3,-2 -1.2,1.9 3.5,2 z m -66.2,0 1,1.9 c 5,-2.7 11,-6.9 16,-10.1 2.7,-1.7 5.2,-3.4 7.8,-5.1 1.4,-0.9 2.6,-1.6 3.9,-2.6 1.8,-1.2 1.9,-1.9 2.4,-4.3 l -31.2,20.2 z"}],t["AC.IC.WILD FIRE"]=[{type:"path",stroke:!1,d:"m 110.8,139.5 c 0.2,-0.5 6.5,-6.2 7.4,-7 2.6,-2.6 5.6,-5.2 7.8,-8.1 3.9,-5.2 8,-15 8,-24 v -6.9 c 0,-1 0,-2.2 -0.8,-2.4 -0.8,3.4 -3.3,7.7 -5.1,10.1 -0.5,0.6 -7.9,8.7 -7.9,6.2 0,-4.7 2.5,-8.4 2.9,-13.4 0.2,-2.9 -0.8,-11.4 -1.4,-14.3 -0.9,0.7 -1.2,4.2 -1.7,5.7 -0.6,1.7 -1.2,3.6 -2.1,5 -0.7,1.1 -6.1,7.2 -7,7.2 -0.7,0 -1.6,-2.9 -1.6,-4.1 0,-4.7 3.3,-9.7 3.3,-13.4 v -0.6 c 0,-2.4 -1.9,-3.6 -3,-5.6 -0.6,-1 -2.7,-4.7 -3.7,-4.8 v 2.9 c 0,2.2 -0.5,5.6 -1.3,7.1 -0.4,0.8 -3.2,4.1 -4,4.1 -1,0 -3.9,-3.9 -3.9,-5.7 v -3.5 c 0,-4.1 4.1,-8.6 4.1,-12.6 v -0.2 c 0,-1.5 -0,-4 -1.4,-4.1 -0.7,8 -12.6,18.7 -12.6,21.8 0,4.4 3.9,9.2 3.9,15.9 v 2.2 c 0,0.7 -0.2,0.8 -0.2,1.4 -0.8,-0.2 -1.4,-1.3 -1.9,-2 -0.7,-0.8 -1.4,-1.1 -2.2,-1.7 -1.5,-1 -2.7,-2.3 -3.8,-3.7 -1.9,-2.5 -4.1,-6.7 -4.1,-10.9 -1.8,0.5 -3.3,6.3 -3.3,8.8 v 3.5 c 0,8.3 5.9,15.1 5.9,18.1 -3.2,-1.7 -6,-3.9 -8.5,-6.4 -1.2,-1.2 -5.5,-8.5 -6.2,-8.7 0,5.7 1.7,10.3 2.6,15.1 0.5,2.3 1.2,5.1 1.9,7.1 1,2.7 1.9,3.3 3.4,5.3 3,4 4.9,6 8.3,9.4 1.5,1.5 2.9,2.9 4.4,4.4 l 4.7,3.4 5.9,2.8 V 129.9 h -13 l 9.9,-11.5 -7.4,-0.1 9.8,-11.1 -6.6,-0.1 10.9,-17.3 0.1,-0.2 11.2,17.5 -6.1,-0 9.4,11 -7.6,0 10.1,11.7 -13.1,0.1 v 13 l 6,-3.4 z"}],t["AC.IC.HAZARDOUS MATERIALS INCIDENT"]=[{type:"path",stroke:!1,d:"m 60.7,100.6 78.5,-0 -39.3,39.2 -39.2,-39.2 z M 127.6,87.8 c 0.6,0.4 6.1,5.9 6.1,6.2 V 100 h -6.1 V 87.8 z M 115.3,75.5 c 0.6,0.4 6.1,5.9 6.1,6.2 V 100 h -6.1 V 75.5 z M 90.8,69.5 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 100 H 90.8 V 69.5 z m -12.2,12.2 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 100 H 78.6 V 81.7 z m -6.3,6 0,12.2 H 66.4 V 94.2 c 0,-0.3 -0,-0.3 -0.1,-0.4 l 6,-6 z m 30.8,-24.5 6.2,6.1 c -0.2,0.4 -0.1,-0.1 -0.1,0.4 V 100 h -6.1 V 63.3 z M 56.7,100 100,143.3 143.3,100 100,56.7 56.7,100 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 103.1,63.3 6.2,6.1 c -0.2,0.4 -0.1,-0.1 -0.1,0.4 V 100 h -6.1 V 63.3 z m -30.8,24.5 0,12.2 H 66.4 V 94.2 c 0,-0.3 -0,-0.3 -0.1,-0.4 l 6,-6 z m 6.3,-6 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 100 H 78.6 V 81.7 z m 12.2,-12.2 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 100 H 90.8 V 69.5 z m 24.5,6 c 0.6,0.4 6.1,5.9 6.1,6.2 V 100 h -6.1 V 75.5 z m 12.3,12.3 c 0.6,0.4 6.1,5.9 6.1,6.2 V 100 h -6.1 V 87.8 z m -66.9,12.8 78.5,-0 -39.3,39.2 -39.2,-39.2 z"}],t["AC.IC.CHEMICAL AGENT"]=[{type:"path",stroke:!1,d:"m 100.7,107.7 c -3.2,2e-5 -5.8,1 -7.6,3 -1.9,2 -2.8,4.7 -2.8,8.1 -2e-6,3.4 0.9,6.1 2.8,8.1 1.9,2 4.4,3 7.6,3 1.3,0 2.4,-0.2 3.6,-0.5 1.1,-0.3 2.2,-0.9 3.2,-1.5 l 0.1,-0.1 0,-0.1 0,-3 0,-0.5 -0.3,0.3 c -0.9,0.9 -1.9,1.5 -3,1.9 -1.1,0.4 -2.2,0.7 -3.4,0.7 -2.4,0 -4.1,-0.7 -5.3,-2.1 -1.2,-1.4 -1.9,-3.5 -1.9,-6.2 -4e-6,-2.7 0.6,-4.8 1.9,-6.2 1.2,-1.4 3,-2.1 5.3,-2.1 1.2,2e-5 2.3,0.2 3.4,0.6 1.1,0.4 2.1,1.1 3,1.9 l 0.3,0.3 0,-0.5 0,-3 -0.2,0 0.1,-0.2 c -1,-0.7 -2.1,-1.2 -3.2,-1.5 -1.1,-0.3 -2.3,-0.5 -3.6,-0.5 z M 92.7,64.2 h 14.7 v 33 c 0,8.2 12.9,9.6 12.4,21.8 -0.3,6.8 -7,18.6 -14.3,18.6 h -11 c -6.8,0 -14.6,-13.1 -14.3,-20 0.6,-10.6 12.4,-12.8 12.4,-20.4 v -33 z m -14.7,55 c 0,6.8 7.9,20.2 14.7,20.2 h 14.7 c 8.1,0 14.7,-13 14.7,-22 0,-11.8 -12.8,-13.6 -12.8,-22 V 60.6 H 90.8 V 95.4 c 0,7.8 -12.8,8.7 -12.8,23.9 l 0,0 z"},{type:"path",stroke:!1,fill:E.fillColor.Unknown,d:"m 92.7,64.2 0,33 c 0,7.6 -11.9,9.8 -12.4,20.4 C 79.9,124.5 87.7,137.6 94.5,137.6 l 11,0 c 7.2,0 14,-11.8 14.3,-18.6 0.5,-12.2 -12.4,-13.6 -12.4,-21.8 l 0,-33 -14.7,0 z M 100.7,107.7 c 1.3,2e-5 2.5,0.2 3.6,0.5 1.1,0.3 2.2,0.8 3.2,1.5 l -0.1,0.2 0.2,0 0,3 0,0.5 -0.3,-0.3 c -0.9,-0.9 -1.9,-1.5 -3,-1.9 -1.1,-0.4 -2.2,-0.6 -3.4,-0.6 -2.4,2e-5 -4.1,0.7 -5.3,2.1 -1.2,1.4 -1.9,3.5 -1.9,6.2 -4e-6,2.7 0.6,4.8 1.9,6.2 1.2,1.4 3,2.1 5.3,2.1 1.2,0 2.3,-0.2 3.4,-0.7 1.1,-0.4 2.1,-1.1 3,-1.9 l 0.3,-0.3 0,0.5 0,3 0,0.1 -0.1,0.1 c -1,0.7 -2.1,1.2 -3.2,1.5 -1.1,0.3 -2.3,0.5 -3.6,0.5 -3.2,0 -5.8,-1 -7.6,-3 -1.9,-2 -2.8,-4.7 -2.8,-8.1 -2e-6,-3.4 0.9,-6.1 2.8,-8.1 1.9,-2 4.4,-3 7.6,-3 z"}],t["AC.IC.CORROSIVE MATERIAL"]=[{type:"path",stroke:!1,d:"m 102.9,135.4 c 0.8,0 1.4,-0.8 1.4,-1.5 0,-0.7 -0.6,-1.5 -1.2,-1.5 H 102.3 c -0.5,0 -1.2,0.7 -1.2,1.4 v 0.3 c 0,0.8 0.6,1.4 1.4,1.4 H 102.9 z M 96.9,132.5 c 0,0.7 0.6,1.5 1.2,1.5 h 0.6 c 0.8,0 1.4,-0.8 1.4,-1.5 v -0.2 c 0,-0.7 -0.6,-1.5 -1.2,-1.5 H 98.1 c -0.6,0 -1.2,0.9 -1.2,1.5 v 0.2 z m 8.5,-0.9 c 1.3,0 2.2,-1.8 1.1,-2.8 -1,-1 -2.8,-0.2 -2.8,1.1 0,0.8 0.9,1.7 1.7,1.7 z m -6.2,-4.4 c 0,0.6 0.6,1.5 1.2,1.5 h 0.6 c 0.8,0 1.4,-0.6 1.4,-1.4 v -0.6 c 0,-0.5 -0.7,-1.2 -1.4,-1.2 h -0.3 c -0.8,0 -1.5,0.8 -1.5,1.6 z m -0.6,-4.1 c 0.6,0 1.2,-0.8 1.2,-1.5 0,-1 -0.7,-1.7 -1.7,-1.7 -0.6,0 -1.5,0.6 -1.5,1.2 v 0.6 c 0,0.7 0.7,1.4 1.2,1.4 h 0.8 V 123.1 z m 2.4,-2.7 c 0,0.6 0.7,1.5 1.2,1.5 h 0.8 c 0.4,0 1.2,-0.8 1.2,-1.2 v -0.8 c 0,-0.6 -0.8,-1.2 -1.5,-1.2 h -0.1 c -0.8,0 -1.5,0.8 -1.5,1.5 v 0.1 z m -2.7,-3.5 c 0.6,0 1.4,-0.8 1.4,-1.5 v -0.2 c 0,-2.2 -3.2,-1.8 -3.2,-0.3 v 0.8 c 0,0.7 1.1,1.2 1.8,1.2 z m 4.1,-3.6 c 0,2 3.3,1.9 3.2,-0.1 -0.1,-2.3 -3.2,-1.8 -3.2,-0.3 v 0.4 z m 4.7,-16.2 0,2.9 -3,-0.2 0.9,2.8 -1.1,0.1 -1.6,-0.9 -0.4,3 -1,-1.5 -3.3,1 -0.6,-3.2 -2,1.3 -0.6,-1.6 -2.5,0.4 1.5,-2.7 -0.6,-1.5 -22.2,0 0,12.4 59.2,0 0,-12.4 z M 94.3,85.2 v 1.4 c 0,4.4 2.1,8.7 5.7,9.4 3.7,0.8 7,-4.5 7,-8 v -1.5 c 0,-3 -2.1,-8.6 -3,-11.3 -0.5,-1.4 -3.1,-10.6 -3.9,-10.6 -0.8,0 -0.9,4.5 -1.1,5.4 -0.6,2.1 -0.9,3.2 -1.6,5.1 -0.8,2.3 -3.2,7.6 -3.2,10.1 l 0,0 z"}],t["AC.IC.HAZARDOUS WHEN WET"]=[{type:"path",stroke:!1,d:"m 60.6,100.5 78.8,-0 -39.4,39.4 L 60.6,100.5 z M 127.6,87.8 c 0.6,0.4 6.1,5.9 6.1,6.2 v 5.8 H 127.6 V 87.8 z M 115.3,75.5 c 0.6,0.4 6.1,5.9 6.1,6.2 v 18.1 h -6.1 V 75.5 z M 90.8,69.5 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 99.8 H 90.8 V 69.5 z M 78.6,81.7 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 99.8 H 78.6 V 81.7 z m -6.3,6 0,12.1 H 66.4 V 94.2 c 0,-0.3 -0,-0.3 -0.1,-0.4 l 6,-6 z m 30.8,-24.5 6.2,6.1 c -0.2,0.4 -0.1,-0.2 -0.1,0.4 v 30 h -6.1 V 63.3 z M 56.7,100 100,143.3 143.3,100 100,56.7 56.7,100 z m 41.2,25.3 c 0.2,1 0.6,1.6 1.6,1.8 l -0.8,0.6 c -1.3,-0.6 -1.3,-0.1 -1.7,-1.9 l 0.9,-0.4 z m -2.4,-1 c 0,2.9 1.3,4.9 4.2,4.9 h 0.9 c 1.9,0 3,-1 3.6,-2.3 0.9,-1.8 0.6,-3.1 -0.2,-4.6 -0.8,-1.4 -1.6,-2.3 -2.2,-3.8 -0.5,-1.2 -0.8,-3.8 -1.7,-4.4 C 99.6,118.1 95.5,122.5 95.5,124.2 z m -12.6,-9.4 c 0.4,0.9 0.4,1.4 1.5,1.7 l -0.6,0.6 C 82.2,116.7 82.6,116.5 82,115.3 l 0.9,-0.5 z m 1.6,3.8 H 86 c 2.3,0 3.7,-2.2 3.7,-4.6 0,-1.2 -1.9,-3.9 -2.6,-4.9 -0.9,-1.4 -1.2,-4.7 -2.2,-5.4 -0.2,3 -2.3,5.9 -3.6,8 -1.9,2.9 -0.4,6.9 3.1,6.9 z m 28.4,-3.8 c 0.2,1.6 0.9,1.1 1.5,2 l -0.8,0.3 c -1,-0.2 -1.7,-0.8 -1.8,-1.9 L 112.9,114.8 z m 2,-11.1 c -0.3,3.6 -2.2,5.6 -3.6,8.1 -1.7,3.1 -0.3,6.8 3.2,6.8 h 1.3 c 2.2,0 3.7,-1.7 3.7,-3.9 v -0.9 c 0,-1.4 -1.9,-3.8 -2.6,-4.9 -0.9,-1.4 -0.7,-4.4 -2,-5.2 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 112.9,114.8 c 0.2,1.6 0.9,1.1 1.5,2 l -0.8,0.3 c -1,-0.2 -1.7,-0.8 -1.8,-1.9 L 112.9,114.8 z m -30,0 c 0.4,0.9 0.4,1.4 1.5,1.7 l -0.6,0.6 C 82.2,116.7 82.6,116.5 82,115.3 l 0.9,-0.5 z m 15,10.4 c 0.2,1 0.6,1.6 1.6,1.8 l -0.8,0.6 c -1.3,-0.6 -1.3,-0.1 -1.7,-1.9 l 0.9,-0.4 z m 5.2,-62 6.2,6.1 c -0.2,0.4 -0.1,-0.2 -0.1,0.4 v 30 h -6.1 V 63.3 z m -30.8,24.5 0,12.1 H 66.4 V 94.2 c 0,-0.3 -0,-0.3 -0.1,-0.4 l 6,-6 z m 6.3,-6 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 99.8 H 78.6 V 81.7 z m 12.2,-12.2 c 0,-0.4 5.5,-5.8 6.1,-6.2 V 99.8 H 90.8 V 69.5 z m 24.5,6 c 0.6,0.4 6.1,5.9 6.1,6.2 v 18.1 h -6.1 V 75.5 z m 12.4,12.3 c 0.6,0.4 6.1,5.9 6.1,6.2 v 5.8 H 127.6 V 87.8 z m 11.7,12.6 -78.8,0 39.4,39.4 L 139.4,100.4 z M 85,103.7 c 1,0.7 1.3,4 2.2,5.4 0.6,1 2.6,3.6 2.6,4.9 0,2.4 -1.4,4.6 -3.7,4.6 l -1.5,0 c -3.5,0 -5,-4 -3.1,-6.9 1.3,-2.1 3.4,-5 3.6,-8 z m 29.8,0 c 1.3,0.9 1.2,3.8 2,5.2 0.7,1.1 2.6,3.5 2.6,4.9 l 0,0.9 c 0,2.2 -1.6,3.9 -3.7,3.9 l -1.3,0 c -3.5,0 -4.9,-3.7 -3.2,-6.8 1.4,-2.5 3.4,-4.5 3.7,-8.1 z M 100,114.1 c 0.8,0.6 1.2,3.1 1.7,4.3 0.6,1.5 1.5,2.4 2.2,3.8 0.8,1.5 1.2,2.7 0.3,4.6 -0.6,1.3 -1.7,2.3 -3.6,2.3 l -0.9,0 c -2.8,0 -4.2,-2 -4.2,-4.9 0,-1.7 4.1,-6.1 4.5,-10.1 z"}],t["AC.IC.EXPLOSIVE MATERIAL"]=[{type:"path",stroke:!1,d:"m 96.5,104.6 0,0.2 -0.2,0 0,4 0,0.2 0.2,0 3.2,0 0.2,0 0,-0.2 0,-4 0,-0.2 -0.2,0 -3.2,0 z m 2.3,-20 c -1.1,2.4e-5 -2.2,0.1 -3.2,0.5 -1,0.3 -2,0.8 -3,1.4 l -0.1,0.1 0,0.1 0,3 0,0.4 0.3,-0.2 c 1,-0.7 2,-1.2 2.9,-1.6 0.9,-0.4 1.8,-0.5 2.6,-0.5 1.1,2.1e-5 2,0.3 2.6,0.8 0.7,0.5 1,1.2 1,2.1 -10e-6,0.5 -0.1,1 -0.4,1.4 -0.2,0.5 -0.7,1 -1.3,1.5 l -0,0 -1.4,1.4 c -1,0.9 -1.6,1.7 -1.9,2.5 -0.3,0.7 -0.5,1.6 -0.5,2.7 l 0,2.4 0,0.2 0.2,0 3,0 0,-0.2 0.2,0 0,-1.9 c -8e-6,-0.5 0,-1 0,-1.3 0,-0.3 0.1,-0.6 0.1,-0.8 0.1,-0.2 0.2,-0.5 0.4,-0.8 0.2,-0.3 0.5,-0.7 1,-1.1 l 1.4,-1.4 c 1,-0.9 1.6,-1.7 2,-2.5 0.4,-0.8 0.6,-1.6 0.6,-2.4 -2e-5,-1.7 -0.6,-3.1 -1.8,-4.2 -1.2,-1.1 -2.8,-1.6 -4.8,-1.6 z m 4.8,-31.1 -1.5,4.5 -4.3,12.9 -4.5,-7 -1.6,-2.5 -0.3,2.9 -1.3,14.4 -9.5,-10.7 -2.8,-3.2 1.1,4.1 3.4,12.9 -13.1,-0.7 -0.7,-0 -0.3,0.6 -0.1,0.2 -0.4,0.8 0.7,0.5 11.3,8.1 -20.1,1.4 -5.6,0.4 5.4,1.6 18,5.3 -12.3,7.1 -0.8,0.4 0.3,0.8 0.1,0.2 0.3,0.7 0.8,-0.1 16.1,-2 -4.8,8.3 -1.5,2.6 2.7,-1.1 8.8,-3.7 -3.4,14.5 -1.1,4.5 2.8,-3.7 8.9,-11.6 5,19.2 0.2,0.8 0.8,0 0.4,0 0.9,0 0.1,-1 0.9,-18.7 9.2,11.2 2.6,3.2 -0.9,-4 -3.3,-15.2 10.6,5.9 4.7,2.6 -3.4,-4.1 -5.5,-6.6 15.6,4.4 4,1.2 -3.1,-2.9 -10.7,-9.9 13.7,-2.1 4.6,-0.7 -4.5,-1.2 -15.5,-4.3 18.9,-9.6 4.7,-2.4 -5.2,0.5 -17.1,1.6 6.7,-10.8 2,-3.2 -3.3,1.8 -14.6,7.9 5.2,-16.5 1.7,-5.5 -3.5,4.5 -10.6,14 -1.7,-18.8 -0.4,-4.8 z m -1.1,9.7 1.5,16.6 0.2,2.6 1.6,-2 8.7,-11.5 -4.2,13.4 -0.8,2.4 2.2,-1.2 13.4,-7.3 -5.8,9.3 -1.1,1.7 2,-0.2 13.9,-1.3 -16.5,8.4 -2.3,1.2 2.5,0.7 13.5,3.7 -11.2,1.7 -2,0.3 1.5,1.4 9.1,8.4 -14.6,-4.2 -3.1,-0.9 2.1,2.5 4.2,5 -7.8,-4.3 -1.9,-1.1 0.5,2.2 2.9,13.3 -8.2,-10 -1.6,-2 -0.1,2.6 -0.8,16.1 -4.2,-16.3 -0.5,-2 -1.2,1.6 -7.3,9.5 2.8,-11.9 0.4,-1.9 -1.8,0.7 -7.9,3.3 4.3,-7.4 1,-1.7 -2,0.2 -13.9,1.7 10.3,-6 0.5,-0.3 0,-0.6 0,-0.3 0,-0.8 -0.7,-0.2 -14.5,-4.2 17.3,-1.2 2.8,-0.2 -2.3,-1.6 -11,-8 11.5,0.6 1.4,0.1 -0.3,-1.3 -2.7,-10.1 8.2,9.3 1.5,1.8 0.2,-2.3 1.3,-13.8 4,6.3 1.1,1.8 0.7,-2 3.4,-10.3 z"
},{type:"path",stroke:!1,fill:!!R&&U,d:"M 102.5 63.2 L 99 73.5 L 98.4 75.5 L 97.3 73.7 L 93.2 67.4 L 91.9 81.3 L 91.7 83.6 L 90.2 81.8 L 82 72.5 L 84.7 82.7 L 85.1 84 L 83.7 83.9 L 72.2 83.4 L 83.2 91.3 L 85.5 93 L 82.7 93.2 L 65.4 94.3 L 79.9 98.5 L 80.7 98.8 L 80.7 99.5 L 80.7 99.8 L 80.7 100.3 L 80.2 100.7 L 69.8 106.6 L 83.8 104.9 L 85.8 104.7 L 84.8 106.4 L 80.4 113.8 L 88.3 110.6 L 90.1 109.8 L 89.7 111.7 L 86.9 123.6 L 94.2 114.1 L 95.5 112.5 L 96 114.4 L 100.2 130.8 L 101 114.6 L 101.2 112 L 102.8 114 L 111 124 L 108.1 110.7 L 107.6 108.5 L 109.6 109.6 L 117.3 113.9 L 113.2 108.9 L 111.1 106.4 L 114.3 107.3 L 128.9 111.5 L 119.7 103.1 L 118.2 101.7 L 120.3 101.3 L 131.4 99.6 L 117.9 95.9 L 115.4 95.2 L 117.8 94 L 134.3 85.6 L 120.3 86.9 L 118.3 87.1 L 119.4 85.4 L 125.2 76.1 L 111.8 83.3 L 109.6 84.5 L 110.3 82.2 L 114.5 68.8 L 105.8 80.3 L 104.3 82.3 L 104 79.8 L 102.5 63.2 z M 98.8 84.5 C 100.8 84.5 102.4 85.1 103.6 86.1 C 104.8 87.2 105.5 88.6 105.5 90.3 C 105.5 91.2 105.3 92 104.9 92.7 C 104.5 93.5 103.8 94.3 102.8 95.2 L 101.5 96.6 C 101 97.1 100.6 97.4 100.4 97.7 C 100.2 98 100.1 98.2 100 98.5 C 100 98.7 99.9 98.9 99.9 99.2 C 99.8 99.5 99.8 100 99.8 100.5 L 99.8 102.4 L 99.7 102.4 L 99.7 102.7 L 96.6 102.7 L 96.4 102.7 L 96.4 102.4 L 96.4 100 C 96.4 98.9 96.6 98 96.9 97.3 C 97.2 96.6 97.9 95.8 98.8 94.8 L 100.2 93.4 C 100.8 92.9 101.2 92.4 101.5 91.9 C 101.7 91.4 101.9 91 101.9 90.5 C 101.9 89.6 101.5 88.9 100.9 88.3 C 100.2 87.8 99.4 87.5 98.3 87.5 C 97.5 87.5 96.6 87.7 95.7 88.1 C 94.8 88.5 93.8 89 92.8 89.7 L 92.5 89.9 L 92.5 89.5 L 92.5 86.5 L 92.5 86.4 L 92.6 86.3 C 93.6 85.7 94.6 85.3 95.6 85 C 96.7 84.7 97.7 84.5 98.8 84.5 z M 96.5 104.6 L 99.8 104.6 L 99.9 104.6 L 99.9 104.8 L 99.9 108.8 L 99.9 109 L 99.8 109 L 96.5 109 L 96.3 109 L 96.3 108.8 L 96.3 104.8 L 96.5 104.8 L 96.5 104.6 z"}],t["AC.IC.FLAMMABLE GAS"]=[{type:"path",stroke:!1,d:"m 93.3,82.5 c 0,-4.3 13.8,-4.3 13.8,0 v 55.6 c 0,1.3 -4.4,1.2 -5.9,1.2 h -2 c -1.5,0 -5.9,0.1 -5.9,-1.2 V 82.5 l 4e-4,0 z m 5.3,-20.6 h -6.5 v 2.9 h 6.3 v 3.2 h -3.7 v 2 h 3.7 v 5.3 h -4.6 v 4.5 c -1.1,0.3 -2,1.6 -2,3 v 54.8 c 0,3.3 3.7,3.2 7.1,3.2 h 2.4 c 3.4,0 7.1,0.2 7.1,-3.2 V 83.1 c 0,-2.8 -1.8,-2.8 -1.8,-3.7 v -4.1 h -4.7 v -10.4 h 6.3 v -3 h -6.7 v -2.5 h -2.9 v 2.5 l 0,0 z m 21.8,32.3 v 0.6 c 0,2.2 2.3,5.1 1.6,8.1 -1.3,-0.3 -3.1,-2 -3.8,-3 -0.3,-0.4 -0.9,-1.7 -1.2,-2.2 -0.4,-0.9 -0.4,-2.3 -0.7,-2.8 -1.1,0.8 -1.6,3.5 -1.6,5.5 v 0.2 c 0,3.2 2.4,7.5 3.8,9.6 2,3 6.3,3.3 8.4,5.1 1.6,-0.9 6.9,-3.7 7.7,-4.9 0.9,-1.2 3.2,-7.4 3,-9.6 l -0.7,-5.9 h -0.4 c -0,3.2 -2.7,7.6 -5.5,7.9 v -2 c 0,-1.7 1.4,-4 1.4,-6.1 v -0.2 c 0,-0.9 -2.4,-4.4 -3.2,-4.7 0,3.4 -0.3,5.5 -2.5,6.7 -0.8,-0.7 -1.8,-1.6 -1.8,-3.1 v -1.2 c 0,-2.1 2,-4.1 2,-6.1 0,-0.9 -0.1,-1.6 -0.6,-2 -0.9,3.8 -5.9,8.9 -5.9,10.2 z m -52.7,0 v 0.4 c 0,1.2 1.8,4.3 1.8,6.1 v 2.2 c -2.4,-0.2 -5.7,-5 -5.7,-8.1 -1.7,1.1 -1.5,4.3 -1.4,6.7 0.1,2.4 1.3,4.7 2.2,6.3 1.3,2.6 1.6,2.9 4,4.5 0.6,0.4 5.3,2.8 5.9,2.8 1.2,0 6.8,-3.9 7.5,-4.7 0.9,-1 3.3,-7.3 3.1,-9.1 l -0.6,-6.5 h -0.4 c -0.5,2.3 -0.3,3.3 -1.6,5 -0.6,0.8 -2.7,2.7 -3.8,2.8 0,-0.9 -0.2,-0.7 -0.2,-1.4 0,-1.8 1.4,-4.3 1.7,-6.6 0.1,-1 -2.6,-4.6 -3.3,-5 0.4,2 -0.8,6.5 -2.4,6.5 h -0.2 c -0.9,0 -1.8,-2.2 -1.8,-3.4 0,-3.9 2.6,-4.5 1.6,-8.8 -0,0 -2.2,4.5 -2.9,5.4 -0.6,0.6 -3.5,4.3 -3.5,4.9 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 93.3,82.5 c 0,-4.3 13.8,-4.3 13.8,0 v 55.6 c 0,1.3 -4.4,1.2 -5.9,1.2 h -2 c -1.5,0 -5.9,0.1 -5.9,-1.2 V 82.5 l 4e-4,0 z"}],t["AC.IC.FLAMMABLE LIQUID"]=[{type:"path",stroke:!1,d:"m 100.1,135.4 c -7.4,0 -11.3,-5.4 -13.1,-11.1 -2.1,-6.7 -2.4,-14.4 0.8,-20.2 5.9,-10.6 10.7,-21.6 11.9,-36.7 4,4.6 3.6,17.4 6.3,23.9 2.6,6.5 8.9,13.4 8.9,21 v 1.7 c 0,10 -4.5,21.3 -14.2,21.3 h -0.7 v 0 z m -0.6,1.7 h 1.9 c 10.1,0 15.4,-11.7 15.4,-21.9 v -3 c 0,-9.5 -7.7,-15.8 -9.9,-24.1 -2.4,-8.9 -1.7,-21.2 -9.1,-25.1 0,8.6 -1.3,16 -3.6,22.4 -1.2,3.3 -2.4,6.2 -3.6,9.5 -1.2,2.7 -3.1,5.8 -4.5,8.6 -1.4,2.7 -3,6.1 -2.6,10.5 0.4,4.4 0.6,7.6 1.8,11.3 2,5.9 6.7,11.9 14.3,11.9 z M 122,87 v 0.2 c 0,2.3 2.4,5.5 1.7,8.6 -1.3,-0.1 -3.5,-2.2 -4.1,-3.2 -0.5,-0.9 -0.9,-1.3 -1.2,-2.4 -0.3,-0.7 -0.6,-2.6 -0.8,-3 -1.2,0.9 -1.7,4 -1.7,6.1 0,3.2 2.6,8.4 4,10.4 1,1.3 2.5,2.3 4.1,3.1 0.6,0.3 4.8,2.4 5,2.4 0.9,0 7.6,-4.4 8.2,-5.1 0.9,-1.1 3.5,-8 3.3,-10.1 l -0.7,-6.8 h -0.4 c -0.1,3.5 -2.8,8.2 -5.9,8.4 0,0 0.3,-3.5 0.5,-4.4 0.3,-1.3 1,-2.9 1,-4.3 V 86.8 c 0,-1 -2.7,-4.6 -3.4,-5.1 0,3.7 -0.2,6 -2.7,7.2 -0.7,-0.6 -1.9,-1.7 -1.9,-3 v -1.4 c 0,-2.3 2.1,-4.7 2.1,-6.5 l 0,-0.2 -0.3,-1.9 c -1,0.2 -1.1,2 -1.5,2.9 -0.5,0.9 -1.2,1.9 -1.8,2.6 -0.9,1.2 -3.5,4.1 -3.5,5.7 z m -56.6,0 c 0,1.3 1.9,4.7 1.9,7 v 1.9 c -2.6,-0.2 -6.1,-5.2 -6.1,-8.6 -3.4,2.4 -0.7,11.4 0.9,14.1 1.5,2.6 1.8,3 4.4,4.7 0.4,0.3 6.1,3.1 6.2,3.1 1.3,0 4.1,-2.5 5.3,-3.2 2.5,-1.2 2.9,-1.7 4.2,-4.3 0.4,-0.9 1.6,-5.4 1.9,-6.6 0.4,-2.1 -0.5,-5.8 -0.5,-7.9 h -0.5 c -0.3,3.5 -2.9,8.4 -5.9,8.4 -0,-0.9 -0.2,-0.5 -0.2,-1.2 0,-2 1.5,-4.9 1.8,-7.1 0.2,-1.2 -2.7,-5.2 -3.5,-5.4 1,2.1 -1.1,6.1 -2.7,7 -0.9,-0.6 -1.9,-2.2 -1.9,-3.6 v -0.4 c 0,-3.7 2.7,-4.6 1.7,-9.1 -0.5,0.4 -0.8,2 -1.4,3 -0.7,1 -1,1.7 -1.8,2.7 -0.8,1 -3.6,4.2 -3.6,5.5 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 100.1,135.4 c -7.4,0 -11.3,-5.4 -13.1,-11.1 -2.1,-6.7 -2.4,-14.4 0.8,-20.2 5.9,-10.6 10.7,-21.6 11.9,-36.7 4,4.6 3.6,17.4 6.3,23.9 2.6,6.5 8.9,13.4 8.9,21 v 1.7 c 0,10 -4.5,21.3 -14.2,21.3 h -0.7 v 0 z"}],t["AC.IC.FLAMMABLE SOLID"]=[{type:"path",stroke:!1,d:"m 68.6,102 c 0,-2 1.9,-4.2 1.9,-6.3 v -1.5 c 0,-0.6 -0.1,-0.4 -0.4,-0.7 -0.8,3.7 -6.1,9.1 -6.1,10.4 0,1.6 1.9,4.6 1.9,8.2 -2.6,-0.2 -5.9,-4.9 -5.9,-8 -0.8,0.9 -1.5,2.6 -1.5,4.3 0,4.4 1.7,8.1 3.5,10.6 0.8,1.2 7,5.2 8.7,5.2 1.1,0 6.7,-3.7 7.3,-4.4 0.9,-1.2 3.2,-6.8 3.2,-8.6 0,-1.6 -0,-6.6 -0.9,-7.2 -1.1,4.8 -1.5,5.9 -5.4,8.1 0,-4.3 1.3,-5.7 1.3,-8.2 v -0.4 c 0,-0.1 -2.8,-4.4 -3,-4.6 0,2.4 -0.7,6.7 -2.6,6.7 -1,8e-4 -2,-2.4 -2,-3.7 z m 60.3,-0.4 c 0,-1.7 2.2,-4.5 2.2,-6.3 0,-0.7 -0.2,-1.6 -0.7,-1.9 -0.9,3.7 -5.9,8.9 -5.9,10.2 v 0.4 c 0,1.9 1.5,3.7 1.5,6.1 v 2.2 c -2.3,-0.6 -5.6,-4.9 -5.7,-8 -1,0.7 -1.5,3 -1.5,4.8 v 1.1 c 0,2.8 2.5,7.7 3.8,9.5 2,2.7 6.4,3.1 8.4,4.8 2.1,-1.1 3.1,-1.8 5.1,-2.9 2.6,-1.6 2.2,-1.5 3.5,-4.3 0.7,-1.4 1.7,-4.5 1.8,-6.2 0.1,-1.5 -0.1,-6.4 -0.9,-7 -0.8,3.5 -2.1,7.1 -5.4,8 -0,-0.7 -0.2,-0.7 -0.2,-1.5 v -0.2 c 0,-1.8 1.7,-4.9 1.5,-6.4 -0.1,-0.8 -2.5,-4.8 -3,-5.1 0,2.8 -0.5,6.7 -3,6.7 -0.4,-1.3 -1.5,-1 -1.5,-3.9 z m -35.6,1.9 v -20 l 20,-0.4 v 19.4 l -20,1 z m -13.9,-7.6 0,-16.8 10.8,4 v 19.8 c -1.2,-0.7 -10.9,-6.2 -10.9,-7 z m 1.5,-18.4 c 5.7,0 11.4,0 17.2,0 2.1,0 12.1,3.1 13.2,3.9 l -3.7,0.3 H 92.6 c -0.9,0 -11.1,-3.7 -11.7,-4.1 z m -3.5,-1.5 0,14.7 -0.3,6.7 c 2.2,1.2 5.3,3 7.5,4.5 1.9,1.2 5.5,4 8.1,4 7.6,0 15.3,-1.1 23.1,-1.1 l -0,-23.6 c -1,-0.5 -14.8,-5.4 -15.2,-5.4 l -3.9,-0.1 -19.3,0.4 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 80.9,77.5 c 5.7,0 11.4,0 17.2,0 2.1,0 12.1,3.1 13.2,3.9 l -3.7,0.3 H 92.6 c -0.9,0 -11.1,-3.7 -11.7,-4.1 z m -1.5,18.4 0,-16.8 10.8,4 v 19.8 c -1.2,-0.7 -10.9,-6.2 -10.9,-7 z m 13.9,7.6 v -20 l 20,-0.4 v 19.4 l -20,1 z"}],t["AC.IC.NON-FLAMMABLE GAS"]=[{type:"path",stroke:!1,d:"m 92.7,81.3 c 0,-4.6 14.7,-4.6 14.7,0 v 59.4 c 0,1.4 -4.7,1.3 -6.3,1.3 h -2.1 c -1.6,0 -6.3,0.1 -6.3,-1.3 V 81.3 z m 5.7,-22 h -7 v 3.2 h 6.7 v 3.3 h -4 v 2.1 h 4 v 5.7 h -4.8 v 4.8 c -1.1,0.3 -2.1,1.7 -2.1,3.1 v 58.6 c 0,3.5 4,3.3 7.6,3.3 h 2.5 c 3.6,0 7.6,0.2 7.6,-3.3 V 81.9 c 0,-3 -1.9,-3 -1.9,-4 v -4.4 h -5 v -11.1 h 6.7 v -3.1 h -7.2 v -2.7 h -3.1 v 2.7 l -4e-4,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 92.7,81.3 c 0,-4.6 14.7,-4.6 14.7,0 v 59.4 c 0,1.4 -4.7,1.3 -6.3,1.3 h -2.1 c -1.6,0 -6.3,0.1 -6.3,-1.3 V 81.3 z"}],t["AC.IC.ORGANIC PEROXIDE"]=[{type:"path",stroke:!1,d:"m 132.1,128.2 v 6.2 l -36.6,2.2 v -6.7 l 0.6,0.1 36,-1.7 z m -63.8,-11.1 c 2.6,1.7 26.1,12.1 26.1,13.2 v 5.9 l -0.1,0.2 -26,-14.7 v -4.6 z m 61.1,10 c -4.7,0 -33,2.1 -34.6,1.5 -1.8,-0.7 -23.8,-11.4 -24.4,-12 3.8,0 7.5,0 11.3,0 2.9,0 8.8,-0.8 10,1.1 l -9,0.6 2.1,0.7 v 0.4 h -1.2 l -1.8,0.2 c 2,1.3 18.3,5.2 22.4,5.2 h 1.9 c 4.8,0 9.2,-1.3 13,-1.4 0.7,0 9.9,3.3 10.4,3.7 z m -25.4,-23.2 1.1,9.4 5.4,-6.8 -2.5,8.2 7.7,-4.3 -3.7,5.9 8.4,-0.8 -9.2,4.7 8.1,2.6 -14.4,1.7 c -3.3,0.2 -19,-3.7 -20.5,-4.8 l 10.3,-0.6 -6.2,-4.5 6.8,0.1 -1.7,-5.9 5.1,5.2 0.7,-7.5 2.6,3.9 2.1,-6.6 z m 0.7,-2.2 -0.1,-0.6 h -0.3 l -1.8,6.2 -0.4,-0 -2.4,-3.7 -0,2.1 -0.7,-1.1 -0.6,6.2 -4.9,-5.4 0.6,2.6 -1.5,-1.2 1.8,6.2 -2.5,0 -4,-0.2 1.5,1.1 -2.4,-0.1 1.5,1.4 h -21.3 c -0.1,0.5 -0.2,0.5 -0.2,1.1 v 5 c 0,1.6 4.8,3.7 6.2,4.4 2.3,1.3 4.6,2.4 6.9,3.8 4.4,2.7 9.2,5 13.7,7.6 1.8,1.1 6.8,0.5 9.6,0.2 2.8,-0.3 7.2,-0.2 9.9,-0.7 2.8,-0.5 7,-0.4 9.9,-0.7 2.7,-0.4 7.4,-0.6 10,-0.7 v -7.9 c 0,-0.9 -5.3,-2.4 -6.4,-2.8 -1.6,-0.5 -5.7,-1.9 -6.8,-2.6 l 2.9,-0.3 -8.4,-2.2 0,-0.4 9.2,-4.7 -1.5,0.2 1.7,-1.1 -10,1 3.9,-6.6 -8.1,4.7 2.9,-10 -6.4,8.4 -1.1,-11.1 -0.6,1.9 z m 1.1,-6.2 c -5.6,0 -9.6,-3.4 -9.6,-9 v -1.1 c 0,-4.8 9,-12.5 9,-21.1 2.8,3.2 2.2,7.6 4.3,11 1.2,1.9 5.3,7.8 5.3,9.9 v 1.1 c 0,5.3 -3.7,9.2 -9,9.2 z m -10.9,-10 v 1.1 c 0,13.7 21.1,13.2 21.1,0.8 v -2.1 c 0,-3.5 -4.5,-8.3 -5.9,-11.7 -2.2,-5.1 -1.1,-8.8 -6.2,-11.6 0,11.2 -9,17.6 -9,23.5 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 105.7,95.5 c -5.6,0 -9.6,-3.4 -9.6,-9 v -1.1 c 0,-4.8 9,-12.5 9,-21.1 2.8,3.2 2.2,7.6 4.3,11 1.2,1.9 5.3,7.8 5.3,9.9 v 1.1 c 0,5.3 -3.7,9.2 -9,9.2 z m -1.8,8.4 1.1,9.4 5.4,-6.8 -2.5,8.2 7.7,-4.3 -3.7,5.9 8.4,-0.8 -9.2,4.7 8.1,2.6 -14.4,1.7 c -3.3,0.2 -19,-3.7 -20.5,-4.8 l 10.3,-0.6 -6.2,-4.5 6.8,0.1 -1.7,-5.9 5.1,5.2 0.7,-7.5 2.6,3.9 2.1,-6.6 z m -35.6,13.2 c 2.6,1.7 26.1,12.1 26.1,13.2 v 5.9 l -0.1,0.2 -26,-14.7 v -4.6 z m 63.8,11.1 v 6.2 l -36.6,2.2 v -6.7 l 0.6,0.1 36,-1.7 z m -2.7,-1.1 c -4.7,0 -33,2.1 -34.6,1.5 -1.8,-0.7 -23.8,-11.4 -24.4,-12 3.8,0 7.5,0 11.3,0 2.9,0 8.8,-0.8 10,1.1 l -9,0.6 2.1,0.7 v 0.4 h -1.2 l -1.8,0.2 c 2,1.3 18.3,5.2 22.4,5.2 h 1.9 c 4.8,0 9.2,-1.3 13,-1.4 0.7,0 9.9,3.3 10.4,3.7 z"}],t["AC.IC.OXIDIZER"]=[{type:"path",stroke:!1,d:"m 80.9,135.3 0,0.2 0,4.2 0,0.2 0.2,0 40.7,0 0.2,0 0,-0.2 0,-4.2 0,-0.2 -0.2,0 -40.7,0 -0.2,0 z m 6.5,-20.7 c 0,-7.4 6.1,-14 13.4,-14 h 1.1 c 7.5,0 13.6,6.6 13.6,14 0,7.1 -6.2,13.9 -13.2,13.9 h -1.9 c -6.8,-0 -13,-6.8 -13,-13.9 z m 12.8,-35.9 c -0.7,0 -2.1,-2.1 -2.3,-2.9 -0.3,-1.2 -0.4,-3 0,-4.4 0.5,-2.1 2.8,-5.9 2.8,-7.5 0,-1.1 -0.1,-3 -1.3,-3.1 -1,4.4 -2.1,4.9 -4.1,8 -1,1.5 -4.7,5.8 -4.7,7.3 v 0.4 c 0,2.4 3.1,8.1 2.7,10.5 l -0.2,1.7 c -3.5,-0.8 -8.1,-7.3 -8.1,-12 -1.4,0.1 -2.5,4.4 -2.5,6.1 v 2.9 c 0,5.7 3.3,8.3 4.2,12 -2.7,-1.4 -4,-2.2 -5.9,-4.4 -1.1,-1.2 -3.7,-5.6 -4.1,-5.9 -1.1,2.4 1.7,10.3 2.4,12.1 0.7,1.7 1.4,3.5 2.3,5 1.1,1.8 2.2,2.6 3.2,4.1 0,1.7 -0.5,2.4 -0.6,4.7 -0,1.8 -0,2.6 0.2,4.6 0.2,2.1 2.1,6.1 3.2,7.3 2.4,2.6 2.4,2.8 5.6,4.8 2,1.3 4.9,2.2 8.1,2.2 h 0.6 c 6.4,0 11.4,-3.5 14.2,-7.2 3.8,-5.2 3.8,-9.9 2.2,-16.7 3.5,-6.6 5.9,-9.3 5.9,-19.7 v -0.4 l -0.4,-4 c -0.1,0 -3.3,6.2 -3.8,7 -1,1.5 -3.7,4.8 -5.7,5 0.1,-3.2 2.1,-6.2 2.1,-9.4 v -2.2 l -1.1,-8 c -1,0.7 -1.5,5.9 -3,7.7 -0.4,0.5 -5.6,5.5 -5.6,3.6 v -1.7 c 0,-3.1 2.1,-6.3 2.1,-9 v -1.3 c 0,-0.8 -3.9,-6.5 -4.6,-6.9 0,2.3 -0.2,4.4 -0.7,6.2 -0.3,1.1 -2,3.7 -3,3.7 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 87.4,114.5 c 0,-7.4 6.1,-14 13.4,-14 h 1.1 c 7.5,0 13.6,6.6 13.6,14 0,7.1 -6.2,13.9 -13.2,13.9 h -1.9 c -6.8,-0 -13,-6.8 -13,-13.9 z"}],t["AC.IC.RADIOACTIVE MATERIAL"]=[{type:"path",stroke:!1,d:"m 83.7,130.4 c -10.1,-5.6 -16.6,-17 -16.4,-28.5 l 17.8,-0 c -0.2,5 3.1,10.7 7.5,13.1 l -9,15.4 z m 49.1,-28.2 c 0.2,11.5 -6.4,22.9 -16.4,28.5 l -9,-15.4 c 4.4,-2.4 7.7,-8.1 7.6,-13.1 l 17.8,0 z M 83.5,73.8 c 9.9,-5.9 23,-5.9 32.9,0 l -8.9,15.5 c -4.3,-2.6 -10.9,-2.6 -15.1,0 l -8.9,-15.5 z m 26.5,28.5 c 0,5.5 -4.4,9.9 -9.9,9.9 -5.5,0 -9.9,-4.4 -9.9,-9.9 0,-5.5 4.4,-9.9 9.9,-9.9 5.5,0 9.9,4.4 9.9,9.9 z"}],t["AC.IC.SPONTANEOUSLY COMBUSTIBLE MATERIAL"]=[{type:"path",stroke:!1,d:"m 101.2,128.4 -2.1,0 0,12.6 2.1,0 z m 26.5,0.6 -8.7,-8.6 -1.2,1.2 8.7,8.7 z m -45,-7.5 -1.3,-1.3 -8.8,8.8 1.3,1.4 z m 55.5,-19.7 -12.2,0 0,1.9 12.2,0 z m -63.3,0 -13.1,0 0,1.9 12.8,0 z m 52.8,-25.3 -1.3,-1.2 -9,8.7 1.5,1.5 z m -46.1,9.1 1.4,-1.5 -9.3,-9.2 -0,0.2 -1.2,1.3 z m 19.5,-26.5 -2.1,0 0,9.7 2.1,0 z M 91.7,88 v 0.6 c 0,0.5 1.4,4.3 1.7,5.1 0.7,2.2 0.7,3.4 0.7,5.7 -1.2,-0.1 -4.4,-3 -5.1,-4 -1.7,-2.5 -1.7,-3.4 -2.5,-6.7 -0.9,0.7 -1.9,3.8 -1.9,5.5 v 2.3 c 0,5.6 3.6,8.4 3.8,11.1 -0.9,-0.2 -4.8,-3.2 -5.4,-3.8 -0.7,-0.8 -3.3,-5.3 -3.8,-5.4 0,3.9 1.1,6.9 2.1,9.7 0.6,1.5 1.2,2.9 1.7,4.2 0.8,2.2 1.4,2 2.6,3.5 2.9,3.6 9.4,8.3 15.7,8.3 h 0.8 c 2.2,0 6.4,-1.7 7.9,-2.6 2.4,-1.3 4.5,-2.7 6,-4.8 2.8,-3.8 5.3,-9.3 5.3,-16 v -2.7 l -0.2,-2.3 h -0.4 c -1.1,4.7 -4.2,8.4 -8,10.5 0,-3.6 1.3,-5.3 1.9,-8.4 0.4,-2.4 -1,-6.9 -1,-9.2 -0.4,0.3 -1.2,5.4 -2.5,7 -0.3,0.4 -5.1,5.2 -5.1,3.1 v -2.1 c 0,-3 1.9,-4.8 1.9,-8.2 0,-0.8 -3.5,-6 -4.1,-6.3 l 0.1,0.9 c 0,1.2 -0.4,4.1 -0.7,5 -0.2,0.5 -2.3,3 -2.6,3 -1.2,0 -2.5,-2.9 -2.5,-4.4 v -1.1 c 0,-2.9 2.8,-6.1 2.6,-8 l -0.5,-2.9 c -0.5,0.4 -1.2,3 -1.6,3.9 -0.6,1.3 -1.4,2.2 -2.2,3.2 C 95.4,82.4 91.7,87.1 91.7,88 z"}];t["AC.IC.UNEXPLODED ORDNANCE"]=S("UXO");t["AC.IC.TOXIC INFECTIOUS MATERIAL"]=[{type:"path",stroke:!1,d:"m 104.6,116.2 c 0,-3.6 0.9,-4.6 1.5,-7.3 l -2.5,-1.2 c -2.4,2.1 -4.4,1.6 -6.8,0 l -2.5,1.4 c 0.2,2.6 2,3.9 1.5,8.7 -0.4,3.1 -1.1,5.8 -2.6,7.8 -2.9,3.9 -7,7.4 -13.7,7.4 h -1 c -4.7,0 -10.2,-3.2 -12,-6 l -1.2,0.6 c 3.3,4.9 11.4,10 19.8,10 h 0.2 c 6.4,0 10.9,-2.7 14.8,-5.3 3.7,2.5 7.6,5 13.8,5 h 3 c 3.8,0 8.2,-1.6 10.6,-3.2 1.8,-1.2 6.7,-4.5 7.2,-6.6 -1.1,-0.3 -0.5,-0.5 -1.3,-0.5 -0.5,0 -1.7,1.9 -2.2,2.3 -0.8,0.6 -1.8,1.1 -2.6,1.6 -1.4,0.9 -4.7,1.8 -7,1.8 h -1.8 c -7.9,0 -15.3,-7.7 -15.3,-15.8 v -0.8 z m 2.3,3.5 2.5,4.3 c 3.2,-0.8 7.7,-5.2 9.3,-7.8 2.2,-3.7 3.5,-7.8 3.5,-13.8 h -5.5 c 0.1,5.2 -0.1,7.2 -2.5,10.8 -1.2,1.8 -1.7,2.1 -3.2,3.6 -1,1 -3.6,2.2 -4.1,2.9 z m -28.6,-13.8 c 0,7.4 6.8,16.7 12.5,18 l 2.3,-4.5 c -6.5,-3.4 -9.5,-8 -9.5,-17.1 h -5.3 v 3.5 z m -2.5,-17 v 1 c 0,0.5 -5,3.2 -5.8,3.8 -1.6,1.1 -3.5,3.2 -4.7,4.8 -2.8,3.6 -4.8,8.1 -4.8,14.2 0,4.4 1,6 1.8,9.4 l 1.2,-0.6 c -0.1,-1.5 -0.8,-2.3 -0.8,-4 v -2 c 0,-7.8 7.9,-15.6 16,-15.6 h 1.8 c 2.6,0 5.9,1.3 7.5,2.2 2.2,1.3 3.6,3.6 5.3,4.8 l 2.3,-1 v -1.8 c 0,-2 1.6,-3.9 3.3,-4.3 v -3 c -7.6,-0.2 -15.3,-7.8 -15.3,-15.5 v -1.5 c 0,-4.1 2.1,-8.6 4.2,-10.6 1.3,-1.2 2.5,-2.3 4,-3.2 0.8,-0.5 5.1,-1.5 5.1,-2.5 v -1 c -6.6,1.6 -11.7,3.8 -15.4,8.5 -4.3,5.5 -5.7,9 -5.7,17.9 l 0,0 z m 27.6,-25.4 c 0,0.6 4.2,2.1 5,2.5 1.2,0.6 3.5,2.4 4.2,3.5 2.1,2.9 4.3,6 4.3,11 0,8.2 -7.4,16.3 -15.6,16.3 v 3 c 2.3,0.2 4.4,3.4 3.3,5.8 0.6,0.2 2.5,1.2 2.5,1.2 0.7,0 5,-7 14.3,-7 h 0.2 c 4.5,0 9,2.6 11.1,5 1.7,1.9 5.3,7.6 4.8,11.4 l -0.8,5.5 1.2,0.6 c 0.1,-0.9 0.8,-2.3 1.1,-3.6 0.3,-1.2 0.4,-3 0.4,-4.4 v -3.3 c 0,-8.4 -8.3,-18.8 -15,-20.3 0,-5 0.4,-6.4 -0.9,-10.9 -0.9,-2.8 -2.6,-6.4 -4.3,-8.3 -5.1,-5.3 -7.5,-7 -15.9,-9 v 1 l -4e-4,0 z m -15.8,22.6 2.8,4.8 c 3,-1.6 4.8,-3.3 9.5,-3.3 h 0.5 c 5.8,0 6.9,2.6 9.7,3.2 l 2.6,-4.7 c -9.5,-5 -15.7,-5 -25.1,0 z"}],t["AC.IC.TOXIC GAS"]=[{type:"path",stroke:!1,fill:!!R&&U,d:"m 90.2,102.3 c 0.6,-1.9 5.7,-1.9 11.3,-0 5.6,1.9 9.6,4.9 9,6.8 -0.6,1.9 -5.7,1.9 -11.3,0 -5.6,-1.9 -9.6,-4.9 -9,-6.8 z m 7.7,-22.2 c 10e-7,3.7 -1.7,6.7 -3.8,6.7 -2.1,-2e-6 -3.8,-3 -3.8,-6.7 2e-6,-3.7 1.7,-6.7 3.8,-6.7 2.1,0 3.8,3 3.8,6.7 z m 17,2.2 c 0,4.1 -2.8,7.3 -6.3,7.3 -3.5,2e-6 -6.3,-3.3 -6.3,-7.3 0,-4.1 2.8,-7.3 6.3,-7.3 3.5,0 6.3,3.3 6.3,7.3 z m -7.9,49.6 c -1,2.9 -8.5,2.9 -16.6,0 -8.2,-2.9 -13.9,-7.6 -12.9,-10.5 1,-2.9 8.5,-2.9 16.6,-0 8.2,2.9 13.9,7.6 12.9,10.5 z"},{type:"path",stroke:!1,d:"M 107.5 64.3 C 102.2 64.2 96.9 67.1 92.8 71.6 C 90.6 73.6 89.2 76.8 89.2 80.4 C 89.2 83 90 85.4 91.2 87.3 C 92.1 89.9 92.7 91.8 92.7 94.5 L 92.4 96.7 L 90.7 101.6 C 92.3 100.5 96.7 100.7 101.5 102.3 C 106.6 104 110.4 106.7 110.5 108.6 L 112 104.2 C 115.9 104 120.5 96.9 122.7 87.6 C 124.9 77.9 123.5 69.3 119.8 67.9 C 118.4 66.6 116.1 65.5 112.8 65.3 C 111.1 64.6 109.3 64.3 107.5 64.3 z M 94.1 73.4 C 94.4 73.4 94.6 73.4 94.8 73.5 C 95.1 73.6 95.3 73.8 95.6 73.9 C 96.2 74.4 96.8 75.3 97.2 76.3 C 97.5 77.1 97.7 77.9 97.8 78.7 C 97.9 79.2 97.9 79.6 97.9 80.1 C 97.9 80.5 97.9 81 97.8 81.4 C 97.7 82.3 97.5 83.1 97.2 83.8 C 96.9 84.7 96.4 85.4 95.9 85.9 C 95.6 86.2 95.2 86.5 94.8 86.6 C 94.7 86.6 94.6 86.7 94.5 86.7 C 94.3 86.7 94.2 86.7 94.1 86.7 C 93.8 86.7 93.6 86.7 93.3 86.6 C 93 86.5 92.6 86.2 92.3 85.9 C 92.2 85.8 92.1 85.7 92 85.6 C 91.6 85.1 91.2 84.5 91 83.8 C 90.8 83.4 90.7 83.1 90.6 82.7 C 90.4 81.9 90.3 81 90.3 80.1 C 90.3 79.1 90.4 78.3 90.6 77.5 C 90.7 77.1 90.8 76.7 91 76.3 C 91.2 75.6 91.6 75 92 74.5 C 92.2 74.3 92.4 74.1 92.6 73.9 C 92.9 73.8 93.1 73.6 93.3 73.5 C 93.6 73.4 93.8 73.4 94.1 73.4 z M 108.6 75 C 110.4 75 112.1 75.9 113.3 77.3 C 113.3 77.4 113.4 77.5 113.5 77.6 C 113.5 77.6 113.5 77.6 113.5 77.7 C 113.6 77.8 113.7 78 113.8 78.2 C 113.8 78.3 113.9 78.3 113.9 78.4 C 114 78.5 114 78.5 114 78.6 C 114.1 78.7 114.2 78.8 114.2 79 C 114.3 79.1 114.3 79.3 114.4 79.4 C 114.4 79.5 114.5 79.5 114.5 79.6 C 114.5 79.7 114.6 79.9 114.6 80 C 114.6 80.1 114.6 80.2 114.7 80.3 C 114.7 80.4 114.7 80.6 114.8 80.8 C 114.9 81.3 114.9 81.8 114.9 82.3 C 114.9 84.6 114 86.6 112.6 88 C 112 88.6 111.3 89 110.5 89.3 C 110.3 89.4 110.1 89.5 109.9 89.5 C 109.5 89.6 109 89.7 108.6 89.7 C 108.2 89.7 107.7 89.6 107.3 89.5 C 107.3 89.5 107.3 89.5 107.3 89.5 C 107.1 89.5 106.9 89.4 106.7 89.3 C 105.9 89 105.2 88.6 104.6 88 C 104 87.4 103.5 86.6 103.1 85.8 C 102.9 85.4 102.7 85 102.6 84.5 C 102.5 84.3 102.5 84 102.4 83.8 C 102.4 83.5 102.4 83.3 102.3 83.1 C 102.3 82.8 102.3 82.6 102.3 82.3 C 102.3 82 102.3 81.8 102.3 81.5 C 102.3 81.5 102.4 81.5 102.4 81.4 C 102.4 81 102.5 80.5 102.6 80.1 C 102.6 80.1 102.6 80.1 102.6 80 C 103.4 77.1 105.8 75 108.6 75 z M 88.8 104 C 86.6 104 84.8 104.4 83.9 105.2 L 83.8 105.2 L 83.7 105.3 C 83.4 105.6 83.2 105.9 83.1 106.2 C 83 106.5 83 106.8 83 107.2 L 78.1 120.5 C 80.2 118.5 86.9 118.7 94.2 121.3 C 101.2 123.8 106.4 127.7 107.1 130.6 L 111.8 117.8 C 112.2 117.5 112.5 117.2 112.7 116.8 C 113.7 113.8 107.9 109.1 99.8 106.2 C 95.7 104.8 91.8 104 88.8 104 z M 82 120.8 C 79 120.8 76.9 121.5 76.4 123 C 75.4 125.9 81.1 130.7 89.3 133.6 C 97.4 136.5 104.9 136.5 105.9 133.6 C 107 130.6 101.2 125.9 93 123 C 89 121.5 85 120.8 82 120.8 z M 86.1 125.6 C 87.4 125.5 89.4 125.9 91.5 126.6 C 94.8 127.8 97.2 129.6 96.9 130.6 C 96.5 131.6 93.5 131.5 90.1 130.3 C 86.8 129.1 84.4 127.3 84.7 126.3 C 84.9 125.9 85.4 125.7 86.1 125.6 z "}],t["AC.IC.AFTERSHOCK"]=[{type:"path",stroke:!1,d:"m 99,62.5 -0,0 -0,0 -0.9,0 -0,0 -0,0 -0.9,0.1 -0,0 -0,0 -0.9,0.1 -0,0 -0,0 -0.9,0.1 -0,0 -0,0 -0.9,0.1 -0,0 -0,0 -0.9,0.1 -0,0 -0,0 -0.9,0.2 -0,0 -0,0 -0.7,0.1 0.6,2.7 0.7,-0.1 0,-0 0.8,-0.1 0,-0 0.8,-0.1 0,0 0.8,-0.1 0,0 0.9,-0.1 0,0 0.9,-0.1 0,0 0.9,-0.1 0,0 0.9,-0 0,0 0.9,-0 0,0 0,0 0.9,0 0,0 0.9,0 0,0 0.1,0 0.2,-2.8 -0.1,-0 -0,0 -0,0 -0.9,-0 -0,0 -0,0 -1,-0 -0,0 -0,0 z m 8.8,3.6 0.2,0 0,0 0.8,0.2 0,0 0.8,0.2 0,0 0.8,0.2 0,0 0.8,0.3 0,0 0,0 0.8,0.3 0,0 0.8,0.3 0,0 0.8,0.3 0,0 0.8,0.3 0,0 0.8,0.3 0,0 0.8,0.4 0,0 0,0 0.7,0.4 0,0 0.1,0 1.3,-2.5 -0.1,-0.1 -0,-0 -0,0 -0.8,-0.4 -0,-0 -0,0 -0.8,-0.4 -0,0 -0,-0 -0.8,-0.4 -0,-0 -0,0 -0.8,-0.4 -0,0 -0,-0 -0.8,-0.3 -0,-0 -0,0 -0.8,-0.3 -0,-0 -0,0 -0.8,-0.3 -0,0 -0,-0 -0.9,-0.3 -0,0 -0,0 -0.9,-0.3 -0,0 -0,0 -0.9,-0.2 -0,0 -0,-0 -0.9,-0.2 -0,0 -0,0 -0.2,-0.1 z m -22.7,-0.7 -0,0 -0,0 -0.8,0.4 -0,0 -0,0 -0.8,0.4 -0,0 -0,0 -0.8,0.4 -0,0 -0,0 -0.8,0.4 -0,0 -0,0 -0.8,0.4 -0,0 -0,0 -0.8,0.5 -0,0 -0,0 -0.8,0.5 -0,0 -0,0 -0.7,0.5 -0,0 -0,0 -0.7,0.5 -0,0 -0,0 -0.7,0.5 -0,0 -0,0 -0.7,0.5 -0,0 -0,0 -0.1,0.1 1.7,2.2 0.1,-0.1 0,-0 0.7,-0.5 0,-0 0.7,-0.5 0,-0 0.7,-0.5 0,-0 0.7,-0.5 0,-0 0.7,-0.4 0,-0 0.7,-0.4 0,-0 0.7,-0.4 0,-0 0.7,-0.4 0,-0 0,0 0.8,-0.4 0,-0 0.8,-0.3 0,-0 0.8,-0.3 0,-0 0.3,-0.1 -1,-2.6 z m 36.9,7.3 0.6,0.5 0,0 0.6,0.5 0,0 0.6,0.5 0,0 0.6,0.5 0,0 0.6,0.6 0,0 0,0 0.6,0.6 0,0 0.6,0.6 0,0 0.5,0.6 0,0 0.5,0.6 0,0 0.5,0.6 0,0 0.5,0.6 0,0 0.4,0.5 2.3,-1.7 -0.4,-0.6 -0,-0 0,-0 -0.6,-0.7 -0,-0 0,-0 -0.6,-0.7 -0,-0 -0,-0 -0.6,-0.7 -0,-0 -0,-0 -0.6,-0.7 -0,-0 -0,-0 -0.6,-0.6 -0,-0 -0,-0 -0.6,-0.6 -0,-0 -0,-0 -0.6,-0.6 -0,-0 -0,0 -0.7,-0.6 -0,-0 -0,0 -0.7,-0.6 -0,-0 -0,-0 -0.7,-0.6 -0,-0 -0,-0 -0.6,-0.5 z m -51,2.7 -0,0 -0,0 -0.6,0.7 -0,0 -0,0 -0.6,0.7 0,0 -0,0 -0.6,0.7 0,0 -0,0 -0.5,0.7 -0,0 -0,0 -0.5,0.7 -0,0 -0,0 -0.5,0.7 -0,0 0,0 -0.5,0.7 -0,0 0,0 -0.5,0.8 0,0 -0,0 -0.4,0.8 -0,0 0,0 -0.4,0.8 0,0 -0,0 -0.3,0.6 2.5,1.3 0.3,-0.6 0,-0 0.4,-0.7 0,-0 0.4,-0.7 0,-0 0.4,-0.7 0,-0 0.4,-0.7 0,-0 0.5,-0.7 0,-0 0.5,-0.7 0,-0 0.5,-0.7 0,-0 0.5,-0.6 0,-0 0.5,-0.6 0,-0 0.5,-0.6 0,-0 0.5,-0.5 -2.1,-1.9 z m 60.9,9.4 0.1,0.1 0,0 0,0 0.3,0.7 0,0 0.3,0.7 0,0 0.3,0.8 0,0 0.3,0.8 0,0 0.3,0.8 0,0 0,0 0.3,0.8 0,0 0.2,0.8 0,0 0.2,0.8 0,0 0.2,0.8 0,0 0.2,0.8 0,0 0.2,0.8 0,0 0,0.2 2.8,-0.5 -0,-0.3 -0,-0 0,-0 -0.2,-0.9 0,-0 0,-0 -0.2,-0.9 0,-0 -0,-0 -0.2,-0.9 0,-0 -0,-0 -0.2,-0.9 0,-0 -0,-0 -0.3,-0.8 -0,-0 0,-0 -0.3,-0.8 0,-0 -0,-0 -0.3,-0.8 0,-0 -0,-0 -0.3,-0.8 -0,-0 0,-0 -0.3,-0.8 0,-0 -0,-0 -0.3,-0.8 -0,-0 -0,-0 -0.4,-0.8 -0,-0 0,-0 -0.1,-0.2 z m -68.8,4.9 -0,0 0,0 -0.2,0.9 -0,0 0,0 -0.2,0.9 -0,0 0,0 -0.2,0.9 0,0 0,0 -0.2,0.9 0,0 -0,0 -0.1,0.9 0,0 0,0 -0.1,0.9 -0,0 0,0 -0.1,0.9 0,0 -0,0 -0.1,0.9 0,0 0,0 -0.1,0.9 0,0 0,0 -0,0.9 0,0 0,0 -0,0.9 0,0 0,0 0,0 1.4,-0 0.3,0 1.1,0 0,-0 0,-0.9 0,-0 0,-0.9 -0,0 0.1,-0.8 0,-0 0.1,-0.9 -0,0 0.1,-0.9 0.1,-0.9 -0,0 0.1,-0.8 0,-0 0.2,-0.8 0,-0 0.2,-0.8 0,-0 0.2,-0.8 0,-0 0.2,-0.8 0,-0 0.1,-0.2 -2.7,-0.8 z m 73,10.3 -0.6,0 0,0 0,0 -0,0.9 0,0 -0,0.9 0,0 -0.1,0.8 0,0 -0.1,0.9 0,0 -0.1,0.9 -0.1,0.9 0,0 -0.1,0.8 0,0 -0.2,0.8 -0,0 -0.2,0.8 -0,0 -0.2,0.8 0,0 -0.2,0.8 -0,0 -0.1,0.2 2.7,0.8 0.1,-0.2 0,-0 0,-0 0.2,-0.9 0,-0 0,-0 0.2,-0.9 0,-0 0,-0 0.2,-0.9 0,-0 0,-0 0.2,-0.9 0,-0 0,-0 0.1,-0.9 0,-0 0,-0 0.1,-0.9 0,-0 0,-0 0.1,-0.9 0,-0 0,-0 0.1,-0.9 0,-0 0,-0 0.1,-0.9 0,-0 0,-0 0,-0.9 0,-0 0,-0 0,-0.9 -1.4,-0 1.4,-0 0,-0 z m -73.9,6.4 0,0.3 0,0 0,0 0.2,0.9 0,0 0,0 0.2,0.9 0,0 0,0 0.2,0.9 0,0 0,0 0.2,0.9 0,0 0,0 0.3,0.8 0,0 0,0 0.3,0.8 0,0 0,0 0.3,0.8 0,0 0,0 0.3,0.8 0,0 0,0 0.3,0.8 0,0 0,0 0.3,0.8 0,0 0,0 0.4,0.8 0,0 0,0 0.1,0.2 2.5,-1.3 -0.1,-0.1 -0,-0 -0.3,-0.7 -0,-0 -0.3,-0.7 -0,-0 -0.3,-0.8 -0,-0 -0.3,-0.8 -0,-0 -0.3,-0.8 -0,-0 0,-0 -0.3,-0.8 -0,-0 -0.2,-0.8 -0,-0 -0.2,-0.8 0,-0 -0.2,-0.8 -0,-0 -0.2,-0.8 -0,-0 -0.2,-0.8 0,-0 -0,-0.2 z m 69.4,9.4 -0,0 -0.4,0.7 -0,0 -0.4,0.7 -0,0 -0.4,0.7 -0,0 -0.4,0.7 -0,0 -0.5,0.7 -0,0 -0.5,0.7 -0,0 -0.5,0.7 -0,0 -0.5,0.6 -0,0 -0.5,0.6 -0,0 -0.5,0.6 -0,0 -0.5,0.6 2.1,1.9 0.5,-0.6 0,-0 0,-0 0.6,-0.7 0,-0 0,-0 0.6,-0.7 0,-0 0,-0 0.6,-0.7 0,-0 0,-0 0.5,-0.7 0,-0 0,-0 0.5,-0.7 0,-0 0,-0 0.5,-0.7 0,-0 0,-0 0.5,-0.7 0,-0 0,-0 0.5,-0.8 0,-0 0,-0 0.4,-0.8 0,-0 0,-0 0.4,-0.8 0,-0 0,-0 0.3,-0.6 -2.5,-1.3 z m -62.8,6.1 0.4,0.6 0,0 0,0 0.6,0.7 0,0 0,0 0.6,0.7 0,0 0,0 0.6,0.7 0,0 0,0 0.6,0.7 0,0 0,0 0.6,0.6 0,0 0,0 0.6,0.6 0,0 0,0 0.6,0.6 0,0 0,0 0.7,0.6 0,0 0,0 0.7,0.6 0,0 0,0 0.7,0.6 0,0 0,0 0.6,0.5 1.7,-2.2 -0.6,-0.5 -0,-0 -0.6,-0.5 -0,-0 -0.6,-0.5 -0,-0 -0.6,-0.5 -0,-0 -0.6,-0.6 -0,-0 -0,-0 -0.6,-0.6 -0,-0 -0.6,-0.6 -0,-0 -0.5,-0.6 -0,-0 -0.5,-0.6 -0,-0 -0.5,-0.6 -0,-0 -0.5,-0.6 -0,-0 -0.4,-0.5 z m 53.1,5.4 -0,0 -0.7,0.5 -0,0 -0.7,0.5 -0,0 -0.7,0.5 -0,0 -0.7,0.5 -0,0 -0.7,0.4 -0,0 -0.7,0.4 -0,0 -0.7,0.4 -0,0 -0.7,0.4 -0,0 -0,0 -0.8,0.4 -0,0 -0.8,0.3 -0,0 -0.8,0.3 -0,0 -0.3,0.1 1,2.6 0.4,-0.1 0,-0 0,0 0.8,-0.4 0,0 0,-0 0.8,-0.4 0,-0 0,0 0.8,-0.4 0,0 0,-0 0.8,-0.4 0,0 0,-0 0.8,-0.4 0,-0 0,0 0.8,-0.5 0,0 0,-0 0.8,-0.5 0,-0 0,0 0.7,-0.5 0,0 0,-0 0.7,-0.5 0,-0 0,0 0.7,-0.5 0,-0 0,-0 0.7,-0.5 0,-0 0,-0 0.1,-0.1 -1.7,-2.2 z m -40.4,5.6 0.1,0.1 0,0 0,0 0.8,0.4 0,0 0,0 0.8,0.4 0,0 0,0 0.8,0.4 0,0 0,0 0.8,0.4 0,0 0,0 0.8,0.3 0,0 0,0 0.8,0.3 0,0 0,0 0.8,0.3 0,0 0,0 0.9,0.3 0,0 0,0 0.9,0.3 0,0 0,0 0.9,0.2 0,0 0,0 0.9,0.2 0,0 0,0 0.2,0.1 0.6,-2.7 -0.2,-0 -0,-0 -0.8,-0.2 -0,-0 -0.8,-0.2 -0,-0 -0.8,-0.2 -0,-0 -0.8,-0.3 -0,-0 -0,0 -0.8,-0.3 0,-0 -0.8,-0.3 -0,-0 -0.8,-0.3 -0,-0 -0.8,-0.3 -0,-0 -0.8,-0.3 -0,-0 -0.8,-0.4 -0,0 -0,-0 -0.7,-0.4 -0,-0 -0.1,-0 z m 25.6,1.1 -0,0 -0.8,0.1 -0,0 -0.8,0.1 -0,0 -0.8,0.1 0,-0 -0.9,0.1 0,-0 -0.9,0.1 -0,0 -0.9,0.1 -0,0 -0.9,0 -0,0 -0.9,0 -0,0 -0,0 -0.9,-0 -0,0 -0.9,-0 -0,0 -0.1,0 -0.2,2.8 0.1,0 0,0 0,0 0.9,0 0,0 0,0 1,0 0,0 0,0 1,-0 0,0 0,0 0.9,-0 0,0 0,0 0.9,-0.1 0,0 0,0 0.9,-0.1 0,-0 0,0 0.9,-0.1 0,0 0,0 0.9,-0.1 0,-0 0,0 0.9,-0.1 0,0 0,0 0.9,-0.2 0,0 0,0 0.7,-0.1 -0.6,-2.7 z m -7.2,-58.9 -0,1.2 0.1,0 0,0 1.3,0 0,-0 1.3,0.1 1.1,0.1 0.1,0 0,0 1.1,0.2 0.1,0 0.7,0.1 0.7,-3.1 -0.7,-0.2 -0,0 -0,-0 -1.3,-0.2 -0,0 -0,-0 -1.3,-0.2 -0,0 -0,0 -1.3,-0.1 -0,0 -0.1,0 -1.3,-0 -0,0 -0,0 -0,0 z m -5.5,-1.4 -0,0 -0,0 -1.3,0.3 -0,0 -0,0 -1.2,0.3 -0,0 -0,0 -1.2,0.4 -0,0 -0,0 -0.9,0.3 1.1,3 0.8,-0.3 0.1,-0 0,0 1.1,-0.4 0,-0 1.1,-0.3 1.2,-0.3 0.1,-0 1.1,-0.2 -0.6,-3.1 z m 14.8,4.4 0.2,0.1 0.1,0 1.1,0.5 1,0.5 0.1,0 1,0.5 0,0 0,0 0.9,0.6 0.1,0 0.5,0.4 1.8,-2.6 -0.6,-0.4 -0,-0 -0,-0 -1.1,-0.7 -0,-0 -0,-0 -1.1,-0.6 -0,-0 -0,-0 -1.1,-0.6 -0,-0 -0,-0 -1.1,-0.5 -0,-0 -0,-0 -0.3,-0.1 z m -23.6,-1.1 -0,0 -0,0 -1.1,0.7 -0,0 -0,0 -1,0.7 -0,0 -0,0 -1,0.8 -0,0 -0,0 -0.9,0.8 -0,0 -0,0 -0.8,0.7 2.2,2.4 0.7,-0.7 0.1,-0.1 0.8,-0.7 0,-0 0,-0 0.9,-0.7 0.1,-0 0.9,-0.6 0.1,-0 0.9,-0.6 0,-0 0,-0 -0.4,-0.6 -1.2,-2.2 z m 31.5,6.2 0.1,0.1 0,0 0,0 0.8,0.8 0.1,0.1 0.7,0.8 0.1,0.1 0.7,0.8 0,0 0,0.1 0.6,0.9 0,0.1 0,0 0.5,0.7 2.7,-1.8 -0.5,-0.8 -0,-0 -0,-0 -0.7,-1 -0,-0 -0,-0 -0.8,-0.9 -0,-0 -0,-0 -0.8,-0.9 -0,-0 -0,-0 -0.9,-0.9 -0,-0 -0,-0 -0.1,-0.1 z m -40.1,1.8 -0,0 -0,0 -0.7,1 -0,0 -0,0 -0.6,1.1 -0,0 -0,0 -0.6,1.1 -0,0 -0,0 -0.5,1.1 -0,0 -0,0 -0,0.1 2.4,1 0.5,0.3 0,-0 0.5,-1 0,-0.1 0,-0 0.5,-0.9 0,-0.1 0.6,-0.9 0.6,-1 0,-0 0,-0.1 0.6,-0.8 -2.6,-1.9 z m 45.4,5.9 0.4,1.1 0,0.1 0.3,1 0,0.1 0.3,1.1 0.3,1.1 0.2,1 3.1,-0.6 -0.2,-1.1 0,-0 -0,-0 -0.3,-1.2 -0,-0 -0,-0.1 -0.3,-1.2 -0,-0 -0,-0 -0.4,-1.2 -0,-0 -0,-0 -0.5,-1.1 z m -49.6,3.8 -0,0 0,0 -0.2,1.3 0,0 -0,0 -0.2,1.3 -0,0 0,0 -0.1,1.3 0,0 0,0.1 -0,1.3 0,0 0,0 0,0 1.9,-0 1.3,0 0,-0.1 0,-0 0,-1.2 0.1,-1.1 0,0 0.1,-1.2 0,-0.1 0,-0 0.2,-1.1 0.2,-0.9 -3.1,-0.7 z m 52.8,5.5 -1.2,-0 0,0.1 0,0 -0,1.2 -0.1,1.1 -0,0 -0.1,1.2 0,0 -0,0.1 -0.2,1.1 -0.2,0.9 3.1,0.8 0.2,-0.9 0,-0 0,-0 0.2,-1.3 0,-0 0,-0 0.2,-1.3 0,-0 0,-0 0.1,-1.3 0,-0 0,-0.1 0,-1.3 -1.6,-0 1.6,-0 0,-0 z m -53,4.3 0.2,1.1 0,0 0,0 0.3,1.2 0,0 0,0.1 0.3,1.2 0,0 0,0 0.4,1.2 0,0 0,0 0.5,1.1 3,-1.2 -0.4,-1 -0,-0.1 -0.3,-1 -0,-0.1 -0.3,-1.1 -0.3,-1.1 -0.2,-1 z m 49.9,4.9 -0.5,1 -0,0.1 -0,0 -0.5,1 -0,0.1 -0.6,0.9 -0.6,1 -0,0 -0,0.1 -0.6,0.8 2.6,1.9 0.6,-0.9 0,-0 0,-0 0.7,-1 0,-0 0,-0 0.6,-1.1 0,-0 0,-0 0.6,-1.1 0,-0 0,-0 0.5,-1.1 0,-0 0,-0 0,-0 -2.2,-0.9 -0.8,-0.3 z m -46,5 0.5,0.8 0,0 0,0 0.7,1 0,0 0,0 0.8,0.9 0,0 0,0 0.8,0.9 0,0 0,0 0.9,0.9 0,0 0,0 0.1,0.1 2.2,-2.3 -0.1,-0.1 -0,-0 -0,-0 -0.8,-0.8 -0.1,-0.1 -0.7,-0.8 -0.1,-0.1 -0.7,-0.8 -0,-0 -0,-0.1 -0.6,-0.9 -0.1,-0.1 -0.5,-0.7 z m 40,3.3 -0.1,0.1 -0.8,0.7 -0,0 -0,0 -0.9,0.7 -0.1,0 -0.9,0.6 -0.1,0 -0.9,0.6 0,-0 -0.1,0 0,0 -0,0 0.3,0.4 1.3,2.4 0,-0 0,-0 0,-0 1.1,-0.7 0,-0 0,-0 1,-0.7 0,-0 0,-0 1,-0.8 0,-0 0,-0 0.9,-0.8 0,-0 0,-0 0.8,-0.7 -2.2,-2.4 z m -32.6,4.4 0.6,0.4 0,0 0,0 1.1,0.7 0,0 0,0 1.1,0.6 0,0 0,0 1.1,0.6 0,0 0,0 1.1,0.5 0,0 0,0 0.3,0.1 1.1,-3 -0.2,-0.1 -0.1,-0 -1.1,-0.5 -1,-0.5 -0.1,-0 -1,-0.6 0,0 -0.9,-0.6 -0.1,-0 -0.5,-0.4 z m 24.5,0.3 -0.1,0 -1.1,0.3 -0.1,0 -1.1,0.3 -1.2,0.3 -0.1,0 -1.1,0.2 0.6,3.1 1.2,-0.2 0,0 0,-0 1.3,-0.3 0,0 0,-0 1.2,-0.3 0,-0 0,-0 1.2,-0.4 0,-0 0,-0 0.9,-0.3 -1.1,-3 z m -14.8,3.9 0.7,0.2 0,0 0,0 1.3,0.2 0,0 0,0 1.3,0.2 0,0 0,0 1.3,0.1 0,0 0.1,0 1.3,0 0,0 0,0 0,0 -0.1,-1.6 0,-0.1 0,-1.5 -0.1,0 -1.3,-0 0,0 -1.3,-0.1 -1.1,-0.1 -0.1,-0 -0,0 -1.1,-0.2 -0.1,-0 -0.7,-0.1 z m 6.3,-43.1 -0.4,0 0.1,4 0.3,-0 0.1,0 0.1,0 0.6,0 0.1,0 0.6,0 0.1,0 0.6,0.1 0.1,0 0.6,0.1 0.7,0.1 0.1,0 0.1,0 0.6,0.2 0.5,0.2 0.1,0 0.5,0.2 0.1,0 0,0 0.5,0.2 0.1,0 0.4,0.2 1.8,-3.6 -0.5,-0.3 -0,-0 -0.1,-0 -0.7,-0.3 -0.1,-0 -0.1,-0 -0.7,-0.3 -0,-0 -0.1,-0 -0.7,-0.2 -0.1,-0 -0,-0 -0.7,-0.2 -0.1,-0 -0.1,-0 -0.7,-0.2 -0.1,-0 -0.1,-0 -0.8,-0.1 -0,-0 -0.1,-0 -0.8,-0.1 -0.1,-0 -0.1,0 -0.8,-0.1 -0.1,0 -0.1,0 -0.8,-0 -0.1,-0 z m -5.1,0.7 -0.1,0 -0,0 -0.7,0.2 -0.1,0 -0.1,0 -0.7,0.3 -0,0 -0.1,0 -0.7,0.3 -0.1,0 -0,0 -0.7,0.3 -0,0 -0,0 -0.7,0.4 -0,0 -0.1,0 -0.6,0.4 -0,0 -0,0 -0.6,0.4 -0,0 -0,0 -0.6,0.4 -0,0 -0,0 -0.6,0.5 -0,0 -0,0 -0.5,0.5 -0,0 -0,0 -0.2,0.2 2.9,2.8 0.1,-0.1 0.1,-0.1 0.4,-0.4 0.1,-0.1 0.4,-0.3 0,-0 0.1,-0.1 0.4,-0.3 0.5,-0.4 0.1,-0.1 0.6,-0.3 0,-0 0.5,-0.3 0.1,-0 0.5,-0.3 0.1,-0 0.5,-0.2 0,0 0.1,-0 0.6,-0.2 0,-0 0.5,-0.2 0.1,-0 0.1,-0 -1.1,-3.9 z m 14.2,6.7 0.4,0.3 0.5,0.5 0.1,0.1 0.3,0.4 0.1,0.1 0.3,0.4 0.1,0.1 0.3,0.4 0,0 0,0.1 0.3,0.4 0.1,0.1 0.3,0.5 0,0 0,0.1 0.3,0.5 0,0.1 0.2,0.5 0,0.1 0.2,0.5 0,0.1 0,0 0.2,0.6 3.8,-1.3 -0.2,-0.7 -0,-0.1 -0,-0.1 -0.3,-0.7 -0,-0.1 -0,-0 -0.3,-0.7 -0,-0.1 -0,-0 -0.3,-0.7 -0,-0.1 -0,-0 -0.4,-0.6 -0,-0 -0,-0.1 -0.4,-0.6 -0,-0 -0,-0.1 -0.4,-0.6 -0,-0.1 -0,-0 -0.5,-0.6 -0,-0 -0,-0 -0.5,-0.5 -0,-0 -0,-0 -0.5,-0.5 -0,-0 -0,-0 -0.5,-0.4 z m -24.4,1.4 -0,0 -0,0.1 -0.3,0.7 -0,0 -0,0.1 -0.3,0.7 -0,0 -0,0.1 -0.3,0.7 -0,0.1 -0,0.1 -0.2,0.7 -0,0.1 -0,0.1 -0.2,0.7 -0,0.1 0,0.1 -0.2,0.7 -0,0.1 -0,0.1 -0.1,0.7 -0,0.1 0,0.1 -0.1,0.8 0,0.1 -0,0.1 -0.1,0.8 0,0.1 0,0.1 -0,0.8 0,0.1 0,0.1 0,0.3 4,-0.1 -0,-0.2 0,-0.1 0,-0 0,-0.7 0,-0.6 0,-0.1 0,-0 0.1,-0.5 0.1,-0.6 0,-0.1 0.1,-0.5 0,-0 0,-0.1 0.1,-0.5 0.2,-0.6 0,-0.1 0,-0 0.2,-0.5 0.3,-0.6 0.1,-0.1 0.3,-0.5 0,-0.1 0,-0 0,-0 -3.5,-2 z m 28.7,7.6 0,0.5 0,0.1 0,0 -0,0.6 -0.1,0.7 -0,0.1 0,0.1 -0.1,0.6 -0.1,0.5 -0,0.1 -0.1,0.5 0,0 -0,0.1 -0.1,0.5 -0,0.1 -0.2,0.5 -0,0 -0,0.1 -0.2,0.5 -0,0 -0,0.1 -0.2,0.5 -0,0.1 -0.3,0.5 -0,0.1 -0,0 -0.2,0.3 3.5,2 0.2,-0.4 0,-0.1 0,-0 0.3,-0.7 0,-0 0,-0.1 0.3,-0.7 0,-0 0,-0.1 0.3,-0.7 0,-0.1 0,-0.1 0.2,-0.7 0,-0 0,-0.1 0.2,-0.7 0,-0.1 0,-0.1 0.2,-0.7 0,-0.1 0,-0.1 0.1,-0.7 0,-0.1 0,-0.1 0.1,-0.8 0,-0.1 0,-0.1 0.1,-0.8 0,-0.1 0,-0.1 0,-0.8 -2,-0.1 2,-0.1 -0,-0.6 z m -30.1,5.3 0.1,0.3 0,0.1 0,0 0.2,0.7 0,0.1 0,0.1 0.3,0.7 0,0.1 0,0 0.3,0.7 0,0.1 0,0 0.3,0.7 0,0 0,0.1 0.4,0.6 0,0 0,0.1 0.4,0.6 0,0 0,0 0.4,0.6 0,0 0,0 0.5,0.6 0,0 0,0 0.5,0.5 0,0 0,0 0.5,0.5 0,0 0,0 0.2,0.2 2.7,-2.9 -0.2,-0.1 -0.1,-0.1 -0,-0 -0.4,-0.4 -0.1,-0.1 -0.4,-0.4 -0,-0.1 -0,-0 -0.3,-0.4 -0.1,-0.1 -0.4,-0.5 -0.3,-0.4 -0.1,-0.1 -0.3,-0.5 -0,-0 -0,-0.1 -0.3,-0.5 -0.1,-0.1 -0.2,-0.5 -0,-0.1 -0,-0 -0.2,-0.5 -0,-0.1 -0,-0.1 -0.2,-0.6 -0,-0.1 z m 25.8,4.8 -0.1,0.1 -0.4,0.3 -0,0 -0.1,0.1 -0.4,0.3 -0.1,0.1 -0.5,0.3 -0,0 -0.1,0 -0.5,0.3 -0.1,0 -0,0 -0.6,0.3 -0.5,0.3 -0.1,0 -0.5,0.2 -0,0 -0.1,0 -0.5,0.2 -0.1,0 -0.5,0.2 -0.5,0.1 1.1,3.9 0.5,-0.1 0,-0 0.1,-0 0.7,-0.2 0.1,-0 0,-0 0.7,-0.3 0.1,-0 0.1,-0 0.7,-0.3 0.1,-0 0,-0 0.7,-0.3 0.1,-0 0,-0 0.7,-0.4 0,-0 0,-0 0.6,-0.4 0,-0 0.1,-0 0.6,-0.4 0,-0 0,-0 0.6,-0.5 0,-0 0,-0 0.6,-0.5 0,-0 0,-0 0.5,-0.5 -2.7,-2.9 z m -15.5,1.8 -1.9,3.5 0.1,0.1 0,0 0,0 0.7,0.3 0,0 0.1,0 0.7,0.3 0.1,0 0,0 0.7,0.3 0.1,0 0.1,0 0.7,0.2 0,0 0.1,0 0.7,0.2 0,0 0.1,0 0.8,0.2 0.1,0 0.1,0 0.8,0.1 0.1,0 0.1,0 0.8,0.1 0.1,0 0.1,0 0.8,0.1 0.1,0 0.1,0 0.8,0 0.1,0 0.1,0 0.1,0 -0.1,-4 -0.1,0 -0.1,0 -0.6,-0 -0.1,0 -0.6,-0 0,-0 -0.7,-0.1 -0,0 -0.1,-0 -0.6,-0.1 -0.1,-0 -0.6,-0.1 0,-0 -0.7,-0.2 -0.5,-0.2 0,-0 -0.6,-0.2 -0.1,-0 -0,0 -0.5,-0.2 -0.1,-0 -0.5,-0.3 -0.1,-0.1 z M 100,93.2 c -3.5,-4e-4 -6.7,2.9 -6.7,6.5 l 0,0.4 c 0,3.5 3,6.5 6.5,6.5 l 0.4,0 c 3.4,0 6.5,-3 6.5,-6.3 l 0,-0.9 c 0,-3.4 -3.3,-6.3 -6.8,-6.3 z"}],t["AC.IC.AVALANCHE"]=[{type:"path",stroke:!1,d:"m 115.7,87.3 -3.6,0.9 11,38 -4.6,1.5 9.6,9.2 3.1,-13 -4.6,1.4 z m 3,46.4 -8.5,-10 4.3,-1.2 -11.2,-40.6 -34.5,51.9 z m -12.1,-59.8 0,8.4 1.6,0 0,-8.3 7.1,4.3 0.8,-1.3 -7.4,-4.1 7.5,-4.4 -1,-1.2 -7,4 0,-8.2 -1.6,0 0,8.2 -7.4,-4 -0.6,1.1 7.2,4.4 -7.2,4.1 0.6,1.4 z"}],t["AC.IC.EARTHQUAKE EPICENTER"]=[{type:"path",stroke:!1,d:"m 62.8,99.8 c 0,-10.8 4.9,-20.2 10.3,-25.7 5.1,-5.1 14.8,-11.3 24.7,-11.3 h 4.1 c 4.9,0 10.5,1.9 13.9,3.6 5,2.5 6.4,4 10.4,7 4.6,3.6 11.1,15.4 11.1,23.8 v 5.3 c 0,17.4 -17.5,34.6 -35.1,34.6 h -4.6 c -10.3,0 -19.4,-6.2 -24.6,-11.4 -5.5,-5.4 -10.3,-15 -10.3,-25.8 z m 39.4,38.5 c 10.7,0 20,-6.3 25.5,-11.8 6.7,-6.7 9.9,-13.9 10.7,-26.5 1.3,-19.2 -17.7,-38.1 -36.2,-38.1 h -4.8 c -10.3,0 -20.1,6.6 -25.2,12.1 -3,3.2 -5.6,6.7 -7.5,11.1 -1.1,2.8 -3.5,11.3 -3,15.3 0.7,6.4 0.9,10.4 3.4,15.3 2.2,4.4 4,7.6 7.3,11 5,5.3 15.2,11.7 25.3,11.7 h 4.6 z m -3.9,-11.6 c -13.6,0 -24.7,-13.1 -25.2,-26.8 -0.5,-13.2 12.5,-26.4 25.4,-26.4 h 2.9 c 12.8,0 25.2,12.4 25.2,25.2 v 2.4 c 0,12.8 -12.4,25.7 -25.2,25.7 h -3.1 v -0 z m -27.1,-26.9 c 0,8.8 3.7,16 8.1,20.5 2.3,2.4 5.2,4.4 8.3,5.9 4.2,2.2 6.3,1.9 11.5,2.8 2.9,0.5 10,-1.3 12,-2.2 4.6,-2.2 5,-2.9 8.6,-5.6 4.3,-3.1 9.1,-12.3 9.1,-19.7 v -3.4 c 0,-13.7 -13.6,-26.8 -27.3,-26.8 h -3.2 c -14.5,-4e-4 -27.1,13.6 -27.1,28.5 z m 28.5,14.8 c -8.4,0 -13.5,-6.5 -14.4,-14.4 -0.7,-7.3 6.8,-14.6 13.9,-14.6 h 1.7 c 7.3,0 13.6,6.9 13.6,14.5 0,7.7 -6.2,14.5 -13.8,14.5 h -1 z m -18.6,-14.8 c 0,11.5 8,18.1 18.4,19.3 6.2,0.8 10.3,-2.9 13.6,-5.3 2.8,-2 5.8,-8.3 5.8,-13.3 V 99.8 c 0,-10.4 -8.3,-18.6 -18.6,-18.6 h -0.7 c -9.9,0 -18.4,8.6 -18.4,18.6 z m 10.9,0 v 0.2 c 0,3.7 3.5,7.7 7,7.7 h 1.7 c 3.9,0 7.3,-3.9 7.3,-7.7 0,-4 -3.5,-8 -7,-8 h -1.7 c -3.5,0 -7.3,4 -7.3,7.7 z"
}],t["AC.IC.LANDSLIDE"]=[{type:"path",stroke:!1,d:"m 129.4,110.8 c -2.7,0 -6.2,4.1 -4.3,5.1 -1,1.5 -3.6,2 -3.6,4 0,1.8 2.6,4.7 3.4,6.2 1.1,2 3.2,3.2 6.2,3.2 h 1.8 c 2.7,0 4.6,-2.6 4.6,-5.3 v -1 c 0,-3.4 -1,-5 -2.1,-7.5 -1,-2.4 -1.6,-4.6 -4.9,-4.6 h -1 z m -22.2,-35 -5.3,-5.2 -39.3,58.3 55.8,0.1 v -1.2 c 0,-0.7 -1,-1.5 -1.5,-1.8 0,-2 -0.6,-1.6 -0.9,-2.9 -0.2,-0.9 -0.1,-2.7 -0.1,-3.7 0,-2.8 -0.1,-4.3 -1.7,-5.6 -2.2,-1.9 -1.3,-1.5 -4.3,-3.1 -2,-1 -1.5,-2.1 -5.2,-2.2 v -1.5 c 0,-1.9 -2,-3.6 -2.8,-4.8 0,-2.3 -0.5,-4.7 -0.5,-6.8 0,-1.6 -0.2,-2 -0.2,-3.3 -0.1,-1.7 -0.8,-1.5 -0.8,-2.8 v -0.2 c 0,-3 0.5,-4.5 2.1,-6 2.2,-2.1 0.9,-2.2 3.8,-3.9 l 0.8,-3.3 0,0 z m 9.7,34 c 0,3.6 6.1,2.8 6.1,-0.8 0,-4.2 -6.1,-1.9 -6.1,0.8 z m 2.8,-16.4 c -2.2,0 -7,6.4 -4,8.6 1.7,1.2 2.6,1.6 5.3,0.6 2,-0.8 2.8,-1.6 2.8,-4.3 4e-4,-2.4 -2,-4.8 -4,-4.8 z m -8.4,5.3 c 0.8,0 1,-0.7 1.3,-1.3 -0.6,-1.4 -0.5,-2.5 -2.6,-2.5 h -0.2 c -1,0 -2,0.6 -2,1.5 0,0.7 1.6,2.3 2.8,2.3 h 0.8 z m -3.3,-13.7 c -0.1,1 -0.3,0.6 -0.3,1.5 0,1 0.8,3 1.8,3 h 0.2 c 3.1,0 3.1,-0.2 4.8,-1.5 -1,-2.3 -0.4,-3.6 -4.2,-3.6 -1.1,0 -1.4,0.3 -2.3,0.5 z"}],t["AC.IC.SUBSIDENCE"]=[{type:"path",stroke:!1,d:"m 56.8,75.6 0,2 14.4,0 3.8,7.9 c -0.1,0.3 -0.3,0.7 -0.3,1.6 l 0,0.6 c 0,0.7 0.3,1.1 0.7,1.5 0.3,0.4 0.7,0.8 1.1,1.3 0.7,0.8 1.5,1.5 1.8,2 l -0.3,4.1 c -0.1,1 0.4,2 1,2.6 0.6,0.6 1.3,1.1 2,1.5 0.7,0.4 1.3,0.8 1.7,1.2 0.4,0.4 0.6,0.6 0.6,1 0,1.3 -0.5,2.2 -0.5,4.2 0,0.9 0.5,1.7 1.1,2.1 0.6,0.4 1.2,0.7 1.8,0.9 0.6,0.2 1.1,0.4 1.4,0.6 0.3,0.2 0.3,0.2 0.3,0.3 0,0.6 -0.1,0.8 -0.3,1.2 -0.2,0.3 -0.5,0.7 -0.5,1.5 l 0,0.6 c 0,1.8 1,2.9 1.9,3.5 0.8,0.6 1.3,0.8 1.5,1.3 0,0 0,0 0,0 0.2,0.8 0.3,2 0.7,3.1 0.2,0.6 0.5,1.2 1,1.6 0.5,0.5 1.2,0.7 2,0.7 l 0.3,0 c 1.1,0 1.9,-0 2.6,-0.2 0.7,-0.1 1.3,-0.4 1.7,-0.9 0.4,-0.5 0.5,-1.1 0.7,-1.7 0.1,-0.6 0.2,-1.3 0.3,-2.1 7.6e-4,-0 -7.6e-4,-0 0,-0 0.2,-1.4 0.7,-2.1 1.3,-2.8 0.5,-0.7 1.2,-1.7 1.2,-3.1 0,-0.6 -0.2,-1 -0.5,-1.3 -0.2,-0.3 -0.5,-0.7 -0.7,-1 -0.5,-0.7 -0.8,-1.5 -0.8,-2.4 l 0,-0.9 c 0,-0 -0,-0 0.1,-0.2 0.2,-0.2 0.5,-0.4 0.8,-0.6 0.4,-0.3 0.8,-0.5 1.1,-1 0.4,-0.4 0.7,-1.1 0.7,-1.8 0,-1.2 -0.5,-2.4 -0.9,-3.5 -0.4,-1.1 -0.8,-2.2 -0.8,-2.5 0,-0.5 0.2,-1 0.6,-1.6 0.4,-0.6 1,-1.3 1.5,-2.2 0.5,-0.8 0.9,-1.8 0.9,-3 -0,-1.1 -0.5,-2.4 -1.6,-3.6 l -0,-0 -0,0 c -0.3,-0.3 -0.7,-1.3 -0.8,-2.2 -0.1,-0.9 0.1,-1.9 0.4,-2.3 0.3,-0.5 0.9,-0.9 1.7,-1.4 0.7,-0.6 1.5,-1.6 1.5,-3 l 0,-1.4 38.1,0 0,-2 -40.1,0 -30.6,0 -0.6,0 -15,0 z"}],t["AC.IC.VOLCANIC ERUPTION"]=[{type:"path",stroke:!1,d:"m 122.2,66 -10.4,17.9 1.7,1 10.4,-17.9 -1.7,-1 z m -23.2,0.5 0,17.9 2,0 0,-17.9 -2,0 z m -19.5,-0.4 -1.8,0.8 8,17.9 1.8,-0.8 -8,-17.9 z M 99.3,120.8 c -1.7,-0 -3.3,0.8 -4.5,2 -1.2,1.2 -2,2.9 -2,4.5 l 0,1.9 c 0,1.7 0.8,3.3 2,4.5 1.2,1.2 2.8,2 4.5,2 l 1.3,0 c 1.7,0 3.3,-0.8 4.5,-2 1.2,-1.2 2,-2.8 2,-4.5 l 0,-1.9 c 0,-1.7 -0.8,-3.3 -2,-4.5 -1.2,-1.2 -2.8,-2 -4.5,-2 l -1.2,0 -0,0 z M 80.3,86.5 c -0.5,0 -0.9,0.3 -1.4,0.8 -0.4,0.5 -0.8,1.2 -1.3,2 -0.8,1.7 -1.6,3.9 -2.4,6.3 -1.5,4.7 -2.8,9.8 -3.4,11.4 l -0,0 c -2,7 -5.8,15.2 -7,21.6 l -0.1,0.2 0.2,0 20.9,0.6 0.2,0 0,-0.2 0,-1.9 0,-0.2 -0.2,-0 -17.6,-0.7 L 80.5,89.4 l 39.1,0 11.9,37.1 -17.5,0.7 -0.2,0 0,0.2 0,1.9 0,0.2 0.2,-0 20.9,-0.6 0.2,0 -0.1,-0.2 c -1.3,-6.4 -5.1,-14.7 -7,-21.6 L 128.1,107 c -0.6,-1.6 -1.9,-6.7 -3.4,-11.4 -0.8,-2.3 -1.6,-4.6 -2.4,-6.3 -0.4,-0.8 -0.8,-1.5 -1.3,-2 -0.4,-0.5 -0.9,-0.8 -1.4,-0.8 l -39.4,0 z"}],t["AC.IC.VOLCANIC THREAT"]=[{type:"path",stroke:!1,d:"m 80.3,85.6 c -0.5,0 -0.9,0.3 -1.4,0.8 -0.4,0.5 -0.8,1.2 -1.3,2 -0.8,1.7 -1.6,3.9 -2.4,6.3 -1.5,4.7 -2.8,9.8 -3.4,11.3 l 0,0 -0,0 c -2,7 -5.8,15.2 -7,21.6 l -0.1,0.2 0.2,0 20.9,0.6 0.2,0 0,-0.2 0,-1.9 0,-0.2 -0.2,-0 -17.6,-0.7 12,-37.1 39.1,0 11.9,37.1 -17.5,0.7 -0.2,0 0,0.2 0,1.9 0,0.2 0.2,0 20.9,-0.6 0.2,-0 -0.1,-0.2 c -1.3,-6.4 -5.1,-14.7 -7,-21.6 l -0,0 0,-0 c -0.6,-1.6 -1.9,-6.7 -3.4,-11.3 -0.8,-2.3 -1.6,-4.6 -2.4,-6.3 -0.4,-0.8 -0.8,-1.5 -1.3,-2 -0.4,-0.5 -0.9,-0.8 -1.4,-0.8 l -39.4,0 z M 99.3,120 c -1.7,-0 -3.3,0.8 -4.5,2 -1.2,1.2 -2,2.9 -2,4.5 l 0,1.9 c 0,1.7 0.8,3.3 2,4.5 1.2,1.2 2.8,2 4.5,2 l 1.3,0 c 1.7,0 3.3,-0.8 4.5,-2 1.2,-1.2 2,-2.8 2,-4.5 l 0,-1.9 c 0,-1.7 -0.8,-3.3 -2,-4.5 -1.2,-1.2 -2.8,-2 -4.5,-2 l -1.2,0 -0,0 z m -2.7,-42.1 0,0.2 -0.2,0 0,4.2 0,0.2 0.2,0 3.3,0 0.2,0 0,-0.2 0,-4.2 0,-0.2 -0.2,0 -3.3,0 z M 99,57.1 c -1.1,2.5e-5 -2.3,0.2 -3.3,0.5 -1.1,0.3 -2.1,0.8 -3.2,1.4 l -0.1,0.1 0,0.1 0,3.1 0,0.4 0.3,-0.2 c 1.1,-0.7 2,-1.3 3,-1.6 1,-0.4 1.9,-0.6 2.7,-0.6 1.1,2.2e-5 2,0.3 2.7,0.8 0.7,0.6 1,1.3 1,2.2 -1e-5,0.5 -0.1,1 -0.4,1.5 -0.3,0.5 -0.7,1 -1.3,1.6 l 0,0 -1.5,1.5 c -1,0.9 -1.7,1.8 -2,2.5 -0.3,0.7 -0.5,1.7 -0.5,2.8 l 0,2.5 0,0.2 0.2,0 3.1,0 0,-0.2 0.2,0 0,-2 c -10e-6,-0.6 0,-1 0.1,-1.3 0,-0.3 0.1,-0.6 0.1,-0.8 0.1,-0.2 0.2,-0.5 0.4,-0.8 0.2,-0.3 0.6,-0.7 1.1,-1.2 l 1.4,-1.4 c 1,-0.9 1.7,-1.8 2.1,-2.6 l 0,-0 c 0.4,-0.8 0.6,-1.6 0.6,-2.5 -2e-5,-1.8 -0.6,-3.3 -1.9,-4.3 -1.3,-1.1 -2.9,-1.6 -5,-1.6 z"}],t["AC.IC.CAVE ENTRANCE"]=[{type:"path",fill:!1,d:"m 55,100 55,0 30,-20 0,40 -30,-20"}],t["AC.IC.DROUGHT"]=[{type:"path",stroke:!1,d:"m 87.6,127.4 c 1.3,0.6 4.5,0 6.1,0 h 4.2 l -2,-5.9 -4.9,-0.3 c -5.7,10.8 -2.4,4.3 -3.4,6.2 z m -24.1,-7 c -0.6,1.9 17.6,6.9 20.5,7.4 2.7,-1.8 4.5,-2.4 4.8,-6.7 -4,0 -11.4,-0.8 -14.8,-1.7 -2.2,-0.6 -4.2,-1.2 -6.4,-1.7 -3.5,-0.9 -4.2,-1.5 -4.2,2.6 z m 35.9,6.1 6.7,-0.3 18.6,-1.7 c 1.5,-0.4 4.5,-0.4 6,-1.4 -1.3,-2.6 -2.4,-4.1 -3.7,-6.6 -1.4,-2.6 -1.9,-4.9 -3,-7.2 -3.7,0.8 -4.7,3.5 -6.3,4 -3.5,1.1 -4.8,0.4 -6.7,3.8 -1.7,3 -2.5,3.3 -5.3,5.2 -2.4,1.7 -3.6,2.8 -6.3,4.2 z m -2.8,-9 c 0,3.7 0.5,4.2 2.2,7.3 l 8.5,-7.1 -0.2,-0.2 c -1.7,-0.4 -2.4,-1.5 -4.8,-2.2 -1.6,-0.4 -4.1,-1.3 -5.8,-1.4 v 3.6 h 0.1 z m 37.6,0.5 c -0.9,0 -1,-0.2 -1.9,-0.2 l 1,2.4 2.7,-2.8 c -0.9,0.2 -0.8,0.5 -1.8,0.5 z m -51.3,-0.3 c -0.1,1.9 7.7,1.5 9.3,1.5 h 2.8 c 0,-1.7 -0.7,-2.8 -0.8,-4.4 -0.1,-2.5 -0.4,-1.8 -3.1,-2.1 -4,-0.4 -4.6,-2 -7.7,-2.8 l -0.6,7.7 z m -25.5,-12.6 3,12.1 c 0.7,-3 2.2,-4.5 2.8,-7.3 0.3,-1.8 0.1,-2.6 0.9,-4 0.4,-0.7 1.3,-2.8 1.5,-3.6 -1.4,-0.3 -6.9,-1.6 -8.6,-1.6 l 0.4,4.4 z m 69.9,-2.2 c -1,4.1 -0.7,3.5 1,7 1.2,2.4 2,4.4 3.1,6.6 5.8,-0.5 6.2,-0.5 9.4,-3.6 1.6,-1.6 1,-6.8 2,-8.3 -2.5,-1.2 -1.7,-0.6 -4.6,-1.3 -4.5,-1 -6.6,-0.4 -10.9,-0.3 z m -30.9,1.1 v 0.8 c 0,2.2 -0.1,3.3 0,5.4 0.1,3.3 -0.3,2.5 3.1,2.8 1.2,0.1 3.5,1 4.5,1.4 0.7,0.4 1.5,0.5 2,0.8 0.8,0.4 0.3,0.6 1.7,1.4 l -0.2,-0.2 5.6,-4.7 c 3.1,0 4.2,0.4 5.8,-1.3 2.4,-2.5 0.8,-1.4 4,-3.1 l 0.6,-3.1 c -2.5,0.6 -5.5,2.2 -8.2,1.1 -2.6,-1.1 -3.8,-2.8 -7.4,-2.8 l -1.6,-0.3 -9.9,1.8 z m -32.1,11.2 c 1.3,0 5.8,0.7 6.9,1 1.4,0.4 4.7,2.3 5.6,2.3 h 2.8 c 1,0 0.9,-0.3 1.7,-0.5 l 1.7,-8.3 -5.2,-4.5 -9,-2 c -0.4,1.7 -2.4,3 -3.1,5.1 -0.3,0.7 -1.5,6.3 -1.5,7 z m 41,-35.1 c 1,1.2 1.4,2.8 2.2,4.2 0.4,0.6 2.9,3.3 2.9,3.5 0,0.8 -0.9,2.3 -1.3,2.3 -2.7,0 -3.8,-6.7 -3.8,-10 z m -1.8,-1.2 c -0.3,1 -1.9,4.5 -2.5,5.6 -0.9,1.8 -1.9,3.5 -4.4,3.5 -0.5,0 -1,-0.4 -1,-0.8 0,-3.1 3.8,-5.8 5.2,-7.6 l 2.8,-0.8 z m 9.5,8.6 h -0.8 c -2.3,0 -6.9,-8 -6.9,-9.7 0,-0.1 0.3,-0.5 0.3,-0.5 1.7,0.5 7.9,6 7.9,8.7 -4e-4,0.5 -0.4,0.8 -0.5,1.5 z m 0.6,-6 c -0.7,-0.3 -1.7,-1 -2.4,-1.3 -1.4,-0.8 -3.5,-2.9 -4.7,-3.3 l 1.1,-1.3 c 3.1,1.5 10.1,1.3 10.1,5.7 0,0.3 -0.8,0.8 -1,1 -0.8,-0.3 -2,-0.4 -3.1,-0.8 z m -24.9,1.3 h -1 c 1,-2 -2.2,-6.7 -4.4,-7.2 -2.2,1.2 -4.2,0.6 -5.5,3.3 -0.4,1 -0.7,2.2 -1.5,2.8 -0.8,0.6 -2.4,0.8 -2.4,1.9 0,1.5 4.3,0.4 4.9,-0.2 1.2,-1.1 2.4,-2.1 4.5,-2.1 2,0 2.9,5.8 3.1,8.2 0.2,3.2 -2.3,7.7 -2.2,9.5 l 0.9,6.8 -4.4,-0.3 c 2.1,3.1 8.5,6 13.4,6.4 l -0.4,-7.7 -5.6,1.3 c 0,-4.4 -2,-5.5 -0.5,-9.5 0.6,-1.7 1,-2.2 1,-4.7 0,-1.1 0.2,-4.6 0.6,-5.3 1.5,-2.5 1.9,-5.6 3.1,-8.4 1.2,-2.8 5,-2.6 8.3,-3.5 l 1.2,1.3 -1,0.3 0.8,1.8 c -1.7,2 -2.9,2.9 -4.5,5 -0.8,1 -3.8,6.3 -0.6,6.3 h 1 c 3.9,0 5.1,-7.1 6.9,-9.2 0.4,4.4 1.2,9.5 4.4,11.2 1.7,-0.4 2.2,-1.1 2.6,-2.8 0.7,0.2 0.5,0.3 1,0.3 1.3,0 2,-1.1 2,-2.3 V 85.8 c 0,-2.1 -1.2,-2.4 -1.5,-3.8 0.8,0.4 2.2,1 3.3,1 h 0.5 c 1.2,0 1.3,-0.6 1.8,-1.3 -0.2,-2.5 -1.5,-3.9 -3.5,-4.6 -1.3,-0.4 -5.2,-1.7 -6.7,-1.7 l 0.5,-1 h -0.7 l 0.8,-1.6 -4.9,1 c -0.9,-0.6 -1.2,-1.5 -2.6,-1.5 h -1.8 C 92.3,72.2 88.7,75.8 88.7,82.9 l 0,0 z"}],t["AC.IC.FLOOD"]=[{type:"path",stroke:!1,d:"M77.2,92.9L77.3,92.8L99.3,72.5L99.7,72.1L100,72.1L100.4,72.5L122.4,92.8L123.5,93.9L122.4,93.9L122.4,115.902C123.023,115.106 123.657,114.5 124.4,114.5C125.454,114.199 124.857,116.712 125.5,117.6C125.988,118.273 126.805,118.721 127.609,118.928C130.146,119.58 132.747,117.303 134.5,116.2C135.043,115.859 136.356,115.26 136.4,115.9C136.652,119.558 136.526,123.235 136.4,126.9L63.7,126.9L63.7,114.9C64.819,117.943 66.835,120.948 70.637,119.05C72.357,118.192 73.209,115.745 75.1,115.4C75.464,115.334 76.266,116.335 77.1,117.278L77.1,93.9L76.2,93.9L77.1,93L77.1,92.9L77.2,92.9ZM121.2,117.544L121.2,94.1L78.3,94.1L78.3,118.49C78.521,118.667 78.727,118.795 78.911,118.845C83.407,120.084 82.345,116.009 86.9,115.5C87.588,115.423 90.549,119.114 91.583,119.536C95.694,121.215 95.826,116.694 98.9,115.9C100.074,115.597 100.538,118.237 100.9,118.5C101.86,119.198 103.028,119.651 104.2,119.837C109.33,120.655 108.685,117.216 111.9,114.9C112.848,114.217 113.556,116.602 113.563,116.613C115.1,119.229 115.092,120.273 118.659,119.606C119.666,119.418 120.465,118.529 121.2,117.544ZM99.75,73.846L99.8,73.8L99.7,73.8L99.75,73.846L79.3,92.7L120.2,92.7L99.75,73.846Z"}],t["AC.IC.INVERSION"]=[{type:"path",stroke:!1,d:"M 69.5,87.9 C 69.5,86.7 73.6,83.9 75.5,83.9 h 0.3 c 3.3,0 9,9.1 15.2,9.1 h 1.8 c 5.4,0 11.3,-9.1 14.9,-9.1 3.5,0 8.8,9.1 15.2,9.1 h 0.9 c 8.5,0 10.5,-4.4 15.5,-7 l -5.3,-6.4 c -3.4,1.8 -4.1,4.6 -9.5,5.3 -2.2,0.3 -6.6,-3.9 -8.3,-5.5 -8,-6.8 -13,-3 -19.4,2 -3.9,3.1 -3.9,5.3 -8.5,1.3 -2.2,-1.8 -5.6,-4.8 -8.2,-6 -3.8,-1.8 -8.6,-0.7 -11.4,1.2 -1.6,1 -7.3,5.2 -7.3,6.9 v 52.2 h 8.2 V 87.9 z m -9.4,-16.4 79.9,0 0,-8.5 -79.9,0 z"}],t["AC.IC.TSUNAMI"]=[{type:"path",stroke:!1,d:"m 63,122 39.5,-0.1 30.8,0.3 c -7.1,0 -12.8,-1.7 -16.9,-4.8 -3.7,-2.9 -7.7,-8 -7.7,-14.4 0,-9.1 6.9,-16.5 15.8,-16.5 h 0.7 c 6.5,0 8.2,2.8 11.8,5.3 -2,-8.6 -10.6,-14.2 -21.4,-14.2 h -0.2 c -18.2,0 -44.9,33 -52.4,44.3 l 0,0 0,0 z"}],t["AC.IC.BIRD"]=[{type:"path",stroke:!1,d:"m 81.6,92.5 -18.4,2.9 v 0.3 l 6.6,0.5 c -0.7,0.5 -3.3,1.1 -4.5,1.5 -2.6,0.9 -2,0.3 -3.5,2.4 l 3.4,0.1 -1,1 c 1.8,0 3.3,0.1 4.8,0.2 1.4,0.1 1.9,-1.3 3.5,-1.4 3,-0.2 5.7,0.2 9.3,0.3 l -0.8,0.5 c 0.6,0.1 0.7,0.2 1.4,0.2 h 1.6 l 0.1,0.9 2.9,1.2 1.6,-0.1 c 1.6,1.1 1.9,2.3 5.2,2.4 0.2,2.7 0.6,3.8 3,4.4 v 0.8 c 0,2.2 0.2,4.8 2.1,5 l 1.2,5.3 h -0.4 v 0.4 c -0.3,-0.3 -1.4,-1.2 -1.8,-1.2 h -0.2 c -0.5,0 -0.5,0.1 -1,0.2 0.6,0.8 2.7,1.7 3.1,2.7 0.5,1.6 0.1,3.8 0.2,5.3 l 0.9,0.6 0.8,-0.1 0.1,-0.8 -0.1,-2.7 c 0.7,0.5 2.7,3 3.3,3 h 1 c -0.5,-2 -1.8,-2.4 -2.7,-3.9 l 3.7,1.1 c -1,-1.5 -0.9,-1.8 -2.9,-2.3 -3.1,-0.8 -1.8,-1.9 -3.1,-2.2 l -1,-5.4 c 1,-0.2 1.4,-1 1.4,-2.2 l 0.1,-1.6 -0.3,-2.6 h 1 c 0.7,0 0.7,-0.2 1.4,-0.4 0.1,1.6 1.2,3.3 2.7,3.4 l 3.1,6.3 c -0.3,0.3 -0.4,0.3 -0.4,0.8 v 0.7 l -4.4,-0.9 v 0.2 c 0.8,0.7 3.7,1.7 5.1,2.8 1.1,0.8 1.2,0.6 2,1.9 0.3,0.5 1.3,2.2 1.9,2.2 h 0.8 l 0.2,-0.1 -1.7,-3.2 4.3,1.9 c -0.1,-2.1 -2.1,-1.5 -3.6,-2.8 h 3 c -1.3,-1.1 -1.6,-0.9 -3.5,-1.2 -1.6,-0.2 -1.7,-1.2 -2.7,-2.1 -1.1,-1.2 -2,-4.9 -2.9,-6.6 1.2,-1.8 1,-1.4 1,-4.4 4.8,-2.3 5.6,-2.1 9.3,-5.9 2.7,-2.7 3.9,-6.1 5.8,-9.7 0.9,-1.8 1.5,-3.3 2.2,-5.2 0.7,-1.8 0.7,-4.7 1.4,-6.3 2.3,-4.6 9,-3.2 10.3,-5.2 l -4.4,0.2 v -0.2 l 5,-0.6 c -2.2,-1.9 -4.8,-1.4 -8.3,-1.8 -2.1,-0.3 -2.9,0.7 -4.4,-0.3 -1.4,-1 -1.6,-1.2 -3.7,-1.5 -3.1,-0.5 -5.6,1.2 -7.4,2.5 -1.7,1.3 -3.2,5.2 -4.2,6.1 -0.3,0.2 -6.1,2.7 -7.1,3.2 -2.9,1.5 -3.5,2.5 -7.3,3.1 -6.3,1 -9.9,3.4 -14.2,6.3 l 0,0 z"}],t["AC.IC.INSECT"]=[{type:"path",stroke:!1,d:"m 77.4,88.8 0.1,-0.3 6.1,4.9 -0.1,0.2 c -2.2,1.5 -7.7,9 -10,9 l -1.6,-0.1 5.6,-13.7 z m 7.1,3.3 c -0.4,-1.7 -5,-6.4 -6.7,-7.2 -0.4,0.3 -1.8,1 -1.8,1.6 0,0.8 0.3,1 0.5,1.5 l -5.6,14.7 h -1 c 0.2,0.9 0.5,0.7 0.5,1 0,0.3 -3,7.8 -3.3,8.7 -0.6,1.4 -1,2.7 -1.6,4.2 -0.3,0.8 -0.6,1.6 -0.9,2.2 -0.5,1.1 -0.6,0.3 -1.4,1.7 l -1.3,0.3 c 0.3,0.5 1.8,0.5 2.5,0.4 1.2,-0.2 0.4,-1 0.8,-2.2 0.7,-1.8 1.4,-3.5 2.1,-5.4 0.5,-1.2 3.7,-10.3 4.6,-10.3 h 1.3 c 0.8,0 1,0.3 1.5,0.5 l 2.3,-2.8 c 2.7,1.8 8.5,4.6 12.8,4.6 h 0.7 l 0.2,-0.1 -3.5,-5 -9.9,-0.1 6.5,-6.3 c 4.3,2.9 11.7,16.9 14.9,16.9 h 0.3 c 1.4,0 1.3,-0.6 1.8,-1.6 -0.9,-3.7 -4.8,-6.3 -7.3,-8.5 -2.4,-2 -6.1,-6.5 -8.3,-7.9 1.2,-1.7 10.3,-10.8 12.2,-11.3 l 0.9,7.7 0.1,2.9 -1.2,7.4 h -1.8 l 5.2,4.4 7.2,-3.9 c -0.5,2.1 -0.3,2.5 -2.2,3.4 -0.6,0.3 -3.7,1.9 -3.7,2.3 0,0.5 0.7,1.7 0.7,3.1 0,2.9 -3.1,4.4 -5.8,3.3 -2.1,-1 -4.9,-5.1 -5.5,-5.1 h -1 c -4.6,0 -6.7,1.6 -10.5,1.6 h -0.5 c -1.9,0 -2.5,-0.7 -4.1,-0.7 h -0.5 c -0.6,0 -1,0.4 -1,1 0,3.2 12.3,4.7 16.9,4.6 l 13.1,-0.3 v 0.3 c -0.9,1.3 -5.8,4.8 -8,4.8 -0.1,0.2 -0.5,0.7 -0.5,0.8 0,0.7 0.1,0.7 0.3,1.3 0.7,0.1 0.5,0.3 1,0.3 0.5,0 0.5,-0.2 1,-0.5 v -1.3 l 7.7,-5.4 -1.6,6.1 c -0.9,0.1 -1.3,0.4 -1.3,1.3 0,0.9 0.5,0.7 1.4,1.2 l 1.2,-1.4 c 0,-0.2 -0.7,-1.3 -0.7,-1.4 0,-1.3 2.4,-7.6 2.8,-9.5 l 15.6,-0.5 1.2,8.4 -0.4,0.1 c 0.3,0.5 0.3,1 1,1 1,0 1.1,-0.3 1.6,-0.7 -0.5,-1 -0.5,-1.9 -1.7,-1.3 l -0.8,-6.7 4.8,5.5 -0.7,0.8 1.4,1.2 c 0.5,-0.3 1,-0.2 1,-1 v -0.5 c 0,-0.9 -0.9,-1 -1.6,-1.2 l -4.5,-5 0.3,-1 h -8.5 c 0,-5 2,-8.2 2.3,-12.4 l -9.2,0.4 -0.8,2.5 h -4.6 c -1.8,0 -2.8,-8 -2.9,-10.3 0,-2.4 -0.3,-4.1 -0.2,-6.4 0.1,-1.4 1,-5.1 -1,-5.1 h -0.7 c -1,0 -1.3,1 -1.6,1.8 -0.3,1 -1,1.4 -1.6,2 -1.2,1.3 -2.3,2.4 -3.5,3.6 -1.2,1.2 -6.2,6.7 -7.4,7 l 0,0 z m 37.9,8 c 0,-0.3 0.3,-0.5 0.7,-0.5 h 0.7 l 0.1,0.5 -0.3,1 h -1 c -0.1,-0.7 -0.3,-0.4 -0.3,-1 z m 3.6,-1.8 c -0.2,0 -1.6,-1.8 -3.3,-1.8 h -0.5 c -2,0 -2,2.2 -2.5,3.9 -0.5,1.4 -1.4,3.7 -1.4,5.4 0,0.6 0.4,1 1,1 2.4,0 6.4,-5.2 6.9,-7.4 3.9,0 11.1,-1.1 11.8,-3.9 -2.6,0.7 -2.9,2.4 -8,2.8 1.8,-1.6 5.6,-4.3 5.9,-7.2 h -0.5 c -0.8,3.1 -5.6,7.2 -9.5,7.2 z"}],t["AC.IC.MICROBIAL"]=[{type:"path",stroke:!1,d:"m 83.9,93.3 c -3.3,0 -6,2.7 -6,6 0,3.3 2.7,6 6,6 3.3,0 6,-2.7 6,-6 0,-3.3 -2.7,-6 -6,-6 z M 100,85.5 c -11.1,0 -21.2,1.5 -28.6,4.1 -3.7,1.3 -6.7,2.8 -8.8,4.5 -2.1,1.7 -3.4,3.7 -3.4,5.9 0,2.2 1.3,4.2 3.4,5.9 2.1,1.7 5.1,3.2 8.8,4.5 7.4,2.5 17.5,4.1 28.6,4.1 11.1,0 21.2,-1.5 28.6,-4.1 3.7,-1.3 6.7,-2.8 8.8,-4.5 2.1,-1.7 3.4,-3.7 3.4,-5.9 0,-2.2 -1.3,-4.2 -3.4,-5.9 -2.1,-1.7 -5.1,-3.2 -8.8,-4.5 C 121.2,87.1 111.1,85.5 100,85.5 z m 0,1.4 c 11,0 21,1.5 28.2,4 3.6,1.2 6.5,2.7 8.4,4.3 1.9,1.6 2.9,3.2 2.9,4.8 0,1.6 -1,3.3 -2.9,4.8 -1.9,1.6 -4.8,3 -8.4,4.3 -7.2,2.5 -17.1,4 -28.2,4 -11,0 -21,-1.5 -28.2,-4 -3.6,-1.2 -6.5,-2.7 -8.4,-4.3 -1.9,-1.6 -2.9,-3.2 -2.9,-4.8 0,-1.6 1,-3.3 2.9,-4.8 1.9,-1.6 4.8,-3 8.4,-4.3 7.2,-2.5 17.1,-4 28.2,-4 z"}],t["AC.IC.REPTILE"]=[{type:"path",stroke:!1,d:"m 93.5,82.3 c 0,-2 1.8,-2.7 1.8,-4.3 0,-1 -0.6,-1.5 -1.2,-2 -2.8,0.3 -6.5,0.6 -7.4,2.7 -0.5,1.2 -0.5,2.4 -1.2,3.9 -0.5,1 -1.2,2.4 -1.2,3.8 0,0.8 0.4,0.7 0.4,1.6 v 0.8 c 0,2.2 -2.4,3.5 -0.6,6.1 -0.2,0.3 -2,1.5 -2.4,1.7 -1.7,1 -1.8,-0.6 -2.6,-0.6 h -0.8 l -0.3,-1.2 c -0.5,-0.3 -1,-0.8 -1.7,-0.8 -0.8,0 -0.8,0.5 -0.6,1 l -2.1,0.4 -0.8,2.3 h 1 c 0.9,0 1.4,0.4 1.6,1.2 l -1.5,1.2 -0.1,0.4 c 2.8,0.3 4.6,-0.6 7.2,-1.2 1.5,-0.4 6.8,-0.6 7.3,-1 l 0.1,-2.2 c 1,0.3 2,1.3 3.1,1.7 1.2,0.4 1.7,0.8 3.1,1.2 2.4,0.6 4.5,1.2 7.7,1.2 h 0.6 l 6.1,-0.6 c 0,2.6 2.3,2.5 2.8,4.5 -1.3,-0.3 -2.3,-2 -3.5,-2 -0.1,0 -0.4,0.1 -0.6,0.2 l 0.3,1.2 -1.6,0.3 v 0.8 l 0.6,0.4 -0.9,0.6 1,1 c -0.2,0.8 -0.7,0.6 -0.7,1.3 0,0.4 0.1,0.6 0.6,0.6 0.6,0 1.6,-1 2.8,-1 1.9,0 8.3,0.8 8.3,-0.8 v -0.2 c 0,-1.5 -3.5,-1.6 -3.3,-5.5 5,2.6 9.3,7.4 4.5,13.6 -1.5,2 -4.1,3.6 -6.7,4.5 -1.4,0.5 -7.4,1.9 -9.3,1.5 -4.2,-0.8 -5.4,-0.8 -8.8,-2.4 -2.6,-1.2 -4.7,-2.5 -7,-4 -3.9,-2.4 -10,-6.1 -16.1,-6.1 -5,0 -11.4,3.1 -11.4,7.9 1.2,-0.6 1.3,-1.3 2.1,-2.2 0.5,-0.6 1.7,-1.3 2.4,-1.7 1.5,-1 3.9,-1.8 6.5,-1.8 h 1 c 4.4,0 11.6,4.7 14.5,6.7 4.5,3.1 8.1,5.5 14.7,6.7 7,1.2 12.7,-0.1 17.4,-2.8 1.9,-1.1 4.3,-3.3 5.5,-5.1 1,-1.6 2.9,-5.4 2.7,-8 l -0.3,-2.6 c 0.3,0.1 2.8,3.7 3.6,4.5 0.8,0.8 3.8,2.5 5.3,2.5 1,0 4.4,-2.2 4.7,-2.9 l -1.3,-0.6 1.2,-1 c -1.5,-1 -0.8,-0.6 -2.4,-0.6 h -1 c 0,-1.4 -0.3,-1.8 -1.3,-1.6 l 0.2,0.1 -1.7,3.4 c -1.4,0 -2.9,-0.9 -3.6,-1.8 0,-0.1 -1.3,-3.8 -1.3,-3.9 -0.6,-2 -0.6,-2.2 -1.8,-3.6 -1.2,-1.3 -1.9,-1.2 -3.4,-1.9 l -0.1,0.6 c -0.6,-1.8 -6.2,-6.5 -8.1,-7.4 -2.2,-1.2 -3.2,-1.2 -6,-1.7 -2.1,-0.3 -5.4,0.3 -7,-0.5 0.4,-1.5 1.6,-0.6 1.6,-2.2 0,-0.5 -0.7,-0.4 -1.2,-0.4 0.6,-1.2 -0.3,-1 -1.3,-1 0.1,-0.3 0.4,-0.6 0.4,-1 0,-0.3 -0.3,-0.4 -0.6,-0.4 -0.4,0 0,0.6 -1.3,0.6 -0.3,-1 -0.3,-1.3 -1.5,-1.4 v 1.6 h -1.3 v 0.6 c 0,0.8 0.6,1.5 1,2.2 -0.4,0.7 -0.3,2 -1.4,2 -0.6,0 -1.8,-1.5 -3.1,-1.9 -1.3,-0.4 -3,0.5 -3,-1.5 -0,-0.9 2.1,-2.5 2.8,-3.5 l 0,0 z"}],t["AC.IC.RODENT"]=[{type:"path",stroke:!1,d:"m 117.2,80.3 c 0.6,1.2 0.6,1.7 1.5,2.6 0.6,0.7 1.8,1.2 1.9,2.2 -2,-0.1 -4.2,-3.3 -4.4,-5.3 -2.1,-0.5 -8.4,-3.6 -10.9,-4.7 -3.1,-1.3 -8.3,-2.7 -12.7,-2.7 h -2.2 c -4,0 -9,2.5 -11.3,4.2 -3,2.2 -5.2,5.2 -5.2,10.4 v 0.7 c -4.6,1.1 -11.7,8.4 -11.7,13.9 v 2.4 c 0,6.2 7.7,10 11.8,12.7 2.5,1.7 4.7,3.3 7,5.1 2.2,1.7 4.7,4.2 6.7,5.5 -2.1,-9 -22.4,-12.7 -22.4,-25.1 0,-4.5 4.9,-9.3 8.5,-10.2 -0.1,0.6 -0.3,0.6 -0.3,1.3 v 0.5 c 0,4.5 7.8,4.1 11.5,3 5.1,-1.5 8.1,-2.2 13.6,-1.2 5.4,1.1 8.3,1.5 12.7,3.6 3.7,1.9 2,1.2 4.2,3.8 1.1,1.3 1,1.1 2.9,1.3 0.8,0.1 1.8,1 2.4,1.5 h 1.7 c -1.3,-2.6 -4.9,-2.9 -5.6,-5.8 0.8,-1.5 1.7,-1.7 3.9,-1.7 0.8,0 1,0.2 1.7,0.3 -0.3,-0.6 -0.6,-1.7 0.5,-1.7 h 1.9 c 4.5,0 9,2.5 12.7,0 0,-3 0.4,-2.2 -0.9,-4.9 -0.5,-0.8 -2.1,-2.7 -2.8,-3.4 -1.6,-1.5 -5.7,-4.1 -6.7,-5.5 0,-2.8 -0.4,-3.4 -2.7,-3.9 l -0.5,1 0.5,2.7 -1,0.3 v 0.9 h -0.8 c -0.2,-2.4 -1.2,-5.8 -3.6,-5.8 h -0.2 c -1.8,-4e-4 -1.5,1 -2,1.9 z m 9.5,24.6 h 1.2 c -0.2,-2.6 -5.1,-2.8 -5.4,-5.4 l -2.2,0.3 c 0.2,1.5 1.1,2.9 2.4,3.5 0.9,0.3 1.5,0 2.3,0.6 0.4,0.3 1.1,1 1.7,1 z m -45.1,-6.1 c 1.2,1.8 5.9,4.2 8.8,4.2 1,0 1.6,-0.8 1.9,-1.5 -0.9,-1.3 -2.9,-2.8 -4.7,-3.1 -3.7,-0.8 -2.9,0.1 -6,0.4 l 0,0 z m 9.5,-1.9 c 1.3,2 5,2.9 8.3,2.9 0.8,0 1.4,-0.4 1.9,-0.7 -2,-2.9 -6.1,-2.6 -10.2,-2.2 z"}],t["AC.IC.PHARMACY"]=[{type:"path",stroke:!1,d:"m 83.3,74.5 h 13.2 c 3,0 6.2,3.8 6,7.3 -0.1,3.6 -2.9,6.6 -6.5,6.6 H 83.3 V 74.5 z m -8.7,45.9 h 8.7 V 98 h 2.4 c 0.6,0 13.6,16.1 13.6,17.2 0,0.6 -13.6,16.6 -15,19.3 l 10.5,-0.1 10.3,-12.2 9.6,12.3 10.9,-0 -15.2,-19.3 14.4,-17.8 -10.2,-0.1 -9.7,10.8 -7.4,-10 c 8.5,-2 14.1,-6.8 14.1,-17.2 0,-8.1 -7,-15.3 -15,-15.3 H 74.6 v 54.8 z"}],t["GR.IN.IC.EDUCATIONAL FACILITIES INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 99.6,107.1 h -14.8 v 31.7 h 32 v -31.7 h -14.8 V 95.2 c 0,-0.6 6.5,-3 7.5,-3.4 1.3,-0.5 6.9,-3 7.9,-3 -0.3,-0.4 -14.7,-6.3 -15.7,-6.3 h -2.3 v 24.5 z m -3.1,-45 -5.6,14.8 1.7,0 1.3,-3.8 0.1,-0.1 0.1,0 6.8,0 0.1,0 0.1,0.1 1.3,3.8 1.7,0 -5.6,-14.8 -2.1,0 z m 0.8,1.8 0.2,0.1 0.2,-0.1 2.8,7.5 0.1,0.3 -0.3,0 -5.6,0 -0.3,0 0.1,-0.3 2.8,-7.5 z m -14.8,-1.8 8.3,0 0,1.3 -6.5,0 -0.2,0 0,0.2 0,4.5 0,0.2 0.2,0 5.8,0 0,1.3 -5.8,0 -0.2,0 0,0.2 0,7 -1.6,0 0,-14.8 z m 30.3,-0.3 c 0.9,1.5e-5 1.7,0.1 2.5,0.4 l 0,0 c 0.8,0.2 1.4,0.6 2.1,1 l 0,1.6 c -0.6,-0.5 -1.3,-0.9 -1.9,-1.2 -0.8,-0.3 -1.7,-0.5 -2.6,-0.5 -1.8,1.4e-5 -3.2,0.6 -4.1,1.7 -1,1.1 -1.4,2.7 -1.4,4.7 -1e-5,2 0.5,3.6 1.4,4.7 1,1.1 2.4,1.7 4.1,1.6 0.9,2e-6 1.8,-0.2 2.6,-0.5 0.7,-0.3 1.3,-0.7 1.9,-1.2 l 0,1.6 c -0.7,0.4 -1.4,0.8 -2.1,1 -0.8,0.2 -1.6,0.4 -2.5,0.4 -2.3,0 -4,-0.7 -5.3,-2 -1.3,-1.4 -1.9,-3.2 -1.9,-5.6 0,-2.4 0.6,-4.3 1.9,-5.6 1.3,-1.4 3,-2 5.3,-2 z"}],t["ATMOSPHERIC.IC.DRIZZLE.INTERMITTENT LIGHT"]=[{type:"path",stroke:!1,fill:"rgb(0, 128, 0)",d:"m 100,82.7 c -5.5,0 -10,4.5 -10,10 0,5.5 4.5,10 10,10 0.1,0 0.1,0 0.2,0 l -0.2,0.2 c 0.9,5 -8.4,14.4 -8.4,14.4 12.8,0.1 18.4,-13.4 18.3,-23.4 l -0,0 c 0,-0.4 0.1,-0.8 0.1,-1.2 0,-5.5 -4.5,-10 -10,-10 z"}],t["ATMOSPHERIC.IC.FOG.SKY OBSCURED"]=[{type:"path",stroke:!1,fill:"rgb(255, 247, 0)",d:"m 49.6,59.7 0,8 100.9,0 0,-8 -100.9,0 z m 0,71.6 0,8 100.9,0 0,-8 -100.9,0 z m 0,-35.6 0,8 100.9,0 0,-8 -100.9,0 z"}],t["ATMOSPHERIC.IC.HAIL.LIGHT NOT ASSOCIATED WITH THUNDER"]=[{type:"path",stroke:!1,fill:"rgb(198, 16, 33)",d:"m 100,45.5 -0.9,2.1 -16,36 -0.6,1.4 1.5,0 32,0 1.5,0 -0.6,-1.4 -16,-36 L 100,45.5 z m -21.4,46.7 0.4,1.3 20,60 0.9,2.9 0.9,-2.9 20,-60 0.4,-1.3 -1.4,0 -40,0 -1.4,0 z m 2.8,2 37.2,0 L 100,150 81.4,94.1 z"}],t["ATMOSPHERIC.IC.RAIN.INTERMITTENT LIGHT"]=[{type:"path",stroke:!1,fill:"rgb(0, 128, 0)",d:"m 100,79.8 c -11.2,0 -20.2,9 -20.2,20.2 0,11.2 9,20.2 20.2,20.2 11.2,0 20.2,-9 20.2,-20.2 0,-11.2 -9,-20.2 -20.2,-20.2 z"}],t["ATMOSPHERIC.IC.DUST OR SAND.LIGHT TO MODERATE"]=[{type:"path",stroke:!1,fill:"rgb(173, 105, 75)",d:"m 140.7,85 -2,2 13,13 -13,13 2,2 14,-14 1,-1 -1,-1 L 140.7,85 z m -93.5,13.6 0,2.8 106.5,0 0,-2.8 -106.5,0 z M 98.5,62.3 c -3.2,0 -6.4,0.8 -9.2,2.2 -3.7,1.8 -6.9,4.4 -9.3,7.3 -2.3,2.9 -3.9,6.1 -3.9,9.3 0,5.6 2.9,9.9 6.9,13.2 4,3.3 9,5.8 13.9,8.3 4.9,2.5 9.7,4.9 13.1,7.7 3.4,2.8 5.4,5.8 5.4,10.1 0,3.6 -4,9 -10,11.6 -6,2.6 -13.6,2.7 -20.9,-3.4 l -2.7,3.2 c 8.4,7.1 18,7.2 25.3,4 7.2,-3.1 12.5,-9.2 12.5,-15.4 0,-5.6 -2.9,-10 -6.9,-13.3 -4,-3.3 -9,-5.8 -13.9,-8.2 -4.9,-2.5 -9.7,-4.9 -13.1,-7.7 -3.4,-2.8 -5.4,-5.8 -5.4,-10 0,-1.7 1,-4.3 2.9,-6.7 1.9,-2.4 4.7,-4.7 7.8,-6.2 6.2,-3 13.5,-3.1 19.9,4.4 l 3.2,-2.7 C 109.5,64.4 103.9,62.3 98.5,62.3 z"}],t["ATMOSPHERIC.IC.SNOW.INTERMITTENT LIGHT"]=[{type:"path",stroke:!1,fill:"rgb(0, 128, 0)",d:"m 111.5,78.9 -26.4,40 3.3,2.2 26.4,-40 -3.3,-2.2 z m -23.1,0 -3.3,2.2 26.4,40 3.3,-2.2 -26.4,-40 z M 80,98 l 0,4 40,0 0,-4 -40,0 z"}],t["ATMOSPHERIC.IC.STORMS.THUNDERSTORM LIGHT TO MODERATE - WITH HAIL"]=[{type:"path",stroke:!1,fill:"rgb(198, 16, 33)",d:"M 101 51.9 L 99.7 54.4 L 85.8 82.3 L 84.8 84.3 L 87 84.3 L 114.9 84.3 L 117.2 84.3 L 116.2 82.3 L 102.2 54.4 L 101 51.9 z M 101 58.1 L 112.7 81.5 L 89.3 81.5 L 101 58.1 z M 78.3 87.7 L 78.3 90.5 L 83.9 90.5 L 83.9 145 L 86.7 145 L 86.7 90.5 L 117.8 90.5 L 102.8 116.4 L 102.4 117.1 L 102.9 117.8 L 117.8 140.9 L 111.2 136.8 L 109.8 139.2 L 120.9 146.2 L 123.3 147.7 L 123 144.9 L 121.7 130.9 L 118.9 131.2 L 119.6 138.6 L 105.7 117 L 121.5 89.8 L 122.7 87.7 L 120.3 87.7 L 78.3 87.7 z "}],t["ATMOSPHERIC.IC.STORMS.FUNNEL CLOUD (TORNADO/WATERSPOUT)"]=[{type:"path",stroke:!1,fill:"rgb(198, 16, 33)",d:"M 125.7,59.1 112.4,72.4 112,72.8 l 0,0.6 0,53.3 0,0.6 0.4,0.4 13.3,13.3 1.9,-1.9 -12.9,-12.9 0,-52.2 12.9,-12.9 -1.9,-1.9 z m -51.5,0 -1.9,1.9 12.9,12.9 0,52.2 L 72.4,139.1 74.3,140.9 87.6,127.6 88,127.2 l 0,-0.6 0,-53.3 0,-0.6 L 87.6,72.4 74.3,59.1 z"}],t["ATMOSPHERIC.IC.TROPICAL STORM SYSTEMS.TROPICAL STORM"]=[{type:"path",stroke:!1,fill:"rgb(198, 16, 33)",d:"M 112.1 55 C 96.9 59.9 76.7 81.8 82.2 101.4 C 82.9 110.6 90.6 117.9 100 117.9 C 100 117.9 100 117.9 100.1 117.9 C 99.3 128.2 87.9 145 87.9 145 C 103.1 140.1 123.3 118.2 117.8 98.6 C 117.1 89.4 109.4 82.1 100 82.1 C 100 82.1 100 82.1 99.9 82.1 C 100.7 71.8 112.1 55 112.1 55 z M 100 84.5 C 106.8 84.5 112.5 88.8 114.6 94.8 C 114.8 95.2 114.9 95.6 115 96 C 115 96.1 115 96.1 115 96.2 C 115.1 96.6 115.2 96.9 115.3 97.3 C 115.4 98.1 115.5 99.1 115.5 100 C 115.5 101.1 115.4 102.1 115.2 103.1 C 115 104.1 114.7 105 114.4 105.8 C 114.4 105.9 114.3 105.9 114.3 106 C 114.1 106.4 114 106.7 113.8 107.1 C 113.7 107.2 113.7 107.3 113.7 107.3 C 113.6 107.4 113.6 107.5 113.5 107.6 C 113.3 107.9 113.1 108.3 112.9 108.6 C 112.4 109.3 111.9 110 111.3 110.6 C 111.2 110.7 111.1 110.8 111.1 110.9 C 110.8 111.1 110.5 111.4 110.3 111.6 C 110.2 111.7 110.2 111.7 110.1 111.8 C 109.8 112 109.5 112.3 109.2 112.5 C 109.1 112.5 109.1 112.5 109.1 112.5 C 108.9 112.7 108.6 112.9 108.4 113 C 108.1 113.2 107.8 113.4 107.5 113.6 C 107.4 113.6 107.4 113.6 107.4 113.7 C 106.6 114.1 105.7 114.4 104.9 114.7 C 104.7 114.8 104.5 114.8 104.3 114.9 C 104 115 103.6 115.1 103.3 115.2 C 103.2 115.2 103.1 115.2 103.1 115.2 C 102.1 115.4 101.1 115.5 100 115.5 C 93.3 115.5 87.6 111.3 85.4 105.3 C 85.4 105.3 85.4 105.2 85.4 105.2 C 85.3 104.8 85.2 104.5 85.1 104.2 C 85 104 85 103.9 85 103.8 C 84.9 103.5 84.8 103.2 84.8 102.9 C 84.7 102.5 84.6 102 84.6 101.6 C 84.5 101.1 84.5 100.5 84.5 100 C 84.5 99 84.6 98 84.8 97 C 84.8 97 84.8 96.9 84.8 96.9 C 84.9 96.4 85 96 85.2 95.6 C 85.3 95.2 85.4 94.9 85.5 94.5 C 85.6 94.3 85.6 94.2 85.7 94 C 85.7 93.9 85.8 93.8 85.8 93.8 C 86 93.4 86.2 93 86.3 92.7 C 86.4 92.6 86.4 92.5 86.5 92.4 C 86.7 92.1 86.9 91.7 87.1 91.4 C 87.3 91.1 87.5 90.8 87.8 90.5 C 88 90.2 88.2 90 88.4 89.7 C 88.6 89.5 88.8 89.3 88.9 89.1 C 89 89 89.1 89 89.2 88.9 C 89.4 88.7 89.7 88.4 89.9 88.2 C 90.2 88 90.5 87.8 90.8 87.5 C 90.8 87.5 90.9 87.5 90.9 87.5 C 91.1 87.3 91.4 87.1 91.6 87 C 91.9 86.8 92.2 86.6 92.5 86.4 C 92.6 86.4 92.6 86.4 92.6 86.3 C 93.1 86.1 93.5 85.9 94 85.7 C 94.4 85.6 94.7 85.4 95.1 85.3 C 95.3 85.2 95.5 85.2 95.7 85.1 C 96 85 96.4 84.9 96.8 84.8 C 96.8 84.8 96.8 84.8 96.9 84.8 C 96.9 84.8 96.9 84.8 96.9 84.8 C 97.4 84.7 97.9 84.6 98.4 84.6 C 98.9 84.5 99.5 84.5 100 84.5 z "}],t["AC.IC.EMT STATION LOCATION"]=[{type:"path",stroke:!1,d:"M 100 55 L 70 80 L 75 80 L 75 125 L 125 125 L 125 80 L 130 80 L 100 55 z M 95 80 L 105 80 L 105 91.3 L 114.8 85.7 L 119.8 94.3 L 110 100 L 119.8 105.7 L 114.8 114.3 L 105 108.7 L 105 120 L 95 120 L 95 108.7 L 85.2 114.3 L 80.2 105.7 L 90 100 L 80.2 94.3 L 85.2 85.7 L 95 91.3 L 95 80 z "},{type:"path",stroke:!1,fill:!!R&&U,d:"M 95 80 L 95 91.3 L 85.2 85.7 L 80.2 94.3 L 90 100 L 80.2 105.7 L 85.2 114.3 L 95 108.7 L 95 120 L 105 120 L 105 108.7 L 114.8 114.3 L 119.8 105.7 L 110 100 L 119.8 94.3 L 114.8 85.7 L 105 91.3 L 105 80 L 95 80 z "}],t["AC.IC.HEALTH DEPARTMENT FACILITY"]=[{type:"path",stroke:!1,d:"M 131.4,83.6 100,68.4 68.5,83.5 z m -26.4,14.6 0,-9.7 -10.1,0 0,9.7 -9.5,0 0,10.4 9.5,0 0,9.5 10.1,0 0,-9.5 9.6,0 0,-10.4 z m -27.2,19.5 0,-27.8 1.4,0 0,-3.7 -7.3,0 0,3.7 1.2,0 0,27.8 -1.2,0 0,3.8 7.3,0 0,-3.8 z m 48.7,0 0,-27.8 1.4,0 0,-3.7 -7.3,0 0,3.7 1.2,0 0,27.8 -1.2,0 0,3.8 7.3,0 0,-3.8 z m -56.4,5.1 0,3 59.4,0 0,-3 z m -1.8,6.1 0,2.8 63.2,0 0,-2.8 z"}],t["AC.IC.MEDICAL FACILITIES OUTPATIENT"]=[{type:"path",stroke:!1,d:"m 81.8,63.6 26.6,9 0,63.9 -26.6,-9.1 v -63.8 l 0,0 z m -1.6,65 29.9,10.4 v -10.6 h 9.8 V 61 H 80.2 v 67.6 l 0,0 z m 21.4,-18.1 c 0,1.1 1,2.6 2.2,2.6 0.8,0 1.2,-0.8 1.2,-1.6 v -0.4 c 0,-1.2 -1.1,-3 -2,-3 -0.8,0 -1.4,0.8 -1.4,1.6 v 0.8 H 101.5 z M 85.9,90.9 c 0.9,0.1 5.3,1.8 5.3,2.4 v 7.1 l 5.7,2.2 v -7.5 l 5.5,1.9 V 89.1 C 101.5,88.8 96.9,87.2 96.9,86.6 V 79.5 L 91.2,77.6 v 7.4 l -5.3,-2 v 7.9 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"M 81.8 63.6 L 81.8 127.4 L 108.4 136.6 L 108.4 72.7 L 81.8 63.6 z M 91.2 77.6 L 96.9 79.5 L 96.9 86.6 C 96.9 87.2 101.5 88.9 102.3 89.1 L 102.3 97 L 96.8 95.2 L 96.8 102.6 L 91.1 100.4 L 91.1 93.3 C 91.1 92.6 86.8 91 85.9 90.9 L 85.9 83 L 91.2 85 L 91.2 77.6 z M 102.9 108.1 C 103.9 108.1 105 109.9 105 111.2 L 105 111.6 C 105 112.4 104.6 113.2 103.8 113.2 C 102.5 113.2 101.5 111.6 101.5 110.6 L 101.5 110.6 L 101.5 109.8 C 101.5 108.9 102.1 108.1 102.9 108.1 z "}],t["AC.IC.OPERATION/EMERGENCY MEDICAL OPERATION"]=[{type:"path",stroke:!1,d:"m 73.7,89.7 c 0.4,4.9 2.3,11.3 3.4,15.6 1.4,5.7 3.5,8.7 6.1,13.1 2.2,3.6 3.4,9.6 5.6,13.4 0.7,1.3 2.8,5.3 3.6,6 0.5,0.4 5.5,4 5.6,4 1.6,0 9.7,-0.4 10.4,-0.7 0.3,-0.1 4.1,-6.6 4.1,-7 v -3 h -7.8 c -2.7,0 -5.6,-1.3 -8.4,-1.3 V 112.6 c 0,-2.4 1.3,-17.3 2.1,-18 0.8,-0.7 11.4,-8.2 11.9,-8.3 l -1,-8.5 c -0.5,0.2 -5.6,1 -6,0.9 -1,-0.2 -4.7,-1.4 -5.5,-1.8 -1.9,1.1 -4.4,1.8 -6.5,2.7 -1.6,0.7 -3.5,2.7 -5.5,3.7 -2.4,1.2 -3.9,1.7 -6.7,2.5 -1.6,0.4 -2.4,0.4 -3.3,1.5 -0.7,0.8 -1.7,1.8 -2.2,2.5 z m 27.8,36.1 c 0,-8.1 2,-16.8 1.9,-24.8 0,-1.2 0.2,-1.9 0.2,-3.2 0,-1.4 0.4,-1.4 1.2,-2.2 1.2,-1.1 2.4,-2 3.6,-3 2.1,-1.7 5,-4.8 7.1,-6.1 0.3,0.1 0.3,0.2 0.9,0.2 h 4.9 c 0.2,0.8 4.9,6.4 5.8,7.4 2.6,3.1 3.8,3.9 2.9,9.6 -0.5,3.2 -0.7,8.6 -1,12 -0.3,4 -0.9,8.1 -0.9,12.2 l -26.7,-2.2 z m -1.7,1.3 29.8,2.2 2.4,-31.4 -9.8,-12.6 -7.2,-0.3 c -0.2,0 -6.9,5.9 -7.8,6.5 -1.4,1.1 -2.5,2.3 -3.9,3.2 -1.7,1.2 -1.2,3.3 -1.4,5.9 -0.6,8.4 -2.1,18.1 -2.1,26.5 z m 12.8,-9 0.2,0 c 2.3,0 6.5,2.8 8.1,2.8 h 3 V 119.4 H 121.4 c -0.6,0 -6.1,-2.3 -7.2,-2.7 -1.5,-0.6 -6.6,0.3 -8.6,0.3 v 1.3 l 7.1,-0.3 z m -5.6,-7.9 0.2,1.5 c 3.1,-0.7 5.6,-1.4 8.7,-0.8 1.3,0.3 2.8,0.6 4.2,0.9 2.5,0.6 2.8,1.2 3.3,-1 -1.3,0 -6.8,-1.3 -8.4,-1.7 -2.5,-0.7 -5.5,0.4 -8.1,1.1 z m -0.2,-8.1 0.5,1.4 5.7,-1.9 5,3.7 8,-1 -0.3,-1.7 -7.3,1 c -0.8,-0.6 -4.7,-3.6 -5.3,-3.6 -0.5,0 -5.6,1.9 -6.2,2.2 z m 10.7,-7.3 h 1.1 c 1.2,0 2.5,-1.3 2.5,-2.5 v -0.4 c 0,-1.4 -1.6,-2.5 -3,-2.5 -4.4,-0 -3.6,5.5 -0.6,5.5 z M 67.9,81.8 c 0,1.5 3.2,4.4 4.2,5.1 l 1.5,-1.6 -2.1,-4.7 h -2.2 c -0.5,0 -1.5,1.1 -1.5,1.2 z M 110.2,70.5 c 0.8,0.4 2.4,0.8 2.4,1.9 0,0.9 -0.5,1.4 -0.6,2.1 l -2.6,-0.4 c -1,-0.1 -4.2,0.6 -5.8,0.6 v 1.1 c 0,1.1 4,0 5.6,0 h 0.4 c 1.7,0 5.4,1.2 6.2,1.9 0.5,0.5 1.4,5.2 1.9,6.2 1.8,-0.9 1.3,-0.5 0.6,-3.2 -0.3,-0.9 -1.1,-3.1 -1.1,-4 l -3.9,-1.6 1.2,-2.3 c -1.1,-2.1 -0.8,-3.6 -4,-3.6 l -0.3,1.2 z m -36.5,6.6 c 0,0.9 2,4.6 2.2,6 0.3,0.1 1.1,0.4 1.1,0.4 0.3,0 2.1,-0.9 2.8,-1.1 -0.7,-3.1 -1.7,-6.6 -4.3,-7.9 -0.2,0.7 -1.7,2.3 -1.7,2.5 z m 5.9,-3.6 c 1.9,4.1 0.4,3.7 4.2,7 l 2.4,-1.2 v -3.8 c 0,-1.5 -1.2,-3.6 -1.3,-5.3 l -1.9,-0.2 h -1.7 l -1.6,3.7 z m 7.6,-2.8 2.5,5 3.9,-0.8 c 0,-1 0.6,-2.5 0.6,-3.4 0,-2.2 -1.1,-4.7 -1.1,-6.9 H 88.5 l -1.3,6 z M 97.8,62.8 c 0,0.6 0.2,7.2 0.3,7.4 0.3,1 3.7,2.6 5.5,2.4 0.9,-0.1 2.5,-0.3 3.5,-0.4 1.8,-0.2 1.2,-0.6 1.5,-2.6 0.2,-1.9 0.6,-4.9 1.1,-6.8 -0.4,-0.8 -2.4,-4.7 -3.2,-4.7 h -5.1 c -0.7,0 -3,4 -3.5,4.7 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"M 115.6 86.6 C 113.5 88 110.6 91 108.5 92.7 C 107.3 93.7 106 94.6 104.8 95.7 C 104 96.4 103.6 96.5 103.6 97.8 C 103.6 99.2 103.4 99.9 103.4 101.1 C 103.5 109.1 101.5 117.8 101.5 125.9 L 128.2 128 C 128.2 124 128.8 119.9 129.1 115.8 C 129.3 112.4 129.6 107.1 130.1 103.8 C 131 98.1 129.8 97.3 127.2 94.2 C 126.3 93.1 121.6 87.6 121.4 86.8 L 116.5 86.8 C 115.9 86.8 115.9 86.7 115.6 86.6 z M 118.2 89.3 C 119.5 89.3 121.1 90.4 121.1 91.9 L 121.1 92.3 C 121.1 93.6 119.8 94.9 118.6 94.9 L 117.5 94.9 C 114.5 94.9 113.8 89.3 118.2 89.3 z M 113.1 100 C 113.7 100 117.6 103.1 118.4 103.7 L 125.7 102.6 L 126 104.3 L 118 105.3 L 113 101.6 L 107.3 103.6 L 106.9 102.2 C 107.5 101.9 112.5 100 113.1 100 z M 113.2 109 C 113.9 109 114.5 109.1 115.2 109.2 C 116.7 109.6 122.2 110.9 123.5 110.9 C 123 113 122.7 112.4 120.2 111.8 C 118.8 111.5 117.3 111.2 116 110.9 C 112.8 110.3 110.4 111 107.3 111.8 L 107.1 110.3 C 109 109.8 111.2 109.1 113.2 109 z M 112.5 116.5 C 113.2 116.5 113.8 116.6 114.2 116.8 C 115.2 117.1 120.8 119.4 121.4 119.4 L 123.9 119.4 L 123.9 121 L 121 121 C 119.4 121 115.1 118.2 112.9 118.2 L 112.6 118.2 L 105.6 118.4 L 105.6 117.1 C 107.1 117.1 110.4 116.5 112.5 116.5 z"}],t["AC.IC.TRIAGE"]=[{type:"path",stroke:!1,d:"M 91.6 69 C 87.3 69 83.6 71.5 83.6 75.3 L 83.6 83.3 L 80.5 83.3 C 74 83.3 73.6 88.1 71.2 91.5 C 69.3 94.3 63 94.4 63 100.9 L 63 131 L 137 131 L 137 102.6 C 137 99.5 136.2 97.3 134.7 95.6 C 133.2 94 130.8 93.6 129.1 92 C 126 88.8 126.9 83.3 119.1 83.3 L 116.2 83.3 L 116.2 75.5 C 116.2 71.3 112.9 69 108.4 69 L 91.6 69 z M 89.9 76 L 110.1 76 L 110.1 83.3 L 89.9 83.3 L 89.9 76 z M 95.3 90.4 L 104.4 90.4 L 104.4 99.4 L 112.2 94.9 L 116.8 102.8 L 109.1 107.3 L 116.8 111.9 L 112.1 119.8 L 104.4 115.3 L 104.4 124.1 L 95.3 124.1 L 95.3 115.3 L 87.6 119.7 L 83 111.8 L 90.7 107.3 L 83 102.8 L 87.6 94.9 L 95.3 99.3 L 95.3 90.4 z "},{type:"path",stroke:!1,fill:!!R&&U,d:"m 112.1,119.8 4.6,-7.9 -7.6,-4.6 7.7,-4.5 -4.6,-7.9 -7.7,4.4 -0,-8.9 -9.1,0 0,8.9 -7.7,-4.4 -4.5,7.9 7.6,4.5 -7.6,4.5 4.5,7.9 7.7,-4.4 0,8.8 9.1,0 0,-8.8 z"}],t["AC.IC.EMERGENCY PUBLIC INFORMATION CENTER"]=[t["GR.IC.FF.EMERGENCY OPERATION"],S("i")],t["AC.IC.FIRE HYDRANT"]=[{type:"path",stroke:!1,d:"m 80,131.3 v -1 c 1.3,0.1 5.7,1.8 7.7,2.2 2.8,0.6 5.8,1 9.1,1 h 6.5 c 3.4,0 6.1,-0.4 8.9,-1 2,-0.4 6.5,-2.1 7.7,-2.2 v 1 c 0,2.9 -12.5,4.5 -16.6,4.5 h -6.4 c -4.1,0 -16.9,-1.6 -16.9,-4.5 l 0,0 z m 17.9,-43.4 4.5,0.1 12.4,0.4 v 8.3 h 6.3 v 11.9 h -6.3 v 17.4 l 4.5,1.3 c -1.2,1.6 -12.2,3.3 -15.8,3.3 h -6.4 c -3.5,0 -15,-1.8 -16,-3.2 l 4.6,-1.6 0.1,-17.2 h -6.3 V 96.7 h 6.3 v -8.3 l 12.4,-0.4 0,0 z m 25.7,5.9 h 3 v 6.7 h 3.2 v 3.9 h -3.2 v 6.7 h -3 V 93.8 z m -50,0 h 2.9 v 17.2 h -2.9 v -6.7 h -3.5 v -3.9 h 3.4 V 93.8 h 0.1 z m 26.1,-8.3 c -5.2,0 -9.7,0.2 -14.8,0.2 -4.4,0 -3.5,-2.6 -1.8,-2.8 2.1,-0.3 4.9,-0.1 6.9,-0.4 5.3,-0.8 23.6,-0.3 28.1,0.8 0.2,1.8 0.4,1.5 -1,2.4 l -15.8,-0.2 -1.6,0.1 z m -1,-21.1 h 2.9 v 3.8 h 2 v 1.8 c 3.2,0.7 5.3,1.1 7.4,3.1 1.3,1.3 3.5,4.3 3.7,6.7 l -10.4,-0.3 -9.9,0.1 0.2,-0.1 -9.1,0.5 c 0.4,-4.7 5.2,-9.7 10.4,-9.7 h 0.8 v -2 h 2 v -3.8 z m -2.6,1.2 h -2 v 2.2 c -5.7,0.5 -10.6,6.6 -11.1,12.5 -2.2,0.2 -2.3,1.3 -3.4,2.1 l -0.2,1.6 c -0.3,2.2 2,3.9 3.6,4.3 v 5.5 h -3.6 v -2.4 h -8.3 v 6.7 h -3.2 V 107 h 3.2 v 6.3 h 8.3 v -2.4 h 3.6 V 123.8 c -2.3,0.6 -5.5,2 -5.5,4.9 v 2 c 0,6.3 12.9,7.7 19.8,7.7 h 5.9 c 6.9,0 19.4,-1.2 19.4,-7.7 v -2 c 0,-2.8 -3,-4.3 -5.3,-4.9 v -12.9 h 3.6 v 2.4 h 8.1 V 107 h 3.2 v -9.1 h -3.2 v -6.4 h -8.1 v 2.4 h -3.6 v -5.5 c 1.6,-0.3 3.6,-1.8 3.6,-3.8 0,-2.2 -1.6,-3.9 -3.6,-4 -0.5,-5.9 -5.7,-12.1 -11.4,-12.6 v -2.2 h -2 V 61.6 h -7.9 v 4 z m 2.9,47.2 c -4,0 -8.3,-5 -8.1,-9.3 0.2,-4.4 4.2,-9 8.3,-9 h 2 c 4.2,0 8.3,4.7 8.3,9.1 0,4.3 -4,9.1 -8.1,9.1 h -2.4 l 0,0 z m -10.5,-9.9 v 1.8 c 0,5.2 5.4,10.8 10.5,10.8 h 2.4 c 5.6,0 10.8,-5.8 10.8,-11.8 0,-6 -5.3,-11.8 -10.9,-11.8 h -2.1 C 93.7,92 88.4,97.5 88.4,103 l 0,0 z m 9.5,0.8 c 0.3,-0.6 0.8,-1.8 1.4,-1.8 h 1.4 c 0.7,0 1.4,1.3 1.4,2 0,0.1 -0.9,1.6 -1.4,1.6 h -1.4 c -0.6,0.1 -1.1,-1.2 -1.4,-1.8 z m -2.9,0 2.2,4.3 h 5 c 0.7,0 2.4,-3.6 2.9,-4.3 l -2.4,-4.5 h -4.9 c -0.8,0.1 -2.5,3.7 -2.9,4.5 z"
},{type:"path",stroke:!1,fill:!!R&&U,d:"m 97.9,103.8 c 0.3,-0.6 0.8,-1.8 1.4,-1.8 h 1.4 c 0.7,0 1.4,1.3 1.4,2 0,0.1 -0.9,1.6 -1.4,1.6 h -1.4 c -0.6,0.1 -1.1,-1.2 -1.4,-1.8 z m 1.2,-9.1 c -4.1,0 -8.1,4.6 -8.3,9 -0.2,4.3 4.1,9.3 8.1,9.3 l 2.4,0 c 4,0 8.1,-4.9 8.1,-9.1 0,-4.4 -4.1,-9.1 -8.3,-9.1 l -2,0 z m -1.2,4.7 4.9,0 2.4,4.5 c -0.4,0.7 -2.1,4.3 -2.9,4.3 l -5,0 -2.3,-4.3 c 0.4,-0.8 2.1,-4.4 2.9,-4.5 z M 98.7,64.5 h 2.9 v 3.8 h 2 v 1.8 c 3.2,0.7 5.3,1.1 7.4,3.1 1.3,1.3 3.5,4.3 3.7,6.7 l -10.4,-0.3 -9.9,0.1 0.2,-0.1 -9.1,0.5 c 0.4,-4.7 5.2,-9.7 10.4,-9.7 h 0.8 v -2 h 2 v -3.8 z m 1,21.1 c -5.2,0 -9.7,0.2 -14.8,0.2 -4.4,0 -3.5,-2.6 -1.8,-2.8 2.1,-0.3 4.9,-0.1 6.9,-0.4 5.3,-0.8 23.6,-0.3 28.1,0.8 0.2,1.8 0.4,1.5 -1,2.4 l -15.8,-0.2 -1.6,0.1 z m -26.1,8.3 h 2.9 v 17.2 h -2.9 v -6.7 h -3.5 v -3.9 h 3.4 V 93.8 h 0.1 z m 50,0 h 3 v 6.7 h 3.2 v 3.9 h -3.2 v 6.7 h -3 V 93.8 z m -25.7,-5.9 -12.4,0.4 0,8.3 -6.3,0 0,11.9 6.3,0 -0.1,17.3 -4.6,1.6 c 1.1,1.5 12.5,3.3 16,3.3 l 6.4,0 c 3.6,0 14.7,-1.7 15.8,-3.3 l -4.5,-1.3 0,-17.4 6.3,0 0,-11.9 -6.3,0 0,-8.3 -12.4,-0.4 -4.5,-0.1 z m 1.2,4.2 2.1,0 c 5.7,0 10.9,5.8 10.9,11.8 0,5.9 -5.2,11.8 -10.8,11.8 l -2.4,0 c -5.2,0 -10.5,-5.6 -10.5,-10.8 l 0,-1.8 c 0,-5.5 5.3,-11 10.7,-10.9 z M 80,131.3 v -1 c 1.3,0.1 5.7,1.8 7.7,2.2 2.8,0.6 5.8,1 9.1,1 h 6.5 c 3.4,0 6.1,-0.4 8.9,-1 2,-0.4 6.5,-2.1 7.7,-2.2 v 1 c 0,2.9 -12.5,4.5 -16.6,4.5 h -6.4 c -4.1,0 -16.9,-1.6 -16.9,-4.5 l 0,0 z"}],t["AC.IC.OTHER WATER SUPPLY LOCATION"]=[{type:"path",stroke:!1,d:"m 113.2,116.5 c 0,-2.9 4.4,-9.3 5.8,-11.8 2.8,-5 3.1,-6.8 4.6,-13 2.1,1.4 2.2,4.3 3,7.1 0.8,2.8 1.6,4.8 2.9,7 2.2,3.8 6.7,8 5,14.1 -1.6,5.8 -5.2,7.8 -12.2,7.5 -5.8,-0.2 -9.1,-4.9 -9.1,-11 z m -1.2,-0.4 v 0.6 c 0,7.5 4.6,12.2 12,12.2 6.8,0 12,-4.6 12,-11 v -1.3 c 0,-5 -4.7,-10 -6.6,-13.8 -1.1,-2.2 -1.6,-5.5 -2.3,-8.1 -0.9,-3.3 -2.4,-4 -4.8,-5.6 0,13.6 -10.3,20 -10.3,26.8 z m 4.8,3.6 c 0,2.4 1.8,4.4 3.8,4.4 0.7,0 1.5,-0.6 1.7,-1.3 -1.6,-0.4 -3.2,-2.5 -3.4,-4.4 l -2.1,1.3 z M 89.2,73 v 15.8 h -2.1 v -15.8 l 0.6,-0.1 1.5,0.1 z m -10.4,2.3 h 6.6 v 11 H 78.8 v -11 z m 37.2,1.1 c 0,-0.5 0.2,-0.6 0.6,-0.6 h 1.5 c 0.5,0 0.6,0.2 0.6,0.6 v 9.1 h -2.8 v -9.1 z m -24.9,-1.3 22.8,2.4 v 6.5 l -22.8,1.9 v -10.7 z m -27,11.8 h 12.9 v 1 l 8.3,0.1 1.2,2.4 1.6,0.3 c 0.6,0.1 1,-0.2 1.8,-0.3 l 0.9,-0.6 0.2,-2.4 22.8,-1.6 c 1.2,2.5 4.2,1.6 6.6,1 0,-0.7 0.2,-0.8 0.2,-1.5 v -9.5 c 0,-1.5 -0.8,-2.1 -2.3,-2.1 h -2.1 c -3.8,0 0.2,2.5 -5,1.6 -2.1,-0.4 -4.6,-0.4 -6.7,-0.7 -3.3,-0.5 -10.4,-1.3 -13.5,-1.3 -0.1,-3.1 -5.6,-3.3 -5.7,0.4 h -8.4 v 0.6 h -13 l 0.1,12.4 0,0 z m 15.6,-4.8 0,1.9 4.6,0 0,-1.9 z m 0,-4.2 0,1.7 4.6,0 0,-1.7 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 91,75.1 22.8,2.4 v 6.5 l -22.8,1.9 v -10.7 z m 24.9,1.3 c 0,-0.5 0.2,-0.6 0.6,-0.6 h 1.5 c 0.5,0 0.6,0.2 0.6,0.6 v 9.1 h -2.8 v -9.1 z M 78.8,75.3 l 0,11 6.6,0 0,-11 -6.6,0 z m 0.8,2.6 4.7,0 0,1.7 -4.7,0 0,-1.7 z m 0,4.2 4.7,0 0,1.9 -4.7,0 0,-1.9 z M 123.5,91.8 c -1.4,6.2 -1.8,8 -4.6,13 -1.3,2.5 -5.8,8.9 -5.8,11.8 0,6.1 3.3,10.8 9.1,11 7,0.2 10.5,-1.7 12.2,-7.5 1.7,-6.1 -2.8,-10.3 -5,-14.1 -1.3,-2.2 -2,-4.3 -2.9,-7 -0.8,-2.8 -0.9,-5.7 -3,-7.1 z m -4.6,26.7 c 0.2,1.9 1.8,4 3.4,4.4 -0.2,0.6 -1,1.3 -1.7,1.3 -2,0 -3.8,-2.1 -3.8,-4.4 l 2.1,-1.3 z M 89.2,73 v 15.8 h -2.1 v -15.8 l 0.6,-0.1 1.5,0.1 z"}],t["AC.IC.BANKING FINANCE AND INSURANCE INFRASTRUCTURE"]=S("€$£"),t["GR.IN.IC.PUBLIC VENUES INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 87.9,87.3 c -3.2,0 -5.8,2.6 -5.8,5.8 0,2.8 2.1,5.2 4.8,5.7 l 0,3.3 -3.8,0 0,2 3.8,0 0,9.4 2,0 0,-9.4 3.8,0 0,-2 -3.8,0 0,-3.3 c 2.7,-0.5 4.8,-2.8 4.8,-5.7 0,-3.2 -2.6,-5.8 -5.8,-5.8 z m 24,0 c -3.2,0 -5.8,2.6 -5.8,5.8 0,2.8 2.1,5.2 4.8,5.7 l 0,3.3 -3.8,0 0,2 3.8,0 0,9.4 2,0 0,-9.4 3.8,0 0,-2 -3.8,0 0,-3.3 c 2.7,-0.5 4.8,-2.8 4.8,-5.7 0,-3.2 -2.6,-5.8 -5.8,-5.8 z m -24,2 c 2.1,0 3.8,1.7 3.8,3.8 0,2.1 -1.7,3.8 -3.8,3.8 -2.1,0 -3.8,-1.7 -3.8,-3.8 0,-2.1 1.7,-3.8 3.8,-3.8 z m 24,0 c 2.1,0 3.8,1.7 3.8,3.8 0,2.1 -1.7,3.8 -3.8,3.8 -2.1,0 -3.8,-1.7 -3.8,-3.8 0,-2.1 1.7,-3.8 3.8,-3.8 z m 24.2,37.8 0,-3 -72.1,0 0,3 z m -3,-6.2 0,-2.8 -66.2,0 0,2.8 z M 66.8,98.2 c 0,1.3 -0.7,2.6 -0.7,4.3 -0,1.8 -0.2,3.1 -0.2,5 v 3.2 l 0.6,3.6 h 2.7 l -0.8,-6.4 v -1.8 c 0,-8.1 5,-17.9 9.3,-21.5 5.6,-4.6 11.6,-9.1 21.7,-9.1 h 0.9 c 9,0 17.1,4.4 21.6,8.8 3.2,3.2 4.1,4.7 6.4,8.7 1.4,2.4 3.3,8.4 3.3,12 v 4.3 c 0,1.4 -0.7,3 -0.7,4.4 v 0.5 h 2.7 l 0.6,-6.4 v -3.8 c 0,-1.6 -1,-5.2 -1.4,-6.6 -0.8,-2.5 -1.3,-3.6 -2.3,-5.7 -1.8,-3.8 -3.8,-6.4 -6.7,-9.3 -4.6,-4.6 -13.6,-9.6 -22.6,-9.6 h -2.5 c -7.8,0 -16.6,4.1 -20.6,7.9 -2.8,2.7 -4.4,4.1 -6.7,7.5 -1.1,1.6 -1.5,3 -2.5,4.6 -0.9,1.6 -1.2,4 -2,5.2 z"}],t["GR.IN.IC.RECREATIONAL AREA"]=[{type:"path",stroke:!1,d:"m 96.4,78.8 8.1,-0 c 0.9,0 2.4,5.7 2.4,6.9 l 1.5,4.3 c 0,0.4 2,6.6 2,7 v 0.6 l -19.4,-0 5.4,-18.8 z m -19.9,-0 11.1,0 -3.5,11.2 c 0,1.7 -1.9,5.7 -1.9,6.9 v 0.6 h -20.8 v 7.2 l 18.5,0 -1.2,3 -0.1,0.8 -2.6,8.3 -3.6,11.5 c 1.1,0 9.3,0.1 9.7,-0.1 0.2,-0.1 2,-6.8 2.3,-7.7 0.5,-1.2 4.5,-15 4.5,-15.2 v -0.6 l 23.5,0 6.7,23.6 9.8,0 -1.4,-4.8 -0.7,-2.6 -2.4,-7.8 -0.9,-2.8 -1.7,-5.7 h 15.8 v -7.2 h -18.2 l -2.9,-8.9 -0.1,-0.8 -1,-3 -1.7,-6.2 h 10.6 v -7.2 h -47.9 v 7.2 l 0,0 0,0 z m 62.1,16.9 0,-6.1 -15.2,0 0,6.1 z m -62.3,0 0,-6.1 -14.9,0 0,6.1 z"}],t["GR.IN.IC.SPECIAL NEEDS INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 73.1,111.2 c 0,-3.8 1,-5.8 2.3,-8.4 1.4,-2.8 3.3,-3.8 4.6,-5.8 l -1.1,-8.2 c -2.6,0.7 -7.7,6.5 -9.2,9 -2.4,4.1 -3.8,7.9 -3.8,14.2 v 3.3 c 0,2.2 2.2,8.1 3.1,9.6 2,3.2 3,4.5 5.5,7.1 3.6,3.6 10.7,7.1 17.9,7.1 h 1 c 4.9,0 9.9,-1.6 13.1,-3.6 1.7,-1 8.5,-6.2 8.5,-7.8 0,-1.2 -3.1,-6.6 -3.5,-8.4 -1.2,1.5 -1.6,3 -3,4.8 -1.2,1.5 -2.3,2.7 -3.8,3.8 -2.6,2 -6.8,4 -11.3,4 h -1.2 c -10.2,0 -19.1,-9 -19.1,-19.3 v -1.4 l 0,0 z m 8.9,-37.9 c 0.5,0.4 0.5,2.9 0.5,4 L 85,106.8 l 25.4,0 10,23 c 1.5,-0.1 5.5,-1.5 7.1,-2.1 1.2,-0.4 6.5,-1.4 6.5,-2.6 v -0.2 c 0,-0.7 -1.9,-4.8 -2,-6.3 l -7.6,2.6 -9,-21.6 H 91.6 l -0.4,-6 h 17.3 v -5.4 H 90.8 l -1.1,-12.9 c 2.6,-0.2 5.2,-3.9 5.2,-6.7 v -2.2 h -0.5 v -0.8 c 0,-0.8 -2.1,-3.1 -2.7,-3.5 -1,-0.7 -3.3,-1.6 -4.8,-1.3 -2.2,0.4 -3.2,0.8 -4.4,2 -0.7,0.7 -2.2,3.2 -2.2,4.3 v 1.2 c 0,2.4 0.8,3.6 1.7,4.9 l 0,0 z m 0.5,4 c 0,-1.1 0,-3.6 -0.5,-4 0,1.1 -0,3.6 0.5,4 z"}],t["GR.IN.IC.ADULT DAY CARE"]=[{type:"path",stroke:!1,d:"m 107,118.3 v -0.2 c 0,-15.5 22.4,-14.7 22.4,-0.6 v 1.3 c 0,5.4 -5.3,10.4 -10.8,10.4 h -0.6 c -5.9,0 -11,-5.1 -11,-11 z m -1.6,-22.2 h 4.6 v 10 c 0,0 -3.2,3.3 -3.8,4.3 -0.5,0.8 -2.2,4.7 -2.2,5.8 v 2.3 c 0,6.8 6.6,13.7 13.3,13.7 h 1 c 5.8,0 10.8,-5 11,-5 h 7.1 v -1.9 h -3.2 c 0.2,-0.5 0.8,-1.3 0.8,-1.9 v -11 c 0,-1.9 -1,-3.3 -2.1,-4 h -3.3 l -0.8,-0.7 c 1.1,-0.3 2,-0.9 2,-2.2 v -0.4 c 0,-0.5 -1,-1.7 -1.6,-1.7 h -5 v -5.4 c 0,-2.7 -1.5,-4.2 -4.2,-4.2 h -2.1 c -5.9,0 -4.6,5.8 -4.6,11.6 l -0.6,0.4 V 94.7 c -0.4,-0.2 -0.4,-0.4 -0.8,-0.4 h -5.4 v 1.7 z m -22.6,1 c 0,-2.2 3.3,-4.8 4.5,-6.6 1.4,1 1.4,1.8 3.4,2.8 1.4,0.7 2.6,1.4 4,1.9 2.4,0.9 2.2,-0.1 4.3,1.9 0.9,0.9 1.8,2.5 3.5,2.5 0.4,0 0.8,-0.8 0.8,-1.3 v -1.1 c 0,-2.8 -3.3,-3.6 -5.3,-4.5 -2.3,-0.9 -5.3,-1.6 -6.1,-3.8 -0.8,-2.3 -2.2,-4.6 -2.9,-6.9 -0.7,-2.1 -1.9,-5.1 -4.6,-5.1 h -0.4 c -3,0 -7.4,7.5 -8.1,10.4 -0.6,2.3 -1.6,4.7 -2.1,7.2 -0.5,2.8 -0.6,5.2 -1.1,8 -0.3,1.8 0.1,2.3 -0.6,4 -0.4,1.2 -0.8,2.3 -1.2,3.4 -0.9,2.3 -1.7,4.6 -2.5,6.8 -0.8,2.1 -4.9,11.8 -4.9,13.5 0,2.6 6.2,1.3 7.7,1.1 -0,-1.9 -2.3,-1.6 -3.1,-2.7 2.1,-3.1 3.8,-6.3 5.8,-9.5 1,-1.7 4.6,-9.2 5.4,-9.8 0.6,0.4 3,3.1 3.8,3.9 1.9,1.9 2,1.8 2.8,4.8 1.1,4.2 1.9,7.7 1.9,13.1 l 1.7,0.2 4.2,-0 c 1.3,0 1.8,-0.2 2.3,-1 -0.6,-1 -3.1,-1.7 -4.6,-2.1 v -1.1 c 0,-0.4 -0.1,-0.4 -0.4,-0.8 v -12.1 c -1.5,-2.3 -2.9,-4.9 -4.6,-7.1 -1.1,-1.6 -3.8,-5.2 -3.8,-7.6 v -2.5 l 0,0 z m 30.3,-9.7 v 1.6 c 0,1.5 2.3,3.9 4.2,3.9 h 0.8 c 2.1,0 4.2,-2.3 4.2,-4.5 V 87.6 c 0,-2.2 -2.2,-4.2 -4.5,-4.2 h -0.1 c -2.3,-0 -4.6,2 -4.6,4 z m -28.4,-15.6 v 1.7 c 0,0.6 1,2.1 1.4,2.5 0.6,0.6 1.8,1.2 2.9,1.2 h 1 c 2,0 4.2,-2.2 4.2,-4 v -1.4 c 0,-1.6 -2.5,-3.9 -4.5,-3.9 h -0.7 c -1.8,0 -4.2,2.2 -4.2,3.9 z"}],t["GR.IN.IC.AGRICULTURE AND FOOD INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 79.5,127.9 h -7.8 v -21.4 c 0,-1 6.8,-13.3 7.4,-13.6 1,-0.6 13.9,-7.1 14.1,-7.1 0.5,0 13.2,6.3 14.4,7 0.4,0.3 7.7,13.1 7.7,13.7 v 21.4 h -7.6 V 110.4 H 79.5 v 17.5 z m 37.4,-39.4 h 15.4 v 39.8 h -12.1 v -18.8 h 2.6 c -0.5,-0.8 -5.8,-9.8 -5.8,-10 V 88.5 z m 0.2,-1.9 c 0,-4.4 2.9,-8.2 7.2,-8.2 h 0.4 c 4.5,0 7.6,3.7 7.6,8.2 h -15.2 v 0 z M 105.2,82.1 h 8.9 c -0.2,1.6 -0.9,2.5 -0.9,5 0,2 0,3.9 0,5.8 -1.4,-1 -0.9,-2.8 -3.2,-4 -1.2,-0.6 -3.8,-2 -4.8,-2.3 v -4.6 z m 0,-2.8 c 0,-2.8 3.8,-7.4 6.9,-7.4 h 0.6 c 3.1,0 5.5,1.8 6.7,3.7 -0.2,0.2 -4.8,4.3 -4.8,4.3 h -9.5 v -0.6 z m -11.9,1.5 c -3.2,1.7 -6.6,3.2 -9.9,4.8 -1.7,0.9 -3.3,1.5 -5,2.4 -2.8,1.4 -2.3,0.7 -4,3.1 -0.9,1.3 -1.8,3.2 -2.7,4.7 -0.9,1.6 -1.9,3 -2.8,4.6 -1.6,2.9 -3.6,6.5 -5.4,9.1 h 2.8 v 22.5 H 84 V 114.7 h 19 v 17.3 h 33.3 V 87.5 c 0,-7.5 -4.2,-13 -11.7,-13 h -1.7 c -0.8,-2.9 -5.9,-6.5 -10,-6.5 h -0.4 c -6.4,0 -11,5.9 -11,12.1 v 4.6 l -8.2,-3.9 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 79.5,110.4 h 28.1 v 17.5 h 7.6 v -21.4 c 0,-0.6 -7.2,-13.4 -7.7,-13.7 -1.1,-0.8 -13.8,-7.1 -14.4,-7.1 -0.1,0 -13,6.5 -14.1,7.1 -0.6,0.4 -7.3,12.6 -7.3,13.6 v 21.4 h 7.8 v -17.5 z m 37.4,-10.8 c 0,0.1 5.3,9.2 5.8,10 h -2.6 v 18.8 h 12.1 v -39.8 h -15.4 v 11 z m 0.2,-13 h 15.1 c 0,-4.6 -3,-8.2 -7.6,-8.2 h -0.4 c -4.2,-0 -7.2,3.8 -7.2,8.2 z m -11.9,0 c 1.1,0.2 3.6,1.7 4.8,2.3 2.2,1.1 1.7,3 3.2,3.9 0,-2 0,-3.9 0,-5.8 0,-2.5 0.7,-3.4 0.9,-5 h -8.9 v 4.6 z m 0,-7.4 v 0.6 h 9.5 c 0,0 4.6,-4.1 4.8,-4.3 -1.2,-1.8 -3.6,-3.7 -6.7,-3.7 h -0.6 c -3.1,0 -6.9,4.6 -6.9,7.4 z"}],t["GR.IN.IC.AGRICULTURAL LABORATORY"]=[{type:"path",stroke:!1,d:"m 98.4,77.9 -0.1,0.3 2.6,0.6 0,-0.3 z m 2.1,7.3 0.4,-3.2 -0.3,-0.1 -0.4,3.2 z m -3.8,-16.8 0.1,-0.2 -1.4,-0.3 1,-2.6 -0.4,-0.3 -1.7,5.7 0.1,0 0.3,-0.1 0.7,-2.4 z m -1,5.3 c 0.8,0 0.5,-1.7 0.8,-2.3 l -0.4,-0.1 -0.4,2.4 z m 1.4,-5.5 0.6,-2.6 -0.4,-0.1 -0.6,2.7 z m 0.2,-2.7 0.1,-0.3 -1,-0.2 -0.1,0.2 z m 11.8,65.6 0,5.6 3.3,0 c 1.1,0 1.9,-0.2 2.4,-0.7 0.5,-0.5 0.8,-1.2 0.8,-2.1 -10e-6,-0.9 -0.3,-1.6 -0.8,-2.1 -0.5,-0.5 -1.3,-0.7 -2.4,-0.7 l -3.3,0 m 0,-6.2 0,4.6 3,0 c 1,0 1.7,-0.2 2.2,-0.6 0.5,-0.4 0.7,-1 0.7,-1.7 -10e-6,-0.8 -0.2,-1.3 -0.7,-1.7 -0.5,-0.4 -1.2,-0.6 -2.2,-0.6 l -3,0 m -2.1,-1.7 5.2,0 c 1.6,1e-5 2.8,0.3 3.6,1 0.8,0.7 1.3,1.6 1.3,2.8 -2e-5,0.9 -0.2,1.7 -0.7,2.2 -0.4,0.5 -1.1,0.9 -1.9,1 1,0.2 1.8,0.7 2.3,1.4 0.6,0.7 0.8,1.5 0.8,2.6 -1e-5,1.4 -0.5,2.4 -1.4,3.1 -0.9,0.7 -2.2,1.1 -3.9,1.1 l -5.4,0 0,-15.2 m -9.2,2 -2.8,7.5 5.6,0 -2.8,-7.5 m -1.2,-2 2.3,0 5.8,15.2 -2.1,0 -1.4,-3.9 -6.8,0 -1.4,3.9 -2.2,0 5.8,-15.2 m -16,0 2.1,0 0,13.4 7.4,0 0,1.7 -9.4,0 0,-15.2 M 98.6,92.5 c 0.9,-0.2 0.8,-1.8 1.1,-2.6 l 0.9,0.4 -1.4,4.2 -0.6,-2 z m -0.2,-0.4 0.1,0.2 c -0.5,-0.1 -0.8,-1.3 -0.8,-1.9 l 0.4,0.6 -0.3,-2.2 1.6,0.8 c -0,0.7 -0.4,2.3 -0.9,2.4 z m -0.9,-2.3 -0.6,-1.4 c 0.4,0.1 0.6,0.3 0.6,0.9 v 0.5 z m 2.6,-4.4 -0.6,3.9 -1.7,-0.8 v -3.4 -0.3 l 2.3,0.6 z m -2.6,-1.1 0.4,0.1 v 0.4 h -0.4 v 3.5 l -0.8,-0.4 0.1,0.4 h -0.2 c 0,-0.9 -1.2,-2.8 -1.6,-3.5 0.1,-0.1 0.1,-0.1 0.1,-0.4 v -0.4 l 2.4,0.6 0,-0.4 z m 6.1,-1.7 2.5,0.6 v 0.4 c 0,0.2 0,0.2 0.1,0.3 -1.2,0 -1.9,0.4 -2.8,0.8 l 0.2,-2 z m -6.1,1.7 -2.4,-0.8 0.1,-1.8 v -1 l 2.4,0.5 -0.2,3 z m 8.6,-1.6 c -0.3,0 -2.3,-0.4 -2.4,-0.6 0,0 0.2,-2.3 0.2,-2.7 l 2.2,0.4 0.1,1.6 -0,1.2 z m -12.7,-2.4 c 0.4,0 0.7,0.2 1.1,0.2 0.8,0.2 0.4,0.1 0.4,0.7 v 2.1 c -0.3,-0 -0.7,-0.2 -1,-0.3 -0.7,-0.2 -0.5,0.1 -0.5,-0.4 v -2.4 z m 10.7,-4.2 1.7,0.4 0.3,3 -2.2,-0.4 0.2,-3 z m -6.4,5.2 v -0.4 l -2.4,-0.5 0.3,-2.8 2.4,0.5 -0.2,2.9 h 0.3 v 0.4 h -0.3 z m -4,-4.2 1.6,0.4 -0.3,2.9 -1.5,-0.4 0.2,-2.9 z m 7.6,1.4 0.3,-3.1 2.4,0.6 -0.3,3 -2.4,-0.5 z m -0.4,-0.1 0.4,0.1 v 0.4 c 0.4,0 2.3,0.4 2.4,0.6 0,0.1 -0.2,2.3 -0.2,2.6 -0.8,0 -1.6,-0.4 -2.3,-0.4 -0.2,0 -0.2,0.2 -0.2,0.4 l 2.4,0.5 -0.2,2.2 h 0.2 c -0.5,0.7 -1.1,1.6 -1.4,2.4 -0.3,0.8 -0.7,2.1 -1.1,2.8 l -0.9,-0.4 0.6,-4 h -0.2 l -0.2,-0.1 v -0.4 l -2.3,-0.7 0.2,-3 2.5,0.5 v -0.3 h 0.4 l 0.2,-2.8 h -0.3 l -0.3,2.7 -2.4,-0.4 0.2,-2.9 c -0.3,-0.1 -0.2,0 -0.3,-0.4 h 0.2 l 0.2,0.1 0.4,-3.2 2.4,0.6 -0.3,3.1 z m 3.2,-5.4 v -0.3 l 0.3,0.1 v 0.3 c 1,0.1 1.1,0.1 1.2,1 0,0.3 0.2,1.8 0.3,1.9 l -1.7,-0.3 v 0.4 h -0.3 v -0.5 l -2.4,-0.6 0.3,-2.5 2.3,0.4 z m 0.2,-0.2 0.2,-2.9 c 0.6,0.1 0.7,2.4 0.8,3.1 l -1,-0.2 z m -5.1,-0.9 2.4,0.5 -0.3,2.6 -2.4,-0.6 0.4,-2.5 z m 4.9,0.8 c -3.3,-0.8 -2,0 -2,-3.3 l 2.2,0.4 -0.2,2.9 z m -4.4,-3.8 c 3.2,0.8 1.9,-0.2 1.9,3.2 l -2.3,-0.5 0.4,-2.7 z m -2.5,-0.4 2.1,0.4 -0.4,2.7 -2.2,-0.4 0.4,-2.6 z m 7.1,1.3 v -0.4 l -2.2,-0.4 0.2,-2.6 c 0.3,0 0.7,0.1 1.1,0.2 0.6,0.1 0.5,0 0.7,0.6 0.3,1 0.3,0.9 0.3,2.2 l 0.3,0.4 -0.4,0.1 z m -4.1,-3.9 1.8,0.4 -0.2,2.6 -2.1,-0.4 0.4,-2.6 z m 2.3,-2.2 1.4,2.6 -1.5,-0.2 0.1,-2.4 z m -1.6,-1.6 0,-0.1 1.2,1.2 -0.1,0 c 0.3,-0.1 0.3,-0.1 0.4,0.3 l -0.2,-0.2 -0.2,2.6 -1.8,-0.4 0.7,-3.5 z m -2.9,3 c 0.5,-1.1 0.3,-3.4 1.9,-3.4 0.3,0 0.2,0 0.5,0.1 l -0.6,3.7 -1.8,-0.4 z m -0.4,-0.1 0.4,0.1 v 0.3 l 1.8,0.4 -0.4,2.6 -2.1,-0.4 v 0.2 l -0.1,0.2 -0.2,-0.1 h -0.2 l -0.5,2.6 -1.6,-0.3 v 0.3 c 0.5,0 1,0.3 1.4,0.3 0.2,0 0,-0.2 0.5,-0.2 v 0.4 l 2.2,0.4 -0.3,2.4 -2.4,-0.6 v 0.4 l 2.3,0.6 -0.3,3.1 -2.4,-0.6 0.4,-3.2 h -0.4 c -0,0.8 -0.3,1.7 -0.3,2.4 -0,0.8 -0,0.7 -0.7,0.5 -0.2,-0 -0.9,-0.1 -0.9,-0.3 -0,-0.3 0.2,-2 0.3,-2.4 0.2,-1.2 0.5,-0.4 1.7,-0.3 l 0.1,-0.3 c -0.2,-0.1 -1.6,-0.3 -1.6,-0.5 0,-0.8 0.4,-1.5 0.4,-2.3 -0.6,0.1 -0.7,2.3 -0.8,3 -0.1,0.8 -0.4,2.6 -0.4,3.3 0,0.8 -0.2,2.4 -0.2,3.5 0,1.3 -0.1,2.4 -0.1,3.8 h 0.3 v -0.9 l 1.5,0.4 v 1 l -3.4,-0.5 h -0.1 c -5,0 -8.8,9.7 -8.8,15.4 0,2.3 0.8,5.4 2,6.2 0.7,-1.4 1.3,-3.1 2,-4.6 0.8,-1.5 1.4,-3.1 2.1,-4.6 0.3,-0.7 0.7,-1.5 1,-2.2 0.4,-0.8 0.8,-1.5 1.8,-1.2 0.9,0.3 1.9,3.2 2.1,4.6 0.5,3.8 0,9 0.6,12.6 0.7,4 2.3,6.4 5.4,8 1,-0.4 2.5,-0.6 3.4,-1.2 0.9,-0.6 1.8,-1.2 2.4,-2.2 1.2,-1.8 2,-4.1 2,-7.2 l 0,-0.6 -0.3,-5.6 v -0.3 c 0,-2.7 0.5,-8.3 2.8,-8.3 h 0.1 c 1.4,0 2,0.6 2.6,1.4 0.6,0.8 1.2,1.4 1.8,2.2 1.2,1.5 2.6,2.9 2.6,5.5 v 0.6 l 0.4,0.1 c 0.4,-1.6 1.8,-2.8 1.8,-5.2 v -1.5 c 0,-3.5 -1.4,-6.2 -3,-8.3 -0.8,-1.1 -1.8,-2 -2.8,-2.8 -0.7,-0.5 -2.7,-1.9 -3.8,-1.9 l -0.8,-0 -2.3,0.4 c -0.2,-0.8 0.1,-2 -0.1,-3.1 -0.1,-0.8 -0.2,-2.5 -0.2,-3.3 -0.2,-2.1 -0.5,-4.2 -0.9,-6.1 -0.6,-3.3 -2,-8.2 -4.6,-9.4 v 0.3 l -0.4,-0.1 0.1,-0.3 -0.8,-0.1 c -0.9,-0.1 -1.9,0.8 -2.3,1.3 -0.2,0.3 -1.7,2 -0.8,2 0.2,-0.6 1.3,-2.2 1.8,-2.4 l -0.8,2.7 z m 3,20.4 1.6,0.5 0.2,-0 c -0.1,-0.5 -1.4,-0.6 -1.8,-0.8 v 0.4 z m 3.6,-9.8 0.2,-2.6 -0.2,-0.1 -0.2,2.6 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 98.6,92.5 0.6,2 1.4,-4.2 -0.9,-0.4 c -0.3,0.7 -0.2,2.3 -1.1,2.6 z m -0.6,-1.4 -0.3,-0.6 c 0,0.6 0.4,1.8 0.8,1.9 l -0.1,-0.2 c 0.6,-0.2 0.9,-1.8 1,-2.4 l -1.6,-0.8 0.2,2.2 z m 2.4,-5.9 c 0.4,0.2 1.7,0.3 1.8,0.8 l -0.2,0 -1.6,-0.5 -0.6,4 0.9,0.5 c 0.4,-0.7 0.8,-2 1.1,-2.8 0.4,-0.8 1,-1.7 1.4,-2.4 h -0.2 l 0.2,-2.3 -2.4,-0.5 -0.4,3.2 z m -1,4.1 0.6,-3.9 -2.3,-0.6 0,0.2 0,3.4 z m 0.6,-4.2 0.4,-3.2 -2.5,-0.5 -0.2,3 z m 0.7,-6.6 0.3,-3.1 -2.4,-0.6 -0.4,3.2 z m -5.1,-4.8 -0.1,0.3 c -1.2,-0 -1.5,-0.9 -1.7,0.3 -0.1,0.4 -0.3,2.1 -0.3,2.4 0,0.2 0.7,0.2 1,0.3 0.7,0.2 0.7,0.2 0.7,-0.5 0,-0.8 0.3,-1.7 0.4,-2.4 h 0.4 l -0.4,3.2 2.4,0.6 0.4,-3.2 -2.3,-0.5 v -0.4 l 2.3,0.6 0.3,-2.4 -2.2,-0.4 c -0.3,0.6 0,2.3 -0.8,2.3 z m 8.3,-1 0.2,-2.9 -2.2,-0.4 c 0,3.4 -1.3,2.6 2,3.3 z m -6.2,11.7 -0.4,-0.1 v 0.4 l -2.4,-0.6 v 0.4 c 0,0.2 -0,0.2 -0.1,0.4 0.4,0.7 1.6,2.6 1.6,3.5 h 0.2 l -0.1,-0.4 0.8,0.4 v -3.5 h 0.4 l -0,-0.4 0,0 z m -0.3,5.4 0,-0.6 c 0,-0.5 -0.2,-0.8 -0.6,-0.9 l 0.6,1.4 z m 2.6,-4.8 0,0.4 0.2,0.1 0.2,0 0,-0.3 z m 3.3,-0.4 c 0.8,-0.4 1.5,-0.8 2.8,-0.8 -0.1,-0.1 -0.1,-0.1 -0.1,-0.2 v -0.4 l -2.5,-0.6 -0.2,2 z m -8.3,-1.1 2.4,0.8 0.2,-3 -2.5,-0.5 0,1 z m -1.8,-0.8 c 0,0.5 -0.2,0.2 0.5,0.4 0.3,0.1 0.6,0.2 1,0.3 v -2.1 c 0,-0.7 0.4,-0.6 -0.4,-0.7 -0.4,-0.1 -0.7,-0.2 -1.1,-0.2 v 2.4 z m 7.5,-4 h 0.3 l -0.2,2.8 h -0.4 v 0.4 l 0.3,0.1 c 0,-0.2 0,-0.4 0.2,-0.4 0.7,0 1.6,0.4 2.3,0.4 0,-0.3 0.3,-2.5 0.2,-2.6 -0,-0.2 -2,-0.6 -2.3,-0.6 v -0.4 l -0.4,-0.1 v 0.3 z m 3.3,-8.9 0.4,-0 -0.3,-0.4 c 0,-1.3 -0,-1.2 -0.3,-2.2 -0.2,-0.6 -0,-0.5 -0.7,-0.6 -0.4,-0.1 -0.8,-0.2 -1.1,-0.2 l -0.2,2.6 2.2,0.4 v 0.4 z m -2.4,-0.9 0.2,-2.6 -1.8,-0.4 -0.4,2.6 z m 4.4,13.8 0,-1.2 -0.1,-1.6 -2.2,-0.4 c 0,0.4 -0.2,2.7 -0.2,2.7 0.1,0.2 2.2,0.6 2.4,0.6 z m -7.8,-4.6 -0.2,2.9 2.4,0.4 0.3,-2.7 z m -0.2,3.2 0,-0.4 -0.3,0 0.2,-2.9 -2.3,-0.5 -0.3,2.8 2.4,0.5 0,0.4 z m -3.1,-1 0.3,-2.9 -1.6,-0.4 -0.2,2.9 z m 11.1,-0.8 -0.3,-3 -1.7,-0.4 -0.2,3 z m -2,-6.6 -2.3,-0.4 -0.3,2.5 2.4,0.6 z m -0.4,6 0.2,-3 -2.4,-0.6 -0.2,3.1 z m -2.4,-4 0.3,-2.6 -2.3,-0.5 -0.3,2.5 z m -2.9,3.2 0.1,-0.3 -0.2,-0.1 h -0.2 c 0,0.4 -0.1,0.3 0.2,0.4 z m 5.8,-2.4 1.7,0.3 c -0.1,-0.2 -0.2,-1.6 -0.3,-1.9 -0.1,-1 -0.2,-1 -1.2,-1 l -0.2,2.6 z m 0,0.3 0,-0.3 -0.3,-0.1 0,0.4 z m 0.2,-3 0,-0.3 -0.2,-0.1 0,0.3 z m 0,-0.3 1,0.2 c -0.1,-0.6 -0.2,-3 -0.8,-3 l -0.2,2.9 z m -5.1,-1.1 2.3,0.5 c 0,-3.4 1.3,-2.5 -1.9,-3.2 l -0.4,2.7 z m -2.5,-0.6 2.2,0.4 0.4,-2.7 -2.1,-0.4 z m 1.1,-5.6 -0.6,2.6 2.1,0.4 0.4,-2.6 -1.8,-0.4 0,-0.3 -0.4,-0.1 -0.1,0.3 z m -0.6,2.8 0,-0.2 -0.4,0 -0.1,0.2 0.2,0 0.2,0.1 z m 0.2,-2.9 -1,-0.2 -1,2.6 1.4,0.3 z m 4.8,0.7 1.5,0.2 -1.4,-2.6 z m -2.1,-0.4 1.8,0.4 0.2,-2.6 0.2,0.2 c -0,-0.4 -0,-0.3 -0.4,-0.3 l 0.1,-0.1 -1.2,-1.1 -0.1,0.1 -0.7,3.5 z m -2.2,-0.4 1.8,0.4 0.6,-3.7 c -0.4,-0 -0.2,-0.1 -0.6,-0.1 -1.6,0 -1.4,2.3 -1.9,3.4 z"}],t["GR.IN.IC.ANIMAL FEEDLOT"]=[{type:"path",stroke:!1,d:"m 121.6,107.1 -0.4,-2.3 -0.2,-2 h 16.3 l -1.7,13.2 h -13 v -0.6 l -1,-8.2 z m 16.1,4.3 0.4,-2.3 0.9,-6.2 -0.1,-1.6 h -19.6 l 1.4,10.7 0.3,0.6 0.5,4.3 -0.1,0.6 h 15.7 v -1.6 l 0.6,-4.6 z M 123,82.6 c -3.3,-0.8 -4.6,0.4 -6.8,1.9 h -1.4 c -0.3,0.4 -0.6,1.2 -1.2,1.2 h -1 c -2.2,0 -3.9,-1.8 -5.8,-1.8 h -0.6 c -0.9,0 -2.1,0.8 -3.9,0.8 -5.1,0 -3.9,0.2 -8,1.5 -2,0.6 -6.2,0.8 -8.9,0.8 h -5.2 c -2.8,0 -5,-0.6 -7.2,-0.6 -2.6,0 -4.7,0.2 -7.4,0.2 -0.5,0 -0.5,-0.1 -0.8,-0.2 -2.4,1.2 -3.1,4.2 -3.1,7.8 0,3.6 -0.6,6.3 -0.6,10.1 v 0.2 c 0,0.6 0.1,0.6 0.2,1 l 1,-0.3 0,-0.5 h 0.4 l 0.2,-12.2 h 0.2 c 0,2 0.1,4.5 0.6,6 0.4,1.2 1.7,3.8 1.7,4.9 v 0.2 l -1.6,13.2 h 3.7 c 0,-1.4 -0.4,-1.1 -0.4,-2.1 v -2.1 c 0,-1.4 1,-4.2 2.3,-4.3 0.4,1.5 3.3,3.7 3.3,6.8 v 0.6 c 0,0.6 -0.1,0.6 -0.2,1 0.4,-0.1 0.5,-0.2 1,-0.2 1.2,0 3.5,0.7 3.5,-0.4 0,-0.3 -1.9,-3.2 -2.2,-3.5 -0.4,-0.5 -1.3,-3.6 -1.3,-4.3 v -0.2 c 0,-0.2 1.2,-2.3 1.2,-4.8 4,2.2 3.5,2.7 9.9,2.7 2.2,0 4.2,0.5 6,0.4 1,-0 3.3,-1.4 4.3,-1.9 0,1.2 0.4,2.4 0.2,3.3 l -1.2,8 c 1,0.3 1.6,0.6 2.8,0.6 h 0.6 -0.2 l 0.7,-11.3 c 0.6,0.4 2.8,7.1 2.6,8.4 l -0.3,2.3 c 0.8,0.4 1.5,0.6 2.6,0.6 h 1 l -1.2,-7.4 -0.1,-0.8 c 0,-0.9 1.6,-0.7 2.5,-1.2 0.6,-0.3 1.4,-1.2 1.8,-1.7 1.1,-1.5 2,-2.7 3,-4.2 3.9,-5.4 3.5,-2.4 10.2,-4 v -0.6 h 1.6 c 1,0 1.8,-0.8 1.8,-1.8 v -0.4 c 0,-2.4 -2.5,-2.5 -2.5,-5.6 l -3.3,-3.4 5.4,-2.9 z m 14.6,28.9 c 0.4,-0.4 0.4,-1.5 0.4,-2.3 l -0.4,2.3 z m -16.1,-4.3 c 0,-0.8 0,-1.9 -0.4,-2.3 l 0.4,2.3 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 121.2,104.9 c 0.4,0.4 0.4,1.5 0.4,2.3 l 1,8.2 v 0.6 h 13 l 1.7,-13.2 h -16.3 l 0.2,2.1 z"}],t["GR.IN.IC.FARM/RANCH"]=[{type:"path",stroke:!1,d:"m 119.9,119 v -0.2 c 0,-2 1.5,-3.7 3.5,-3.7 h 0.4 c 2.2,0 3.7,1.6 3.7,4 v 0.6 c 0,1.2 -2.1,2.8 -3.7,2.8 h -0.4 c -1.9,0 -3.5,-1.6 -3.5,-3.5 z m -52,-10.7 c 1.3,-2 1.1,-2.7 3.2,-4.4 1.3,-1 3.3,-1.9 5.5,-1.9 h 0.6 c 4.7,0 9,4.1 9,8.8 v 1.1 c 0,5 -4,9.2 -8.8,9.2 H 76.9 c -5.4,0 -9.4,-4.2 -9.4,-9.6 0,-1.4 0.4,-1.6 0.4,-3 l 0,0 z m 7.9,-20.2 c -0.8,0 -1.5,-4.4 -1.8,-5.3 -0.2,-1 -1.3,-4.6 -1.3,-5.5 h 24.1 c 0.5,0 1.3,-0.8 1.3,-1.3 v -2.2 c 0,-0.7 -0.8,-1.1 -1.5,-1.1 h -31.8 c -0.7,0 -1.5,0.4 -1.5,1.1 v 2.2 c 0,0.5 0.8,1.3 1.3,1.3 h 3.5 l 2.6,16 -6.8,2.5 2.8,3.4 c -1,1.3 -2.3,2.1 -3.6,4.2 -0.4,0.8 -1.9,4.4 -1.9,5.5 v 2.2 c 0,5.4 1.6,8.8 4.3,11.5 2.3,2.3 6.5,4.8 11,4.8 h 0.4 c 8.8,0 15.8,-7.4 15.8,-16 h 13.4 c 0.6,0 1.9,1.4 2.4,1.8 h 8.6 c -1.1,1.6 -2.2,2.9 -2.2,5.7 0,4.6 3.9,8.6 8.6,8.6 4.4,0 8.8,-3.8 8.8,-7.9 v -2 c 0,-1.2 -1.5,-3.4 -2,-4.4 h 7.2 l 1,-4.6 h -7.2 v -0.6 l 1.2,-8.1 -0.1,-3.3 c 0,-0.6 -1.7,-2.1 -2.2,-2.4 l -16,-0.5 V 78.2 c 0,-0.5 -0.4,-0.9 -0.9,-0.9 -0.5,0 -0.9,0.4 -0.9,0.9 v 15.4 c -2.2,-0.2 -6,-0.4 -8.1,-0.4 -1.3,0 -2.9,0.1 -4.2,0 -2.1,-0.1 -2,-1.3 -2.9,-1.3 h -4.6 l 2,12.3 H 91.1 V 98.6 C 91.1,97.8 87.1,94.4 86.1,94.4 H 78.7 V 89.8 L 77.5,88.1 75.8,88 z M 88.1,92 c 0,0.5 0.1,0.2 0.2,0.9 h 0.6 c 0.9,0 8.5,-6.4 10.1,-6.8 V 85.4 c 0,-0.5 -0.2,-0.6 -0.6,-0.6 h -0.4 C 97.5,84.7 88.1,91.6 88.1,92 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 119.9,119 c 0,1.9 1.6,3.5 3.5,3.5 h 0.4 c 1.6,0 3.7,-1.6 3.7,-2.8 v -0.7 c 0,-2.3 -1.5,-4 -3.7,-4 h -0.4 c -2,0 -3.5,1.7 -3.5,3.7 v 0.2 z m -52,-10.7 c 0,1.4 -0.4,1.7 -0.4,3.1 0,5.4 4.1,9.6 9.4,9.6 h 0.6 c 4.8,0 8.8,-4.3 8.8,-9.2 v -1.1 c 0,-4.7 -4.3,-8.8 -9,-8.8 h -0.6 c -2.2,0 -4.3,0.9 -5.5,1.9 -2.2,1.7 -1.9,2.4 -3.2,4.4 z"}],t["GR.IN.IC.GRAIN STORAGE"]=[{type:"path",stroke:!1,d:"m 122.8,69.6 c 0.4,0.1 0.9,0.5 1.3,1 0.4,0.5 0.8,1.2 1.3,2 l 2.1,4.1 -2.2,0 -1.9,-3.9 c -0.5,-1 -1,-1.7 -1.5,-2 -0.5,-0.3 -1.1,-0.5 -1.9,-0.5 l -2.2,0 0,6.4 -2.1,0 0,-15.2 4.6,0 c 1.7,1.5e-5 3,0.4 3.9,1.1 0.9,0.7 1.3,1.8 1.3,3.3 -1e-5,1 -0.2,1.7 -0.7,2.4 -0.4,0.6 -1.1,1.1 -1.9,1.3 m -5.1,-6.4 0,5.4 2.6,0 c 1,8e-6 1.7,-0.2 2.2,-0.7 0.5,-0.5 0.8,-1.1 0.8,-2 -1e-5,-0.9 -0.3,-1.6 -0.8,-2 -0.5,-0.5 -1.2,-0.7 -2.2,-0.7 l -2.6,0 m -12.3,-0.3 c -1.5,1.4e-5 -2.7,0.6 -3.6,1.7 -0.9,1.1 -1.3,2.6 -1.3,4.5 0,1.9 0.4,3.4 1.3,4.5 0.9,1.1 2.1,1.7 3.6,1.7 1.5,1e-6 2.7,-0.6 3.5,-1.7 0.9,-1.1 1.3,-2.6 1.3,-4.5 -2e-5,-1.9 -0.4,-3.4 -1.3,-4.5 -0.9,-1.1 -2,-1.7 -3.5,-1.7 m 0,-1.7 c 2.1,1.6e-5 3.8,0.7 5.1,2.1 1.3,1.4 1.9,3.3 1.9,5.7 -2e-5,2.4 -0.6,4.3 -1.9,5.7 -1.3,1.4 -3,2.1 -5.1,2.1 -2.1,0 -3.8,-0.7 -5.1,-2.1 -1.3,-1.4 -1.9,-3.3 -1.9,-5.7 -10e-7,-2.4 0.6,-4.3 1.9,-5.7 1.3,-1.4 3,-2.1 5.1,-2.1 m -21,0.3 12.8,0 0,1.7 -5.4,0 0,13.4 -2.1,0 0,-13.4 -5.4,0 0,-1.7 m -2,0.5 0,2 c -0.8,-0.4 -1.5,-0.6 -2.2,-0.8 -0.7,-0.2 -1.4,-0.3 -2,-0.3 -1.1,1.4e-5 -2,0.2 -2.6,0.7 -0.6,0.4 -0.9,1 -0.9,1.8 -4e-6,0.7 0.2,1.2 0.6,1.5 0.4,0.3 1.2,0.6 2.3,0.8 l 1.2,0.3 c 1.5,0.3 2.7,0.8 3.4,1.5 0.7,0.7 1.1,1.7 1.1,2.9 -1.2e-5,1.5 -0.5,2.6 -1.5,3.3 -1,0.8 -2.4,1.1 -4.3,1.1 -0.7,0 -1.5,-0.1 -2.3,-0.2 -0.8,-0.2 -1.6,-0.4 -2.5,-0.7 l 0,-2.1 c 0.8,0.5 1.6,0.8 2.4,1.1 0.8,0.2 1.6,0.4 2.4,0.4 1.2,1e-6 2.1,-0.2 2.7,-0.7 0.6,-0.5 1,-1.1 1,-2 -10e-6,-0.7 -0.2,-1.3 -0.7,-1.7 -0.5,-0.4 -1.2,-0.7 -2.2,-0.9 l -1.2,-0.2 c -1.5,-0.3 -2.6,-0.8 -3.3,-1.4 -0.7,-0.6 -1,-1.6 -1,-2.7 -10e-7,-1.3 0.5,-2.4 1.4,-3.2 0.9,-0.8 2.3,-1.2 3.9,-1.2 0.7,1.6e-5 1.4,0.1 2.2,0.2 0.7,0.1 1.5,0.3 2.3,0.6 m 24.4,48.1 -0.2,2.4 h 0.4 l -1.7,3 -1,-1.7 -0.1,2 0.5,0.6 -1.2,3 -1.5,-3 0.4,3.6 0.8,0.2 -3.1,9.7 -0.5,-4.2 0.1,-1.8 c 0,-1.5 0.8,-4.7 1,-6.3 0.3,-1.7 1.3,-4.5 1.4,-6 0.6,0.1 0.4,0.2 0.8,0.2 0.4,0 2.3,-1.5 2.6,-1.8 l -3,0.6 0.8,-2.7 c 0.6,0.1 0.4,0.2 0.8,0.2 0.4,0 2.6,-1.7 2.8,-2 l -3,0.8 0.7,-2.4 c 1.3,0 2.1,-0.8 2.8,-1.4 l -2.4,0.4 0.8,-2 c 1.1,-0 1.5,-0.9 1.8,-1.8 l -1.3,0.7 2.3,-6.1 -0.8,-0.1 -2.1,5.9 -0.3,0 -0.5,-2.1 -0.1,-0 c 0,1.5 -0.4,1.6 -0.4,2.4 0,0.5 0.2,0.5 0.6,0.6 l -0.9,2.1 -1,-1.4 c -0.1,1.6 -0.4,1.9 0.7,2.4 l -0.8,2.4 -1.7,-2.2 0.4,2.8 0.6,0.5 -0.5,2.7 -1.5,-1.9 0.2,2.4 0.9,0.5 c 0,0.4 -1,4.6 -1.2,6 -0.4,2.3 -0.9,3.5 -0.9,6.3 l -1.2,-3.6 0.6,-0.8 -0,-2 -1.2,1.2 -0.8,-2.8 0.6,-0.8 -0,-2 -1.1,1.2 -0.7,-1.7 c 1,-0.5 1,-1.6 1,-3.2 l -1.3,2.1 c -0.7,-0.2 -1.1,-1.4 -1.3,-2.3 0.3,-0.4 0.6,-0.5 0.6,-1 v -1.6 h -0.4 l -0.7,1.8 c -0.2,-0.2 -0.7,-0.7 -0.7,-1.2 0,-0.4 0.6,-0.3 0.6,-1 v -0.2 c 0,-1.1 -0.4,-1.1 -0.4,-2.4 l -0.7,2.3 -0.3,0 -2.8,-5.9 -0.4,0.2 2.5,5.7 -1.3,-0.7 1,1.9 1,0 0.6,1 -2.6,-0.4 c 0.4,0.4 1.7,1.4 2.4,1.4 0.1,0 0.4,-0.1 0.6,-0.2 l 1,2.2 -3.2,-0.6 c 1.1,1 2,1.7 3.6,1.6 l 1.1,2.7 -2.9,-0.4 c 0.7,1 1.7,1.3 3,1.5 0.4,0.1 1.1,2.8 1.2,3.5 l -3,-0.6 2.2,1.6 h 1 c 1.2,2.3 2.4,11.9 2.4,15.8 h 1.4 l -0.2,-2.2 0,-1 c 0,-4 2.9,-9.3 3.2,-12.3 0.8,0.1 0.5,0.2 1,0.2 0.2,0 2.9,-1.2 3.2,-1.4 l -3.6,0.3 1.2,-3.1 0.8,0.4 3,-1.3 -3.2,0.2 1.4,-2.8 c 0.4,0.1 0.4,0.2 1,0.2 0.3,0 2.1,-1 2.4,-1.2 l -2.8,0.2 1.4,-2 c 1.5,0.1 1.5,-0.4 2.4,-1.6 l -1.4,0.4 c 0.5,-1.1 1.2,-2.2 1.8,-3.2 0.4,-0.6 2,-2.7 0.8,-3 l 0.2,0.1 -3.4,5.8 -0.4,-2.3 h -0.2 c 0,1.4 -0.6,1.7 -0.6,2.2 0,0.3 0.3,0.7 0.4,1 l -1.5,2 -0.7,-1.9 z m -25.4,13.5 c 0,-3.7 0.1,-9.1 0.7,-12.4 0.4,-2 0.1,-4 0.6,-6 0.4,-1.7 0.4,-4.2 0.8,-5.8 2.8,-10.1 1,-11.8 14.3,-11.8 h 4.4 c 11.6,0 12.6,1.2 14.2,11.3 1.2,7.6 2,14.6 2,23.6 v 8.3 l -0.4,3.6 c -1.1,1.6 -2.1,3.4 -4.9,3.4 H 86.7 c -5.4,0 -5.3,-6.4 -5.3,-11.9 v -2.4 z m -5.8,-32.5 c 2.1,-0.6 0.4,-1.3 4.4,-1 2.4,0.2 3,0.3 5,0.8 -0.7,1.1 -4.6,3 -6.5,3 h -0.4 c -0.9,0 -2.4,-1.2 -2.4,-2 v -0.8 h -0 z m 43.2,-1.5 c 2.2,-0.2 4.8,0.9 4.8,3.1 v 0.6 c 0,0.6 -0.6,0.8 -1.2,0.8 h -0.6 c -1.8,0 -6.2,-2.7 -6.9,-3.9 l 4,-0.6 z m -36.6,-6.7 c 0,-1 1,-2.2 1.8,-2.2 h 0.6 c 0.6,0 1.4,1.6 1.4,2.2 v 4.2 c 0,1.3 -0.4,1.5 -0.4,2.8 -1,-0.3 -3.4,-4.3 -3.4,-5.5 v -1.4 h -0 z m 31.7,2.8 c 0,-2.8 -0,-5.2 2.8,-5.2 h 0.6 c 0.6,0 1,0.7 1,1.4 0,2 -3,6.8 -4.4,7.3 v -3.6 h -0 z m 1.4,3.8 c 0.5,-1.8 3.8,-5 3.8,-7.1 v -1.4 c -0.6,-0.3 -0.7,-1.2 -1.6,-1.2 h -0.6 c -2.6,0 -3.8,2 -3.8,4.5 v 4.2 c -2,-0.5 -2.3,-1 -5.2,-1.2 -2,-0.2 -3.7,-0.4 -6,-0.4 h -3.6 c -4.8,0 -8.9,0.3 -12.1,2 0.2,-0.7 0.4,-0.9 0.4,-1.8 v -3.4 c 0,-1.4 -1,-3.8 -2.2,-3.8 h -0.8 c -0.8,0 -2.6,1.9 -2.6,3 0,2 2.1,5.5 3,6.8 l -5.7,-0.5 c -1.2,0 -3.4,1.1 -3.4,2.1 v 0.6 c 0,1.3 1.7,2.8 3,2.8 h 0.2 c 2.9,0 4.5,-2 6.3,-2.4 -1.9,3.5 -3.8,22 -3.8,28.1 v 6 c 0,5.9 0.3,12.3 6.1,12.3 h 26.1 c 4.1,0 6.1,-3.8 6.1,-7.9 v -10.5 c 0,-2.3 -0.2,-5.5 -0.4,-7.7 -0.2,-1.8 -0.8,-5.7 -0.8,-7.4 0,-2.6 -0.7,-4.7 -1,-7.1 -0.2,-2.1 -1.3,-4.3 -1.8,-6.2 1.2,0.6 4.9,3 6.1,3 h 1.2 c 1,0 1.8,-0.8 1.8,-1.8 v -0.2 c 0,-2.2 -1.5,-3.8 -3.8,-3.8 h -2.6 l -2.8,0.4 z m -28.1,0.6 c 0.5,1.9 8.9,3.2 11.9,3.2 h 1 c 3.1,0 12.5,-1.4 12.7,-3.6 -4.1,-1 -6.5,-1.8 -11.9,-1.8 h -1.4 c -2.4,0 -4.4,0.4 -6.5,0.6 -2.9,0.4 -3.8,1.1 -5.8,1.6 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 105.3,110.1 c -0.3,0.3 -2.2,1.8 -2.6,1.8 -0.4,0 -0.2,-0.1 -0.8,-0.2 0,1.5 -1.1,4.3 -1.3,6 -0.3,1.6 -1,4.8 -1,6.3 l -0.1,1.8 0.5,4.2 3.1,-9.7 -0.8,-0.2 -0.4,-3.6 1.5,3 1.2,-3 -0.5,-0.6 0.1,-2 1,1.7 1.7,-3 h -0.4 l 0.2,-2.4 -0.3,-1.2 -1.2,1.2 z m 0,0 1.2,-1.2 0.3,1.2 0.7,1.9 1.5,-2 c -0.1,-0.3 -0.4,-0.7 -0.4,-1 0,-0.5 0.6,-0.8 0.6,-2.2 h 0.2 l 0.4,2.3 3.4,-5.7 -0.2,-0.1 c 1.3,0.4 -0.4,2.4 -0.8,3 -0.6,1 -1.3,2.1 -1.8,3.2 l 1.4,-0.4 c -0.8,1.2 -0.9,1.7 -2.4,1.6 l -1.4,2 2.8,-0.2 c -0.3,0.2 -2,1.2 -2.4,1.2 -0.5,0 -0.5,-0.1 -1,-0.2 l -1.4,2.8 3.2,-0.2 -3,1.3 -0.8,-0.4 -1.2,3.1 3.6,-0.4 c -0.3,0.2 -2.9,1.4 -3.2,1.4 -0.5,0 -0.2,-0.1 -1,-0.2 -0.3,2.9 -3.2,8.2 -3.2,12.3 l -0.1,1 0.3,2.2 h -1.4 c 0,-4 -1.2,-13.6 -2.4,-15.8 h -1 l -2.2,-1.6 3,0.6 c 0,-0.7 -0.8,-3.4 -1.2,-3.5 -1.3,-0.2 -2.3,-0.5 -3,-1.5 l 2.9,0.4 -1.1,-2.8 c -1.5,0.1 -2.5,-0.6 -3.6,-1.6 l 3.2,0.6 -1.1,-2.2 c -0.2,0.1 -0.5,0.2 -0.6,0.2 -0.7,0 -2,-1 -2.4,-1.4 l 2.6,0.4 -0.6,-1 h -1 l -1,-1.9 1.3,0.7 -2.5,-5.7 0.4,-0.2 2.8,5.9 0.3,-0 0.7,-2.4 c 0,1.3 0.4,1.2 0.4,2.4 v 0.2 c 0,0.7 -0.6,0.6 -0.6,1 0,0.4 0.5,1 0.7,1.2 l 0.7,-1.8 h 0.4 v 1.6 c 0,0.5 -0.3,0.6 -0.6,1 0.2,0.9 0.5,2.1 1.3,2.3 l 1.3,-2.1 c 0,1.5 0,2.6 -1,3.2 l 0.7,1.7 1.1,-1.2 0,2 -0.6,0.8 0.8,2.8 1.2,-1.2 0,2 -0.6,0.7 1.2,3.6 c 0,-2.8 0.4,-4 0.9,-6.2 0.3,-1.3 1.3,-5.6 1.2,-6 l -0.9,-0.5 -0.2,-2.5 1.5,1.9 0.5,-2.7 -0.6,-0.5 -0.4,-2.8 1.7,2.2 0.8,-2.4 c -1,-0.5 -0.8,-0.8 -0.7,-2.4 l 1,1.4 0.9,-2.1 c -0.4,-0.1 -0.6,-0 -0.6,-0.6 0,-0.8 0.4,-0.9 0.4,-2.4 l 0.1,0 0.5,2.1 0.3,-0 2.1,-5.9 0.8,0.1 -2.3,6.1 1.3,-0.7 c -0.2,0.9 -0.6,1.8 -1.8,1.8 l -0.8,2 2.4,-0.4 c -0.7,0.6 -1.5,1.4 -2.8,1.4 l -0.7,2.4 3,-0.8 c -0.2,0.3 -2.4,2 -2.8,2 -0.4,0 -0.2,-0.1 -0.8,-0.2 l -0.8,2.7 3,-0.5 z M 87.1,90.1 c 2,-0.5 2.9,-1.2 5.8,-1.6 2.1,-0.3 4.1,-0.6 6.5,-0.6 h 1.4 c 5.4,0 7.8,0.8 11.9,1.8 -0.2,2.2 -9.6,3.6 -12.7,3.6 h -1 c -3,0 -11.4,-1.3 -11.9,-3.2 z m -5.8,33.5 v 2.4 c 0,5.5 -0.1,11.9 5.3,11.9 h 26.4 c 2.8,0 3.8,-1.7 4.9,-3.4 l 0.4,-3.6 v -8.3 c 0,-9 -0.8,-15.9 -2,-23.6 -1.6,-10.1 -2.6,-11.3 -14.2,-11.3 h -4.4 c -13.3,0 -11.6,1.7 -14.3,11.8 -0.4,1.6 -0.4,4 -0.8,5.8 -0.5,2 -0.2,3.9 -0.6,6 -0.6,3.3 -0.7,8.6 -0.7,12.4 z M 114.8,90.2 c 0.7,1.2 5.2,3.9 6.9,3.9 h 0.6 c 0.6,0 1.2,-0.2 1.2,-0.8 v -0.6 c 0,-2.2 -2.6,-3.3 -4.8,-3.1 l -4,0.6 0,0 z m -39.2,0.9 v 0.8 c 0,0.8 1.4,2 2.4,2 h 0.4 c 2,0 5.8,-1.9 6.5,-3 -2,-0.4 -2.6,-0.6 -5,-0.8 -3.8,-0.3 -2.1,0.4 -4.3,1 z m 38.3,-5.3 v 3.6 c 1.3,-0.5 4.4,-5.3 4.4,-7.3 0,-0.7 -0.4,-1.4 -1,-1.4 h -0.6 c -2.8,-0 -2.8,2.4 -2.8,5.1 z m -31.7,-2.8 v 1.4 c 0,1.3 2.4,5.3 3.4,5.5 0,-1.3 0.4,-1.5 0.4,-2.8 v -4.2 c 0,-0.6 -0.8,-2.2 -1.4,-2.2 h -0.6 c -0.8,0 -1.8,1.3 -1.8,2.2 z"}],t["GR.IN.IC.ATM"]=[{type:"path",stroke:!1,d:"m 73.6,116.3 c 5.1,-0.1 15.8,-6.6 17,-6.6 0.4,0 7.4,3.8 8.9,4.2 -0.4,0.6 -5.1,4.6 -6.2,5.7 -1.2,1.2 -4.7,5.8 -5.5,6.4 -1.6,-0.8 -14,-8.9 -14.2,-9.6 z m -15.1,-6.2 11.9,-2.5 11.1,5.6 -9.6,3 16.2,10.7 -0,-0.2 6.4,-7.5 26.9,12.7 20.3,-46.8 -50.2,-17.2 c -0.6,2.2 -5.2,9.1 -6.5,11.8 -0.8,1.8 -2.3,4.4 -3.3,6 -1.2,1.8 -2.2,4.1 -3.3,6 -1.2,2 -2.1,3.8 -3.3,5.8 -1.2,1.9 -2.1,4.2 -3.3,6 -2.4,3.6 -0.2,2.7 -5.5,3.7 -2.6,0.5 -5.2,1 -7.7,1.6 m 62,21.5 -25.2,-11.8 4.8,-4 7.3,3.5 1.2,-2.4 -23.9,-11.7 v 0.2 l -1,2.2 6,2.9 -6.2,3.4 -11.8,-5.8 -0.2,0 20.7,-37 0.2,0.1 47.4,16.1 h 0.2 l -19.4,44.2 z m 7.8,-31.3 1.1,-2 -5.8,-2.3 -0.8,2.3 z m -2.7,5.2 1.2,-1.9 -5.6,-2.3 -0.8,2.2 z m -22,-7.3 c 0.6,0.4 2.1,1.4 2.1,2.1 v 2.4 c 0,0.8 -1.7,1.5 -2.6,1.5 h -0.2 c -0.8,0 -1,-0.2 -1.7,-0.4 l 2.4,-5.7 z m -3.4,-6.4 c 0,-2.2 1.1,-2.8 3.2,-2.8 h 0.2 c 0.7,0 1,0.2 1.5,0.4 l -2.2,5.1 c -0.9,-0 -2.8,-1.2 -2.8,-2.4 v -0.2 z m 5.6,-4.2 c -0.3,-0.1 -1.2,-0.5 -1.6,-0.5 h -1.9 c -0.7,0 -2.5,0.6 -2.9,0.9 -0.3,0.2 -1.4,2.1 -1.4,2.5 v 1.7 c 0,2.1 3.8,4.2 3.8,4.9 0,0.4 -2.2,4.6 -2.4,5.7 -0.6,-0.3 -2.5,-1.8 -2.5,-2.6 v -0.6 c 0,-0.8 0.6,-1.4 0.8,-2.1 -0.9,-0.2 -2,-1.1 -2.4,-1.2 -0.4,-0.1 -1,1.7 -1,2.3 v 0.4 c 0,2.7 4.2,5.4 4.2,5.7 0,0.6 -0.4,1.4 -0.5,2 l 1.7,0.8 0.6,-1.7 c 1.4,0 2,0.8 3.6,0.8 h 0.6 c 1.4,0 2.6,-0.5 3.2,-1.3 0.3,-0.4 1.5,-2.4 1.5,-3 v -0.4 c 0,-2.6 -2.8,-4.8 -4.4,-5.9 l 2.5,-5.6 h 0.4 c 0.4,1.2 1.5,0.6 1.5,3.6 l 2.8,1.2 v -1.7 c 0,-2 -2,-4.1 -3.8,-4.6 l 0.8,-2.1 -2.1,-0.5 -0.8,1.5 z m 13,18.4 -0.9,2 5.4,2.2 -0,-0.2 1.2,-1.8 z m -22.4,-25.2 26.1,9.5 -11,24.1 -26.7,-12.8 11.6,-20.8 z m -12.5,21.2 27.8,13.4 11.7,-25.7 c -1,-0.1 -11.8,-4.2 -13.4,-4.8 -1.2,-0.5 -13.3,-5 -13.5,-5 -0.9,0 -5.4,9.5 -6.4,10.8 -0.8,1.3 -5.9,10.3 -6.1,11.2 z m 31.7,11.2 5.4,2.2 -0.1,-0.2 1.3,-1.8 c -1.1,-0.2 -5,-2.2 -5.5,-2.2 -0.4,0 -1.1,1.6 -1.2,2.1 z m -25.8,0.6 4.3,2.9 -6,5.8 -6,-4.1 7.7,-4.6 z m -9.1,4.5 7.4,4.9 7.1,-6.6 c -0.5,-0.4 -5.3,-3.6 -5.4,-3.6 -1,0 -7.6,4.9 -9.1,5.3 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 115.7,111.8 c 0,-0.5 0.8,-2.1 1.2,-2.1 0.5,0 4.4,2 5.5,2.3 l -1.3,1.8 0.1,0.2 -5.4,-2.2 z m 3.2,-7.1 5.7,2.2 -1.2,1.8 0,0.2 -5.4,-2.2 0.9,-2 z m 2.4,-4.8 5.6,2.3 -1.2,1.9 -5.2,-2 0.8,-2.2 z m 2.5,-5.3 5.8,2.3 -1.1,2 -5.5,-2 0.8,-2.3 z m -39.7,6 c 0.2,-1 5.3,-10 6.1,-11.2 0.9,-1.4 5.4,-10.8 6.4,-10.8 0.2,0 12.3,4.5 13.5,5 1.7,0.7 12.5,4.8 13.5,4.8 l -11.7,25.7 -27.8,-13.4 z m 55.9,-14.6 h -0.2 l -47.4,-16.1 -0.2,-0.1 -20.7,37 0.2,-0 11.8,5.8 6.3,-3.4 -6,-2.9 1,-2.2 v -0.2 l 23.9,11.7 -1.2,2.4 -7.3,-3.5 -4.8,4 25.2,11.8 19.4,-44.2 0,0 z m -59.1,30.9 c 1.5,-0.4 8,-5.3 9.1,-5.3 0.2,0 4.9,3.2 5.5,3.6 l -7.2,6.6 -7.4,-4.9 z m -7.2,-0.6 c 0.2,0.8 12.6,8.8 14.2,9.6 0.8,-0.6 4.3,-5.2 5.5,-6.4 1.1,-1.1 5.8,-5.1 6.2,-5.7 -1.6,-0.3 -8.5,-4.1 -8.9,-4.1 -1.2,0 -11.9,6.5 -17,6.6 z m 26.6,-25.9 v 0.2 c 0,1.2 1.8,2.4 2.7,2.4 l 2.2,-5 c -0.4,-0.2 -0.8,-0.4 -1.5,-0.4 h -0.2 c -2.1,0 -3.2,0.7 -3.2,2.8 z m 0.9,12.1 c 0.7,0.2 0.9,0.4 1.7,0.4 h 0.2 c 1,0 2.6,-0.7 2.6,-1.5 v -2.4 c 0,-0.7 -1.6,-1.7 -2.1,-2.1 l -2.4,5.6 z m 5.5,-17.7 2.1,0.5 -0.8,2.1 c 1.8,0.4 3.8,2.5 3.8,4.6 v 1.7 l -2.8,-1.1 c 0,-3 -1.1,-2.4 -1.5,-3.6 h -0.4 l -2.5,5.6 c 1.6,1.1 4.4,3.3 4.4,5.9 v 0.4 c 0,0.6 -1.2,2.6 -1.5,3 -0.6,0.8 -1.8,1.3 -3.2,1.3 h -0.6 c -1.6,0 -2.2,-0.7 -3.6,-0.8 l -0.6,1.7 -1.7,-0.8 c 0.1,-0.6 0.5,-1.4 0.5,-2 0,-0.3 -4.2,-2.9 -4.2,-5.7 v -0.4 c 0,-0.6 0.6,-2.4 1,-2.4 0.4,0.1 1.4,1 2.4,1.2 -0.2,0.7 -0.7,1.3 -0.7,2.1 v 0.6 c 0,0.8 1.8,2.3 2.4,2.6 0.2,-1 2.4,-5.3 2.4,-5.7 0,-0.7 -3.8,-2.8 -3.8,-4.9 V 89.1 c 0,-0.4 1.1,-2.3 1.4,-2.5 0.4,-0.3 2.2,-0.9 2.9,-0.9 h 1.9 c 0.4,0 1.4,0.4 1.6,0.5 l 0.8,-1.4 z m -21.8,15.4 26.6,12.9 11,-24.1 -26,-9.5 -11.6,20.8 z m 5,12.1 -7.7,4.6 6,4.1 6,-5.8 z"}],t["GR.IN.IC.BANK"]=[{type:"path",stroke:!1,d:"m 100.8,110.6 c 2.4,0 5.3,1.9 5.3,4.4 v 0.7 c 0,3.1 -2.1,4.9 -5.3,4.9 v -9.9 z m -6.6,-8.8 c 0,-2.3 1.7,-4.4 4,-4.4 h 0.7 v 9 c -1.9,-0.4 -4.6,-1.6 -4.6,-3.7 v -0.9 z m 6.6,-4.4 c 2.2,0 4.6,1.6 4.6,3.5 v 0.9 h 3.5 c 0,-5.3 -3.7,-6.7 -8.1,-7.7 v -2.4 h -2 v 2.4 c -3.9,0 -8.2,3.5 -8.2,7 v 2.6 c 0,1.3 2,3.6 3,4.2 1,0.6 3.8,1.8 5.1,1.9 v 10.6 c -3.4,-0.1 -5.2,-2.6 -5.2,-6.1 h -3.3 l 0.2,3.5 c 1.1,1.7 0.9,2.8 2.9,4.1 1.3,0.8 3.4,1.6 5.5,1.6 v 4 h 2 v -3.9 c 4.9,0 9,-3.4 9,-8.1 v -1.8 c 0,-4.2 -5.4,-6 -9,-6.8 v -9.4 z m -25.3,15.2 v -2.4 c 0,-2.2 2.6,-7.4 3.1,-9.4 0.7,-2.7 3.1,-5.9 4.7,-8 3.5,-4.6 8.5,-8.9 16.5,-8.9 h 4.4 c 3.4,0 8.8,4.3 10.4,6.5 1.3,1.7 2.2,3.1 3.4,5 0.5,0.7 2.7,5.2 2.7,5.9 v 0.7 h 0.4 v 0.7 c 0,0.4 0.9,1.5 0.8,3.1 l 0.5,0.7 c 0,2 1.1,6.8 1.3,9 0.4,3.2 1.3,5.6 -0.7,8.5 0,2.4 -5.2,8.7 -6.2,8.8 l -9.2,-1.5 c -1.8,-0.3 -6.8,2 -9.2,2 -2,0 -5.6,-1.7 -7.5,-1.7 -1.6,0 -3.2,1.3 -5.5,1.3 h -0.6 c -1.9,0 -5.9,-6.1 -7,-7.7 -1.8,-2.6 -2.4,-8 -2.4,-12.3 z m 30.7,-31 -6.1,-1.1 c -0.8,-0.1 -5.2,1.1 -5.8,1.3 l -6.3,-11.5 1.7,0.5 v -2.9 l 8.9,3.4 0.3,-3.5 3.2,2.5 5.7,-2.6 v 2.6 l 7.5,-1.4 -9.3,13 0,0 z m 11.8,-14.5 -9.1,1.6 v -2.8 c -0.9,0.5 -5.7,2.9 -6.6,2.9 -0.1,0 -3.4,-2.6 -4,-2.9 l -0.7,4 -8.8,-3.6 v 2.9 l -3.1,-1 8.1,15.1 -0.2,0.1 c -4.6,1.1 -10.3,6.8 -12.7,10.4 -0.8,1.1 -1.3,2.6 -2,3.7 -1.4,1.8 -0.9,2.5 -1.7,4 -0.6,1.1 -2.9,7.2 -2.9,8.6 v 3.7 c 0,1 0.7,5.8 1,6.7 0.4,1.4 0.4,2 0.8,3.2 0.3,0.9 0.9,1.6 1.4,2.3 1.3,2 4.8,7.5 7.6,7.5 2.5,0 4.3,-1.3 5.7,-1.3 2.3,0 5.2,1.7 7.3,1.7 h 0.7 c 2,0 5.7,-1.4 8,-1.9 1.8,-0.3 5.9,1 8.5,1 h 1.7 c 1.7,0 4.8,-4.2 5.8,-5.5 1.1,-1.4 1.3,-2.2 1.7,-4 0.1,-0.4 1.1,-4.3 1.1,-4.4 0,-3 -0.9,-4.1 -1.1,-5.9 -0.2,-2.4 -0.4,-4 -0.7,-6.1 -0.2,-1.7 -2.8,-8.6 -3.6,-10.3 -2.4,-4.9 -7.7,-13.2 -14,-13.7 l 11.7,-16.2 z"
},{type:"path",stroke:!1,fill:!!R&&U,d:"m 100.8,120.4 c 3.2,0 5.3,-1.7 5.3,-4.9 v -0.6 c 0,-2.5 -2.9,-4.3 -5.3,-4.4 v 9.8 z m -6.6,-18.7 v 0.9 c 0,2.2 2.8,3.3 4.6,3.7 v -9 h -0.7 c -2.3,0 -4,2 -4,4.4 z m 6.6,5 c 3.6,0.8 9,2.6 9,6.8 v 1.7 c 0,4.7 -4.1,8.1 -9,8.1 v 4 h -2 v -3.9 c -2,0 -4.2,-0.7 -5.5,-1.6 -2,-1.3 -1.7,-2.5 -2.9,-4.2 l -0.2,-3.5 h 3.3 c 0,3.5 1.8,6.1 5.3,6.2 v -10.6 c -1.3,-0.1 -4.1,-1.3 -5.1,-2 -1,-0.6 -3,-3 -3,-4.2 v -2.6 c 0,-3.5 4.2,-7 8.1,-7 v -2.4 h 2 v 2.4 c 4.4,1 8.1,2.3 8.1,7.7 h -3.5 v -0.9 c 0,-1.9 -2.5,-3.5 -4.6,-3.5 v 9.5 l 0,0 z m -25.3,5.8 c 0,4.3 0.6,9.8 2.4,12.3 1.1,1.6 5.1,7.7 7,7.7 h 0.7 c 2.3,0 3.9,-1.3 5.5,-1.3 1.9,0 5.5,1.7 7.5,1.7 2.5,0 7.4,-2.3 9.2,-2 l 9.1,1.5 c 1,0 6.2,-6.4 6.2,-8.8 2,-2.9 1,-5.3 0.7,-8.6 -0.2,-2.2 -1.3,-6.9 -1.3,-9 l -0.5,-0.6 c 0.1,-1.6 -0.8,-2.7 -0.8,-3.1 v -0.7 h -0.4 v -0.7 c 0,-0.7 -2.2,-5.2 -2.7,-5.9 -1.1,-1.9 -2.1,-3.2 -3.4,-5 -1.6,-2.2 -7,-6.5 -10.4,-6.5 h -4.4 c -8,0 -13,4.4 -16.5,8.9 -1.6,2.1 -4,5.3 -4.7,8 -0.5,2 -3.1,7.2 -3.1,9.4 v 2.4 z m 40,-44 -7.4,1.5 v -2.6 l -5.8,2.6 -3.2,-2.4 -0.3,3.5 -8.9,-3.4 v 2.9 l -1.7,-0.5 6.3,11.5 c 0.5,-0.2 5,-1.4 5.8,-1.3 l 6.1,1.1 9.3,-13 0,0 z"}],t["GR.IN.IC.BULLION STORAGE"]=[{type:"path",stroke:!1,d:"m 123.1,77.9 c 0.4,0.1 0.9,0.5 1.3,1 0.4,0.5 0.8,1.2 1.3,2 l 2.1,4.1 -2.2,0 -1.9,-3.9 c -0.5,-1 -1,-1.7 -1.5,-2 -0.5,-0.3 -1.1,-0.5 -1.9,-0.5 l -2.2,0 0,6.4 -2.1,0 0,-15.2 4.6,0 c 1.7,1.5e-5 3,0.4 3.9,1.1 0.9,0.7 1.3,1.8 1.3,3.3 -1e-5,1 -0.2,1.7 -0.7,2.4 -0.4,0.6 -1.1,1.1 -1.9,1.3 m -5.1,-6.4 0,5.4 2.6,0 c 1,8e-6 1.7,-0.2 2.2,-0.7 0.5,-0.5 0.8,-1.1 0.8,-2 -1e-5,-0.9 -0.3,-1.6 -0.8,-2 -0.5,-0.5 -1.2,-0.7 -2.2,-0.7 l -2.6,0 m -12.3,-0.3 c -1.5,1.4e-5 -2.7,0.6 -3.6,1.7 -0.9,1.1 -1.3,2.6 -1.3,4.5 -10e-6,1.9 0.4,3.4 1.3,4.5 0.9,1.1 2.1,1.7 3.6,1.7 1.5,10e-7 2.7,-0.6 3.5,-1.7 0.9,-1.1 1.3,-2.6 1.3,-4.5 -1e-5,-1.9 -0.4,-3.4 -1.3,-4.5 -0.9,-1.1 -2,-1.7 -3.5,-1.7 m 0,-1.7 c 2.1,1.5e-5 3.8,0.7 5.1,2.1 1.3,1.4 1.9,3.3 1.9,5.7 -1e-5,2.4 -0.6,4.3 -1.9,5.7 -1.3,1.4 -3,2.1 -5.1,2.1 -2.1,0 -3.8,-0.7 -5.1,-2.1 -1.3,-1.4 -1.9,-3.3 -1.9,-5.7 -10e-7,-2.4 0.6,-4.3 1.9,-5.7 1.3,-1.4 3,-2.1 5.1,-2.1 m -21,0.3 12.8,0 0,1.7 -5.4,0 0,13.4 -2.1,0 0,-13.4 -5.4,0 0,-1.7 m -2,0.5 0,2 c -0.8,-0.4 -1.5,-0.6 -2.2,-0.8 -0.7,-0.2 -1.4,-0.3 -2,-0.3 -1.1,1.4e-5 -2,0.2 -2.6,0.7 -0.6,0.4 -0.9,1 -0.9,1.8 -3e-6,0.7 0.2,1.2 0.6,1.5 0.4,0.3 1.2,0.6 2.3,0.8 l 1.2,0.3 c 1.5,0.3 2.7,0.8 3.4,1.5 0.7,0.7 1.1,1.7 1.1,2.9 -1.2e-5,1.5 -0.5,2.6 -1.5,3.3 -1,0.8 -2.4,1.1 -4.3,1.1 -0.7,0 -1.5,-0.1 -2.3,-0.2 -0.8,-0.2 -1.6,-0.4 -2.5,-0.7 l 0,-2.1 c 0.8,0.5 1.6,0.8 2.4,1.1 0.8,0.2 1.6,0.4 2.4,0.4 1.2,10e-7 2.1,-0.2 2.7,-0.7 0.6,-0.5 1,-1.1 1,-2 -1e-5,-0.7 -0.2,-1.3 -0.7,-1.7 -0.5,-0.4 -1.2,-0.7 -2.2,-0.9 l -1.2,-0.2 c -1.5,-0.3 -2.6,-0.8 -3.3,-1.4 -0.7,-0.6 -1,-1.6 -1,-2.7 -2e-6,-1.3 0.5,-2.4 1.4,-3.2 0.9,-0.8 2.3,-1.2 3.9,-1.2 0.7,1.5e-5 1.4,0.1 2.2,0.2 0.7,0.1 1.5,0.3 2.3,0.6 M 103.6,119.3 h 9.6 c 0.4,0 9,9.2 9.6,10.1 H 95.6 c 0.2,-1 7.4,-10.1 8,-10.1 z m -29.2,0 h 9.9 c 0.6,0 8.2,9 8.9,10.1 H 65.9 c 0.3,-1 7.8,-10.1 8.4,-10.1 l 0,0 z m 11.5,0 h 15.4 l -6.9,9.9 -8.5,-9.9 z m -5.5,-1 c 0.7,-1.1 7.6,-9.4 8.4,-9.4 h 9.2 c 0.7,0 8.9,8.5 9.2,9.4 H 80.4 z m 43.7,10.8 -9.5,-10.4 10.4,-14.3 9.7,8.5 -10.7,16.1 0,0 z m -4.8,-24.8 4.8,-0 -10.5,14.1 -4.1,-0.1 9.8,-13.9 z m -31.1,-0.2 2.8,0.1 c -1.1,1.6 -4.6,4.9 -6.2,6.8 -1.7,2.1 -4.2,5.1 -5.6,7.2 l -4.2,-0.1 13.2,-14.1 z m 21.1,-8.6 c 0.9,0.6 9,8.2 9,8.5 0,0.1 -9.3,13.6 -9.9,14 l -8.9,-9.9 9.8,-12.6 z M 89.1,108 c 0.9,-1.3 11.4,-12.6 12.1,-12.6 h 6.8 l -9.5,12.5 -9.4,0 z m 2.9,-4.6 h -4.6 c -1.2,1.8 -4.3,4.9 -6,6.6 -2.1,2.1 -3.9,4.4 -6,6.5 -1.3,1.3 -11.2,12.8 -11.4,13.7 0.5,0.1 0.5,0.2 1.2,0.2 l 59.3,-0 11.6,-17.5 -0.3,0.1 -10.5,-9.6 h -5.8 c -1.5,-1 -9.6,-8.9 -10.4,-8.9 h -8.2 c -0.9,0 -7.6,8 -9,8.9 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 103.6,119.3 c -0.5,0 -7.7,9.2 -8,10.1 h 27.3 c -0.6,-1 -9.2,-10.1 -9.6,-10.1 h -9.6 z m -29.2,0 c -0.6,0 -8.2,9.1 -8.4,10.1 h 27.3 c -0.7,-1.1 -8.3,-10.1 -8.9,-10.1 H 74.3 l 0,0 z m 50.7,-14.7 -10.4,14.3 9.5,10.4 10.7,-16.1 z m -30.7,24.7 6.9,-9.9 -15.4,0 z m 5.1,-21.1 8.9,9.9 c 0.6,-0.4 9.9,-13.9 9.9,-14 0,-0.3 -8.1,-7.9 -9,-8.5 l -9.9,12.6 z m -19.1,10.2 h 26.8 c -0.2,-0.9 -8.5,-9.4 -9.2,-9.4 h -9.2 c -0.9,0 -7.7,8.3 -8.4,9.4 z m 33.2,0.1 10.5,-14.1 -4.8,0 -9.8,13.9 z m -38.6,-0.2 4.2,0.1 c 1.4,-2.1 3.9,-5.1 5.6,-7.2 1.6,-1.9 5.1,-5.2 6.2,-6.8 l -2.8,-0.1 -13.2,14.1 z m 14.1,-10.3 9.4,-0 9.5,-12.5 h -6.7 c -0.7,0 -11.2,11.2 -12.1,12.6 z"}],t["GR.IN.IC.FEDERAL RESERVE BANK"]=[{type:"path",stroke:!1,d:"m 65.6,125.4 h 68.8 v 4.4 H 65.6 v -4.4 z m 58.1,-31.3 h 5.3 v 29.9 h -5.3 v -29.9 z m -10.6,0 h 5.1 v 29.9 h -5.1 v -29.9 z m -31.3,0 h 5.3 v 29.9 H 81.8 v -29.9 z m -10.6,0 h 5.1 v 29.9 h -5.1 v -29.9 z m 27.7,1.5 h 2 v 1.4 h 0.5 c 2.9,0 6,2.3 6,5.3 l -2.9,0.4 c -0.2,-0 -1,-1.9 -1.4,-2.4 -0.4,-0.5 -1.5,-1.1 -2.3,-1.2 v 7.8 c 3,0.3 7.3,2.3 7.3,5.3 v 1.1 c 0,4 -3.4,6.7 -7.3,6.7 v 2.5 h -2 v -2.5 c -1.7,-0 -4.1,-0.8 -5.1,-1.7 -0.8,-0.7 -2.4,-2.8 -2.4,-4.1 v -0.9 l 3.1,-0.5 c 0,2.3 2,4.9 4.4,4.9 v -8.6 c -2.3,-0 -6.9,-2.5 -6.9,-5.1 v -1.8 c 0,-3 3.2,-5.3 6.2,-5.3 h 0.7 v -1.4 z m -33.3,-7.5 h 68.8 v 4.6 H 65.6 v -4.6 z M 100,70.3 c 0.7,0.6 6.5,3.4 7.9,4.1 2.7,1.4 5.2,2.7 7.9,4.1 2.7,1.3 5.3,2.7 7.9,4.1 1.1,0.6 7.7,3.6 8.1,4 H 68.5 l 31.5,-16.1 0,0 z m -35.9,17.1 v 6 c 0,0.4 0.3,0.7 0.7,0.7 h 4.9 v 29.9 h -5.6 v 7.4 h 71.7 v -7.4 h -5.5 v -29.9 h 4.9 c 0.4,0 0.5,-0.1 0.5,-0.5 v -6.7 c -2,-0.7 -6.7,-3.4 -8.9,-4.6 -3,-1.5 -5.9,-3 -8.9,-4.6 -1.7,-0.8 -17.8,-9.1 -17.9,-9.1 -0.4,0 -16.3,8.2 -18.1,9.2 -1.9,1 -17.8,8.7 -17.8,9.6 l 0,0 0,0 z m 36.7,30.4 c 1.7,0 4,-2 4,-3.5 v -1.4 c 0,-2.1 -2.3,-2.7 -4,-3.1 v 8 z m -5.6,-14 c 0,1.6 2.2,2.6 3.6,2.7 v -7.4 c -1.3,0.3 -3.6,1.4 -3.6,2.7 v 2 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 134.4,129.8 0,-4.4 -68.8,0 0,4.4 z m -5.5,-5.8 0,-29.9 -5.3,0 0,29.9 z m -10.8,0 0,-29.9 -5.1,0 0,29.9 z m -31.1,0 0,-29.9 -5.3,0 0,29.9 z m -10.7,0 0,-29.9 -5.1,0 0,29.9 z m -7.9,-37.5 63.3,0 c -0.4,-0.3 -6.9,-3.4 -8.1,-4 -2.7,-1.3 -5.2,-2.7 -7.9,-4.1 -2.7,-1.3 -5.2,-2.7 -7.9,-4.1 -1.4,-0.7 -7.2,-3.5 -7.9,-4.1 l -31.5,16.1 0,0 z m 65.9,6.2 0,-4.6 -68.8,0 0,4.6 z m -33.5,25.1 v -8 c 1.7,0.4 4,1 4,3.1 v 1.5 c 0,1.4 -2.2,3.5 -4,3.5 z m -5.6,-14 v -2 c 0,-1.3 2.4,-2.4 3.6,-2.7 v 7.4 c -1.5,-0.1 -3.6,-1.1 -3.6,-2.7 z m 3.6,-6.7 h -0.8 c -3,0 -6.2,2.3 -6.2,5.3 v 1.8 c 0,2.5 4.6,5.1 6.9,5.1 v 8.6 c -2.4,0 -4.4,-2.5 -4.4,-4.9 l -3.1,0.5 v 0.9 c 0,1.3 1.6,3.5 2.4,4.1 1,0.8 3.3,1.6 5.1,1.7 v 2.5 h 2 v -2.5 c 3.9,0 7.3,-2.7 7.3,-6.7 v -1.1 c 0,-3 -4.3,-5 -7.3,-5.3 v -7.8 c 0.8,0.1 1.9,0.6 2.3,1.2 0.3,0.5 1.1,2.3 1.4,2.4 l 2.9,-0.4 c 0,-3 -3.1,-5.3 -6,-5.3 h -0.6 v -1.4 h -2 v 1.4 z"}],t["GR.IN.IC.FINANCIAL EXCHANGE"]=[{type:"path",stroke:!1,d:"m 133.7,124.6 0,-1.4 -66.8,0 0.3,0 0,-47 -1,0 0,48.4 z m -29.5,-8.6 -9.8,-20.8 -5.9,14.4 -5.3,-6.5 -13.3,12.4 0.9,1 v 0.2 l 12.4,-11.3 5.5,7 h 0.3 c 0,-1 2.3,-5.6 2.8,-7 0.3,-1 1.1,-2.4 1.5,-3.4 0.3,-0.8 0.9,-3.1 1.5,-3.2 l 9.4,20.3 0.1,0.2 17.4,-27.4 0.2,0.1 8,15.6 1.4,-0.5 -9.4,-18 c -0.1,0.5 -7.7,12.1 -8.7,13.6 -1,1.6 -8.2,13.2 -8.9,13.4 z m 2.8,-19.4 V 89.2 c 2.1,0 4.1,1.4 4.1,3.6 v 0.2 c 0,2.1 -1.9,3.6 -4.1,3.6 z m -4.7,-13.6 c 0,-2 1,-3.4 3,-3.4 h 0.5 v 6.6 c -1.8,-0.1 -3.4,-1.3 -3.4,-3.2 z m 3.5,-5.6 h -1 c -2.6,0 -5.2,2.9 -5.2,5.6 v 1 c 0,1.1 1.3,2.8 2.1,3.4 1.1,0.8 2.5,1.2 4,1.5 v 7.8 c -2.6,-0.6 -4.1,-1.7 -4.1,-4.8 h -2.4 l 0.2,2.5 c 0.9,1.4 0.6,2.1 2.2,3.2 1.1,0.7 2.4,1.2 4.1,1.2 v 2.8 h 1.2 v -2.8 c 3,0 6.4,-2.3 6.4,-5 v -2.5 c 0,-2.9 -4,-4.3 -6.4,-4.8 v -6.9 c 2,0 3.4,1.4 3.4,3.3 h 2.7 c 0,-3.2 -2.8,-5.5 -6.1,-5.5 V 75.4 h -1.2 v 1.9 z"}],t["GR.IN.IC.FINANCIAL SERVICES, OTHER"]=[{type:"path",stroke:!1,d:"m 103.4,138.2 -2.7,0 -0,-8.2 c -1.9,-0 -3.8,-0.3 -5.7,-0.7 -1.9,-0.4 -3.8,-1 -5.8,-1.9 l 0,-4.9 c 1.9,1.2 3.7,2.1 5.6,2.7 1.9,0.6 3.9,0.9 5.9,0.9 l 0,-12.5 c -4,-0.7 -7,-1.8 -8.8,-3.3 -1.8,-1.6 -2.7,-3.7 -2.7,-6.5 -5e-6,-3 1,-5.3 3,-7 2,-1.7 4.8,-2.7 8.6,-3 l 0,-6.4 2.7,0 0,6.3 c 1.7,0.1 3.3,0.3 4.9,0.5 1.6,0.3 3.1,0.7 4.6,1.1 l 0,4.8 c -1.5,-0.8 -3.1,-1.4 -4.7,-1.8 -1.6,-0.4 -3.2,-0.7 -4.9,-0.7 l 0,11.7 c 4.1,0.6 7.2,1.8 9.1,3.4 2,1.6 2.9,3.9 2.9,6.7 -3e-5,3.1 -1,5.5 -3.1,7.3 -2.1,1.8 -5,2.8 -8.9,3.1 l 0,8.3 m -2.7,-29.3 0,-11.2 c -2.1,0.2 -3.7,0.8 -4.8,1.8 -1.1,1 -1.7,2.3 -1.7,3.9 -1e-5,1.6 0.5,2.8 1.5,3.7 1,0.9 2.7,1.5 5,1.9 m 2.7,5.3 0,11.8 c 2.3,-0.3 4.1,-1 5.2,-2 1.2,-1 1.8,-2.3 1.8,-4 -3e-5,-1.6 -0.6,-2.9 -1.7,-3.8 -1.1,-0.9 -2.9,-1.6 -5.3,-2.1 m 5.8,-52.2 2.1,0 0,6.2 7.5,0 0,-6.2 2.1,0 0,15.2 -2.1,0 0,-7.2 -7.5,0 0,7.2 -2.1,0 0,-15.2 m -14.8,0 12.8,0 0,1.7 -5.4,0 0,13.4 -2.1,0 0,-13.4 -5.4,0 0,-1.7 m -8.1,1.4 c -1.5,1.3e-5 -2.7,0.6 -3.6,1.7 -0.9,1.1 -1.3,2.6 -1.3,4.5 -3e-6,1.9 0.4,3.4 1.3,4.5 0.9,1.1 2.1,1.7 3.6,1.7 1.5,1e-6 2.7,-0.6 3.5,-1.7 0.9,-1.1 1.3,-2.6 1.3,-4.5 -1.3e-5,-1.9 -0.4,-3.4 -1.3,-4.5 -0.9,-1.1 -2,-1.7 -3.5,-1.7 m 0,-1.7 c 2.1,1.5e-5 3.8,0.7 5.1,2.1 1.3,1.4 1.9,3.3 1.9,5.7 -1.5e-5,2.4 -0.6,4.3 -1.9,5.7 -1.3,1.4 -3,2.1 -5.1,2.1 -2.1,-10e-7 -3.8,-0.7 -5.1,-2.1 -1.3,-1.4 -1.9,-3.3 -1.9,-5.7 -1e-6,-2.4 0.6,-4.3 1.9,-5.7 1.3,-1.4 3,-2.1 5.1,-2.1"}],t["GR.IN.IC.COMMERCIAL INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 101.9,123.3 -1.7,0 -0,-5 c -1.2,-0 -2.3,-0.2 -3.5,-0.4 -1.2,-0.3 -2.3,-0.6 -3.5,-1.1 l 0,-3 c 1.1,0.7 2.3,1.2 3.4,1.6 1.2,0.4 2.4,0.5 3.6,0.5 l 0,-7.6 c -2.4,-0.4 -4.2,-1.1 -5.3,-2 -1.1,-1 -1.7,-2.3 -1.7,-3.9 -2e-6,-1.8 0.6,-3.2 1.8,-4.3 1.2,-1 2.9,-1.6 5.2,-1.8 l 0,-3.9 1.7,0 0,3.9 c 1,0 2,0.2 3,0.3 1,0.2 1.9,0.4 2.8,0.7 l 0,2.9 c -0.9,-0.5 -1.9,-0.8 -2.8,-1.1 -1,-0.3 -2,-0.4 -3,-0.4 l 0,7.1 c 2.5,0.4 4.4,1.1 5.5,2.1 1.2,1 1.8,2.4 1.8,4.1 -2e-5,1.9 -0.6,3.3 -1.9,4.4 -1.3,1.1 -3.1,1.7 -5.4,1.9 l 0,5 m -1.7,-17.8 0,-6.8 c -1.3,0.1 -2.3,0.5 -2.9,1.1 -0.7,0.6 -1,1.4 -1,2.3 -6e-6,1 0.3,1.7 0.9,2.2 0.6,0.5 1.6,0.9 3,1.1 m 1.7,3.2 0,7.2 c 1.4,-0.2 2.5,-0.6 3.2,-1.2 0.7,-0.6 1.1,-1.4 1.1,-2.4 -1e-5,-1 -0.3,-1.7 -1,-2.3 -0.7,-0.6 -1.7,-1 -3.2,-1.3 M 104.5,74.8 h 4.5 v 13.4 h 9.9 V 74.8 h 4.5 v 13.4 h 6.7 v 37 H 70 V 88.2 h 34.6 l 4e-4,-13.4 0,0 z m -35.7,51.6 h 62.3 V 86.9 h -6.4 V 73.5 h -7.2 v 13.4 h -7.2 V 73.5 h -7.2 V 86.9 H 68.8 v 39.5 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 101.9,108.7 0,7.2 c 1.4,-0.2 2.5,-0.6 3.2,-1.2 0.7,-0.6 1.1,-1.4 1.1,-2.4 -1e-5,-1 -0.3,-1.7 -1,-2.3 -0.7,-0.6 -1.7,-1 -3.2,-1.3 m -1.7,-3.2 0,-6.8 c -1.3,0.1 -2.3,0.5 -2.9,1.1 -0.7,0.6 -1,1.4 -1,2.3 -6e-6,1 0.3,1.7 0.9,2.2 0.6,0.5 1.6,0.9 3,1.1 m 4.3,-30.7 0,13.4 -34.6,0 0,37 60.1,0 0,-37 -6.7,0 0,-13.4 -4.5,0 0,13.4 -9.9,0 0,-13.4 -4.5,0 z m -4.3,17.6 1.7,0 0,3.8 c 1,0 2,0.2 3,0.3 1,0.2 1.9,0.4 2.8,0.7 l 0,2.9 c -0.9,-0.5 -1.9,-0.8 -2.8,-1.1 -1,-0.3 -2,-0.4 -3,-0.5 l 0,7.1 c 2.5,0.4 4.3,1.1 5.5,2.1 1.2,1 1.8,2.4 1.8,4.1 -2e-5,1.9 -0.6,3.4 -1.9,4.4 -1.3,1.1 -3.1,1.7 -5.4,1.9 l 0,5 -1.7,0 -0,-5 c -1.2,-0 -2.3,-0.2 -3.5,-0.4 -1.2,-0.3 -2.3,-0.6 -3.5,-1.1 l 0,-3 c 1.1,0.7 2.3,1.3 3.4,1.6 1.2,0.4 2.4,0.5 3.6,0.5 l 0,-7.6 c -2.4,-0.4 -4.2,-1.1 -5.3,-2 -1.1,-1 -1.7,-2.2 -1.7,-3.9 -2e-6,-1.8 0.6,-3.2 1.8,-4.3 1.2,-1 3,-1.6 5.2,-1.8 l 0,-3.9 z"}],t["GR.IN.IC.CHEMICAL PLANT"]=[{type:"path",stroke:!1,d:"m 94.4,89.6 0,0.1 c -0.5,0.1 -1,0.3 -1.4,0.6 -0.5,0.5 -0.6,1.3 -0.5,1.9 0.2,0.8 0.8,1.5 1.7,1.8 -0,0.5 -0.1,1.7 0,3 l -0.1,0 c -0,2.7 -2.3,5.7 -4.9,8.8 -2.4,3 -5,6.4 -5.3,10.4 l -0.1,0 c 0,0.1 0,0.2 0,0.2 -0,0.1 -0,0.2 -0,0.3 l 0.1,0 c 0.2,2.4 1.7,4.2 3.7,5.3 2.1,1.2 4.6,1.7 6.8,1.6 l 0,-0 8.9,0 0,0.1 c 0.3,-0 0.5,-0 0.8,-0.1 l 0.5,0 0,-0.1 c 2.1,-0.2 4.2,-0.3 6,-1 1.1,-0.4 2.1,-1.1 2.8,-2.1 0.6,-0.9 0.9,-2.1 1.1,-3.6 l 0.2,0 c 0.2,-4.4 -2.1,-7.5 -4.5,-10.3 -2.3,-2.8 -4.7,-5.5 -5.4,-9.6 0,-1.3 0.1,-3 0.1,-3.3 0.2,-0.1 0.4,-0.2 0.6,-0.3 0.5,-0.4 0.9,-1 0.9,-1.7 -0,-0.7 -0.5,-1.3 -1.1,-1.6 -0.4,-0.2 -0.9,-0.3 -1.5,-0.4 l 0,-0.1 c -0.2,0 -0.4,-0 -0.6,0 -2.5,0 -7.2,0 -8.1,0 -0.1,-2.4e-4 -0.7,0 -0.7,0 z m 0.7,2 c 0.8,0 5.5,0 8.1,0 0.6,0 0.9,0.1 1.1,0.2 -0.2,0.1 -0.5,0.3 -0.9,0.4 l -8.1,0 c -0.4,-0.1 -0.7,-0.3 -0.7,-0.4 -0,-0.1 -0,-0.1 -0,-0.1 0,-0 0.1,-0.1 0.6,-0.1 z m 1.2,2.6 6.7,0 c -0,0.7 -0.1,1.9 -0.1,3.1 -0,0.1 -0,0.2 -0,0.3 l 0.1,0 c 0.9,4.5 3.5,7.6 5.8,10.3 2.2,2.7 4,5 4,8.4 l -0.1,0 c -0,1.4 -0.4,2.4 -0.8,3 -0.4,0.7 -1,1.1 -1.8,1.4 -1.4,0.6 -3.6,0.7 -5.8,0.9 l -10.3,0 0,0 c -1.6,0 -3.6,-0.4 -5.1,-1.3 -1.6,-0.9 -2.6,-2.2 -2.7,-3.9 0.1,-3.2 2.4,-6.3 4.9,-9.4 2.4,-3 5.1,-6.1 5.3,-9.6 l 0.1,-0 c -0.1,-1 -0.1,-2.7 -0,-3.3 z m -7,19.6 v 1.9 c 0,3.5 6,4.3 9.9,4.3 h 3.2 c 2.5,0 8,-2.2 8,-4.2 v -0.8 c 0,-3.2 -6.6,-9.4 -7.3,-12.4 h -7.5 c -0.6,2.5 -6.2,10 -6.2,11.2 z m 14.8,-39 h 4.5 v 13.4 h 9.9 V 74.8 h 4.5 v 13.4 h 6.7 v 37 H 69.6 V 88.2 h 34.6 l 4e-4,-13.4 0,0 z m -35.7,51.6 h 62.3 V 86.9 h -6.4 V 73.5 h -7.2 v 13.4 h -7.2 V 73.5 h -7.2 v 13.4 h -34.4 v 39.5 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"M 104.1 74.8 L 104.1 88.2 L 69.6 88.2 L 69.6 125.2 L 129.6 125.2 L 129.6 88.2 L 122.9 88.2 L 122.9 74.8 L 118.5 74.8 L 118.5 88.2 L 108.6 88.2 L 108.6 74.8 L 104.1 74.8 z M 94.4 89.6 C 94.4 89.6 95.1 89.6 95.2 89.6 C 96.1 89.6 100.8 89.6 103.3 89.6 C 103.5 89.6 103.8 89.6 103.9 89.6 L 103.9 89.7 C 104.5 89.8 105 89.9 105.4 90.1 C 106 90.4 106.5 91 106.5 91.7 C 106.5 92.4 106.1 93 105.6 93.4 C 105.4 93.5 105.2 93.6 105 93.8 C 105 94 104.9 95.7 104.9 97.1 C 105.6 101.1 108 103.8 110.3 106.7 C 112.6 109.5 114.9 112.6 114.7 117 L 114.6 116.9 C 114.4 118.4 114.1 119.6 113.5 120.5 C 112.8 121.5 111.8 122.2 110.8 122.7 C 108.9 123.4 106.8 123.5 104.8 123.7 L 104.8 123.7 L 104.3 123.7 C 104.1 123.7 103.8 123.8 103.5 123.8 L 103.5 123.7 L 94.6 123.7 L 94.6 123.8 C 92.4 123.9 89.9 123.4 87.8 122.2 C 85.9 121.1 84.3 119.2 84.1 116.8 L 84.1 116.8 C 84.1 116.7 84.1 116.6 84.1 116.5 C 84.1 116.4 84 116.4 84 116.3 L 84.1 116.3 C 84.3 112.3 86.9 109 89.4 105.9 C 91.9 102.7 94.2 99.8 94.3 97.1 L 94.3 97.1 C 94.2 95.7 94.3 94.6 94.3 94 C 93.5 93.7 92.8 93.1 92.6 92.3 C 92.4 91.6 92.6 90.9 93.1 90.4 C 93.4 90 93.9 89.8 94.4 89.7 L 94.4 89.6 z M 95.1 91.6 C 94.7 91.6 94.5 91.7 94.5 91.8 C 94.5 91.8 94.5 91.7 94.6 91.8 C 94.6 91.9 94.8 92.2 95.3 92.2 L 103.4 92.2 C 103.8 92.1 104.1 92 104.3 91.8 C 104.1 91.8 103.8 91.6 103.2 91.6 C 100.6 91.6 95.9 91.6 95.1 91.6 z M 96.3 94.2 C 96.2 94.9 96.2 96.5 96.3 97.5 L 96.2 97.6 C 96 101.1 93.4 104.2 90.9 107.2 C 88.5 110.3 86.2 113.3 86.1 116.6 C 86.2 118.3 87.2 119.5 88.8 120.5 C 90.3 121.3 92.3 121.8 93.9 121.8 L 93.9 121.7 L 104.2 121.7 C 106.5 121.5 108.6 121.4 110 120.8 C 110.8 120.5 111.4 120.1 111.8 119.4 C 112.3 118.8 112.6 117.8 112.7 116.4 L 112.7 116.4 C 112.7 113 110.9 110.6 108.7 107.9 C 106.5 105.2 103.8 102.1 103 97.6 L 102.8 97.6 C 102.8 97.5 102.9 97.4 102.9 97.3 C 102.9 96.1 102.9 94.9 103 94.2 L 96.3 94.2 z M 95.5 102.6 L 103 102.6 C 103.8 105.7 110.3 111.9 110.3 115.1 L 110.3 115.9 C 110.3 117.9 104.9 120 102.4 120 L 99.2 120 C 95.3 120 89.3 119.2 89.3 115.7 L 89.3 113.8 C 89.3 112.6 94.9 105.1 95.5 102.6 z "}],t["GR.IN.IC.FIREARMS MANUFACTURER"]=[{type:"path",stroke:!1,d:"m 104.1,74.8 h 4.5 v 13.4 h 9.9 V 74.8 h 4.5 v 13.4 h 6.7 v 37 H 69.6 V 88.2 h 34.6 l 4e-4,-13.4 0,0 z m -35.7,51.6 h 62.3 V 86.9 h -6.4 V 73.5 h -7.2 v 13.4 h -7.2 V 73.5 h -7.2 v 13.4 h -34.4 v 39.5 z m 25.8,-26.6 h 10.8 v 5.8 c -1.6,0 -4.7,1 -5.8,0.7 -1.2,-0.4 -3.8,-1.5 -5,-1.6 v -4.8 z m -19.2,0 h 16.6 v 6 c 0,0.6 3,1.4 3.7,1.7 0.4,0.1 3.9,1.4 3.9,1.5 l 7.2,-0.9 0.8,2.7 1.1,3.7 c 0.3,0.4 1,2.4 1,3.1 v 0.2 c 0,1.1 -0.6,1.9 -0.6,3.5 l 13.5,-0 -0.9,-3 -0.6,-1.7 -3,-10 c -0.2,-0.4 -0.5,-0.7 -0.5,-1.3 0,-1.3 3.9,-4.1 4.7,-5.3 l -2.7,-8.4 h -43.9 v 8.4 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 94.2,99.9 h 10.8 v 5.8 c -1.6,0 -4.7,1 -5.8,0.7 -1.2,-0.4 -3.8,-1.5 -5,-1.6 v -4.8 z m 9.9,-25.1 0,13.4 -34.6,0 0,37 60.1,0 0,-37 -6.7,0 0,-13.4 -4.5,0 0,13.4 -9.9,0 0,-13.4 -4.5,0 z m -29.1,16.7 43.9,0 2.7,8.4 c -0.8,1.2 -4.7,4.1 -4.7,5.3 0,0.6 0.2,0.9 0.5,1.3 l 3.1,10 0.6,1.8 0.9,3 -13.5,0 c 0,-1.6 0.7,-2.4 0.7,-3.6 l 0,-0.2 c 0,-0.7 -0.7,-2.7 -1,-3.1 L 107.2,110.8 106.4,108.1 99.2,109 c -0,-0.1 -3.6,-1.4 -3.9,-1.5 -0.7,-0.3 -3.7,-1.1 -3.7,-1.7 l 0,-5.9 -16.6,0 0,-8.4 z"}],t["GR.IN.IC.FIREARMS RETAILER"]=[{type:"path",stroke:!1,d:"m 85.1,123 -1.1,0 -0,-3.2 c -0.8,-0 -1.5,-0.1 -2.3,-0.3 -0.8,-0.2 -1.5,-0.4 -2.3,-0.7 l 0,-1.9 c 0.7,0.5 1.5,0.8 2.2,1 0.8,0.2 1.5,0.3 2.3,0.4 l 0,-4.9 c -1.6,-0.3 -2.7,-0.7 -3.5,-1.3 -0.7,-0.6 -1.1,-1.5 -1.1,-2.5 -2e-6,-1.2 0.4,-2.1 1.2,-2.8 0.8,-0.7 1.9,-1.1 3.4,-1.2 l 0,-2.5 1.1,0 0,2.5 c 0.7,0 1.3,0.1 1.9,0.2 0.6,0.1 1.2,0.3 1.8,0.5 l 0,1.9 c -0.6,-0.3 -1.2,-0.5 -1.8,-0.7 -0.6,-0.2 -1.3,-0.3 -1.9,-0.3 l 0,4.6 c 1.6,0.3 2.8,0.7 3.6,1.3 0.8,0.6 1.1,1.5 1.1,2.6 -1.2e-5,1.2 -0.4,2.2 -1.2,2.9 -0.8,0.7 -2,1.1 -3.5,1.2 l 0,3.3 m -1.1,-11.5 0,-4.4 c -0.8,0.1 -1.5,0.3 -1.9,0.7 -0.4,0.4 -0.7,0.9 -0.7,1.5 -4e-6,0.6 0.2,1.1 0.6,1.4 0.4,0.3 1.1,0.6 2,0.7 m 1.1,2.1 0,4.7 c 0.9,-0.1 1.6,-0.4 2.1,-0.8 0.5,-0.4 0.7,-0.9 0.7,-1.6 -1e-5,-0.6 -0.2,-1.1 -0.7,-1.5 -0.4,-0.4 -1.1,-0.6 -2.1,-0.8 m 22.6,-21.9 -8,20.8 0.8,0.3 8,-20.8 -0.8,-0.3 z m -43,6.5 0,0.8 0.3,26 0,0.8 0.8,0 32.2,-0.2 0.4,0 0.2,-0.3 7.3,-8.7 0.2,-0.2 -0,-0.3 -0.2,-10.1 0,-0.4 -0.3,-0.2 -8.4,-6.6 -0.2,-0.2 -0.3,0 -31.3,-0.4 -0.8,0 z m 1.6,1.6 30.2,0.3 7.9,6.2 0.2,9.4 -6.9,8.2 -31,0.2 -0.3,-24.3 z M 97.3,85.4 h 14.4 v 7.7 c -2.1,0 -6.2,1.4 -7.8,0.9 -1.6,-0.5 -5,-2.1 -6.6,-2.2 v -6.4 z m -25.5,0 h 22.1 v 7.9 c 0,0.8 4,1.9 4.8,2.2 0.5,0.2 5.2,1.9 5.2,2 l 9.6,-1.2 1,3.6 1.4,4.9 c 0.3,0.5 1.3,3.2 1.3,4.1 v 0.2 c 0,1.5 -0.9,2.5 -0.9,4.7 h 18 l -1.1,-3.9 -0.8,-2.4 -4,-13.4 c -0.3,-0.5 -0.6,-0.9 -0.6,-1.7 0,-1.7 5.2,-5.5 6.2,-7.1 l -3.6,-11.1 H 71.8 v 11.1 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 85.1,113.6 0,4.7 c 0.9,-0.1 1.6,-0.4 2.1,-0.8 0.5,-0.4 0.7,-0.9 0.7,-1.6 -1e-5,-0.6 -0.2,-1.1 -0.7,-1.5 -0.4,-0.4 -1.1,-0.6 -2.1,-0.8 m -1.1,-2.1 0,-4.4 c -0.8,0.1 -1.5,0.3 -1.9,0.7 -0.4,0.4 -0.7,0.9 -0.7,1.5 -4e-6,0.6 0.2,1.1 0.6,1.4 0.4,0.3 1.1,0.6 2,0.7 M 66.4,99.8 l 0.3,24.3 31,-0.2 6.9,-8.2 -0.2,-9.4 -7.9,-6.2 -30.2,-0.3 z m 17.7,3.3 1.1,0 0,2.5 c 0.7,0 1.3,0.1 1.9,0.2 0.6,0.1 1.2,0.2 1.8,0.4 l 0,1.9 c -0.6,-0.3 -1.2,-0.5 -1.8,-0.7 -0.6,-0.2 -1.3,-0.3 -1.9,-0.3 l 0,4.6 c 1.6,0.3 2.8,0.7 3.6,1.3 0.8,0.6 1.2,1.5 1.2,2.7 -1.2e-5,1.2 -0.4,2.2 -1.2,2.9 -0.8,0.7 -2,1.1 -3.5,1.2 l 0,3.3 -1.1,0 0,-3.2 c -0.8,-0 -1.5,-0.1 -2.3,-0.3 -0.8,-0.2 -1.5,-0.4 -2.3,-0.8 l 0,-1.9 c 0.7,0.5 1.5,0.8 2.2,1.1 0.8,0.2 1.5,0.3 2.3,0.3 l 0,-4.9 c -1.6,-0.3 -2.7,-0.7 -3.5,-1.3 -0.7,-0.6 -1.1,-1.5 -1.1,-2.5 -2e-6,-1.2 0.4,-2.1 1.2,-2.8 0.8,-0.7 1.9,-1.1 3.4,-1.2 l 0,-2.5 z"}],t["GR.IN.IC.HAZARDOUS MATERIAL PRODUCTION"]=[{type:"path",stroke:!1,d:"m 104.7,71.8 h 5 v 15 h 11.1 v -15 h 5 v 15 h 7.5 v 41.4 h -67.4 V 86.8 h 38.8 v -15 z m -40,57.9 h 69.8 V 85.5 h -7.1 v -15.2 h -8 v 15.2 h -8 v -15.2 h -8 v 15.2 h -38.6 v 44.1 l 0,0 z m 15.5,-21.8 h 38.6 l -19.3,18.6 -19.3,-18.6 z m 21.8,-16.8 c 0.5,0.4 4.3,3.8 4.3,4.3 v 12 h -4.3 V 91.1 z m -5,-0 0,16.3 h -4.3 l 0.1,-12.2 4.1,-4.1 0,0 z m -12.1,12 c 0,-0.4 3.1,-3.2 3.6,-3.6 v 7.8 h -3.6 v -4.3 z m 25.7,-3.6 3.7,3.4 c -0.2,0.4 -0.2,-0.2 -0.2,0.5 v 4 h -3.6 v -7.9 z m 9.4,8.2 -20.5,-20 -20.4,20 20.4,19.9 20.5,-19.9 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 99.5,126.5 19.3,-18.6 -38.6,0 z m 0,1 -20.4,-19.9 20.4,-20 20.5,20 -20.5,19.8 z m 5.2,-40.8 h -38.8 v 41.4 h 67.4 V 86.8 h -7.5 v -15 h -5 v 15 h -11.1 v -15 h -5 v 15 z m 5.9,20.6 h 3.6 v -4 c 0,-0.7 -0,-0.1 0.2,-0.5 l -3.7,-3.4 v 7.9 z m -8.6,0 h 4.3 v -12 c 0,-0.4 -3.8,-3.9 -4.3,-4.3 v 16.3 z m -9.3,0 4.3,0 -0,-16.3 -4.1,4.1 z m -7.8,-4.3 v 4.3 h 3.6 v -7.9 c -0.5,0.3 -3.6,3.2 -3.6,3.6 z"}],t["GR.IN.IC.HAZARDOUS MATERIAL STORAGE"]=[{type:"path",stroke:!1,d:"m 122.4,68.8 c 0.4,0.1 0.9,0.5 1.3,1 0.4,0.5 0.8,1.2 1.3,2 l 2.1,4.1 -2.2,0 -1.9,-3.9 c -0.5,-1 -1,-1.7 -1.5,-2 -0.5,-0.3 -1.1,-0.5 -1.9,-0.5 l -2.2,0 0,6.4 -2.1,0 0,-15.2 4.6,0 c 1.7,1.5e-5 3,0.4 3.9,1.1 0.9,0.7 1.3,1.8 1.3,3.3 -10e-6,1 -0.2,1.7 -0.7,2.4 -0.4,0.6 -1.1,1.1 -1.9,1.3 m -5.1,-6.4 0,5.4 2.6,0 c 1,8e-6 1.7,-0.2 2.2,-0.7 0.5,-0.5 0.8,-1.1 0.8,-2 -10e-6,-0.9 -0.3,-1.6 -0.8,-2 -0.5,-0.5 -1.2,-0.7 -2.2,-0.7 l -2.6,0 m -12.3,-0.3 c -1.5,1.4e-5 -2.7,0.6 -3.6,1.7 -0.9,1.1 -1.3,2.6 -1.3,4.5 -1e-5,1.9 0.4,3.4 1.3,4.5 0.9,1.1 2.1,1.7 3.6,1.7 1.5,1e-6 2.7,-0.6 3.5,-1.7 0.9,-1.1 1.3,-2.6 1.3,-4.5 -10e-6,-1.9 -0.4,-3.4 -1.3,-4.5 -0.9,-1.1 -2,-1.7 -3.5,-1.7 m 0,-1.7 c 2.1,1.5e-5 3.8,0.7 5.1,2.1 1.3,1.4 1.9,3.3 1.9,5.7 -10e-6,2.4 -0.6,4.3 -1.9,5.7 -1.3,1.4 -3,2.1 -5.1,2.1 -2.1,-10e-7 -3.8,-0.7 -5.1,-2.1 -1.3,-1.4 -1.9,-3.3 -1.9,-5.7 -2e-6,-2.4 0.6,-4.3 1.9,-5.7 1.3,-1.4 3,-2.1 5.1,-2.1 m -21,0.3 12.8,0 0,1.7 -5.4,0 0,13.4 -2.1,0 0,-13.4 -5.4,0 0,-1.7 m -2,0.5 0,2 c -0.8,-0.4 -1.5,-0.6 -2.2,-0.8 -0.7,-0.2 -1.4,-0.3 -2,-0.3 -1.1,1.4e-5 -2,0.2 -2.6,0.7 -0.6,0.4 -0.9,1 -0.9,1.8 -3e-6,0.7 0.2,1.2 0.6,1.5 0.4,0.3 1.2,0.6 2.3,0.8 l 1.2,0.3 c 1.5,0.3 2.7,0.8 3.4,1.5 0.7,0.7 1.1,1.7 1.1,2.9 -1.2e-5,1.5 -0.5,2.6 -1.5,3.3 -1,0.8 -2.4,1.1 -4.3,1.1 -0.7,-10e-7 -1.5,-0.1 -2.3,-0.2 -0.8,-0.2 -1.6,-0.4 -2.5,-0.7 l 0,-2.1 c 0.8,0.5 1.6,0.8 2.4,1.1 0.8,0.2 1.6,0.4 2.4,0.4 1.2,1e-6 2.1,-0.2 2.7,-0.7 0.6,-0.5 1,-1.1 1,-2 -1e-5,-0.7 -0.2,-1.3 -0.7,-1.7 -0.5,-0.4 -1.2,-0.7 -2.2,-0.9 l -1.2,-0.2 c -1.5,-0.3 -2.6,-0.8 -3.3,-1.4 -0.7,-0.6 -1,-1.6 -1,-2.7 -2e-6,-1.3 0.5,-2.4 1.4,-3.2 0.9,-0.8 2.3,-1.2 3.9,-1.2 0.7,1.5e-5 1.4,0.1 2.2,0.2 0.7,0.1 1.5,0.3 2.3,0.6 M 70.6,110 h 57.9 l -29,27.9 -28.9,-27.9 z m 32.8,-25.2 c 0.8,0.5 6.4,5.8 6.4,6.4 v 17.9 h -6.4 V 84.8 z m -7.6,-0.1 0.1,24.4 h -6.5 l 0.2,-18.3 6.2,-6.1 0,0 z m -18.2,18 c 0,-0.7 4.7,-4.9 5.3,-5.3 v 11.8 h -5.3 v -6.5 z m 38.6,-5.3 5.6,5.2 c -0.3,0.7 -0.2,-0.3 -0.2,0.7 v 5.9 h -5.3 V 97.4 z m 14.2,12.3 -30.7,-30.1 -30.7,30 30.7,29.9 30.8,-29.8 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 99.5,137.9 29,-27.9 -57.9,0 z m 16.7,-28.7 h 5.3 v -5.9 c 0,-1 -0.1,-0.1 0.2,-0.7 l -5.6,-5.2 v 11.8 z m -12.8,0 h 6.4 V 91.2 c 0,-0.7 -5.6,-5.9 -6.4,-6.4 v 24.4 z m -14,-10e-6 6.5,0 -0.1,-24.4 -6.2,6.1 z m -11.8,-6.4 v 6.4 h 5.3 V 97.4 c -0.7,0.5 -5.3,4.7 -5.3,5.3 z"}],t["GR.IN.IC.INDUSTRIAL SITE"]=[{type:"path",stroke:!1,d:"m 104.1,74.8 h 4.5 v 13.4 h 9.9 V 74.8 h 4.5 v 13.4 h 6.7 v 37 H 69.6 V 88.2 h 34.6 l 4e-4,-13.4 0,0 z m -35.7,51.6 h 62.3 V 86.9 h -6.4 V 73.5 h -7.2 v 13.4 h -7.2 V 73.5 h -7.2 v 13.4 h -34.4 v 39.5 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 104.1,74.8 h 4.5 v 13.4 h 9.9 V 74.8 h 4.5 v 13.4 h 6.7 v 37 H 69.6 V 88.2 h 34.6 l 4e-4,-13.4 0,0 z"}],t["GR.IN.IC.LANDFILL"]=[{type:"path",stroke:!1,d:"m 124.1,115.8 c 0,2.5 1.6,2.7 3,3.6 h -22.8 c 1.2,-0.7 2.8,-1.2 2.8,-3.3 v -1.2 c 0,-1.3 -1.9,-2.8 -3.6,-2.8 -1,0 -1.8,0.4 -2.3,0.9 -0.4,0.4 -1.1,1.6 -1.1,2.1 v 1.3 c 0,0.2 0.9,1.7 1,1.9 0.6,0.7 1.2,0.6 1.8,1 h -8.6 c 0.6,-0.4 1.3,-0.5 1.8,-1.1 0.4,-0.4 0.6,-1.4 1,-1.6 v -1.7 c 0,-0.4 -0.9,-1.8 -1.2,-2.1 -0.6,-0.6 -1.3,-0.9 -2.4,-0.9 h -0.1 c -1.7,0 -3.5,1.5 -3.5,3.1 v 1.3 c 0,1.5 2,2.2 2.8,2.8 h -8.7 c -0.1,-3.2 -2.5,-1.8 -3.1,-3 -1.1,-1.9 0.9,-2.2 -2.8,-3.1 -3.1,-0.8 -2,-0.3 -3.9,-2.2 -0.6,-0.7 -3,-1.8 -4.2,-1.8 h -0.1 c -1,0 -1.9,1.2 -2.7,1.5 -1.1,0.5 -2.3,0.4 -3.2,1.1 -1.1,0.8 -2.3,4.4 -2.3,6.2 v 0.6 h -0.4 v 2.2 h 72.1 4.9 v -1.5 h -9.5 c 0.8,-0.5 0.9,-0.2 1.8,-1 0.4,-0.4 0.9,-1.5 1.2,-1.6 v -1.6 c 0,-0.5 -0.9,-1.9 -1.3,-2.2 -0.7,-0.5 -1.4,-0.8 -2.5,-0.8 -1.9,0 -3.6,1.5 -3.6,3.5 v 0.2 h 0 z m -1,-17.6 h 3.5 c 0.5,0 4.2,4.8 4.6,5.4 h -8.1 v -5.4 z m -4.1,-17.8 -0.7,-1.3 -7,3.9 1.4,3.5 -32,14.5 c 0.8,0.4 2.1,4.3 2.6,5.3 0.2,0.4 2.3,5 2.3,5.1 0,0.5 -0.9,0.2 -0.8,0.6 l 0.5,3.1 h 3.4 c 0,-2.4 2,-4.8 4.3,-4.8 h 1 c 2.4,0 4.3,2.3 4.3,4.8 h 0.6 c 0,-2.4 0.6,-2.3 1.5,-3.6 l -2.1,-5.6 9.5,-4.3 4.2,9.9 -5.1,0 c 0.9,1.3 1.6,1.3 1.6,3.6 h 14.4 v -0.5 c 0,-2.1 2.5,-4.3 4.8,-4.3 h 0.5 c 2.6,0 4.6,2.2 4.6,4.8 h 2.6 v -3.1 h -1.2 v -7.4 c 0,-1.2 -5.8,-6.8 -6.1,-8.1 h -6.4 v 15 h -4.1 l -5.3,-12.1 5.5,-2.3 -4.3,-9.5 5.6,-7.4 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 123.1,103.6 h 8.1 c -0.5,-0.6 -4.2,-5.4 -4.6,-5.4 h -3.5 v 5.4 z"}],t["GR.IN.IC.PHARMACEUTICAL MANUFACTURER"]=[{type:"path",stroke:!1,d:"m 105.2,71.3 h 5.1 V 86.5 H 121.5 V 71.3 h 5.1 v 15.2 h 7.6 v 42.1 H 65.8 V 86.6 h 39.4 V 71.3 z M 64.5,130.1 h 71 V 85.3 h -7.3 V 69.9 h -8.2 V 85.3 h -8.2 V 69.9 H 103.7 V 85.3 H 64.5 v 44.8 z M 90.3,93.1 h 7.6 c 1.2,0 3.4,1.8 3.4,2.7 v 2.6 c 0,1.3 -2.4,2.9 -3.6,2.9 h -7.4 v -8.2 z m -4.9,26.5 h 4.9 v -13.1 l 1.7,0.1 7.6,10 -8.8,11 5.9,0.1 5.9,-7 c 1.2,0.3 4.2,5.9 5.6,6.9 h 6.2 c -0.9,-1.7 -8.4,-10.4 -8.4,-11 0,-0.3 7.4,-9.7 8.2,-10.4 l -6,-0.1 -5.6,6.2 -4.3,-5.7 c 5.2,-1.2 8.4,-3.3 8.4,-9.8 v -0.6 c 0,-2 -1.7,-4.7 -2.8,-5.8 -1,-1 -4.1,-2.4 -6.2,-2.4 H 85.4 v 31.6 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 85.4,88 h 12.4 c 2.1,0 5.1,1.4 6.1,2.4 1.1,1.1 2.8,3.8 2.8,5.8 v 0.6 c 0,6.5 -3.1,8.6 -8.4,9.8 l 4.3,5.7 5.6,-6.2 6.1,0.1 c -0.8,0.6 -8.2,10 -8.2,10.4 0,0.7 7.4,9.4 8.4,11.1 h -6.2 c -1.5,-1 -4.4,-6.6 -5.6,-6.9 l -5.9,6.9 -5.9,-0.1 8.8,-11 -7.6,-9.9 -1.8,-0.1 v 13.1 h -4.9 v -31.6 z m 19.8,-1.4 h -39.4 v 42.1 h 68.4 V 86.6 h -7.6 V 71.3 H 121.5 V 86.5 H 110.3 V 71.3 h -5.1 v 15.3 z m -14.9,14.7 h 7.4 c 1.2,0 3.6,-1.6 3.6,-2.9 v -2.5 c 0,-1 -2.2,-2.7 -3.4,-2.7 h -7.6 v 8.2 z"}],t["GR.IN.IC.CONTAMINATED HAZARDOUS WASTE SITE"]=[{type:"path",stroke:!1,d:"m 133.7,71.5 c -0.3,0 -0.7,0.1 -0.9,0.2 l -49.5,0 -0.7,0 0,0.1 c -0.7,0.3 -1.3,0.9 -1.8,1.7 -0.6,1 -1.2,2.5 -1.6,4.2 -0.9,3.5 -1.4,8.2 -1.4,13.4 0,4.8 0.5,9.2 1.2,12.6 -1,0.1 -2.1,0.5 -3,0.3 -1.2,-0.1 -2.5,-0.1 -3.8,-0.1 -1.3,0 -6.5,-0.9 -6.5,0.7 0,1.8 6,3.4 7.5,6.1 -0.8,1.5 -5.9,1.4 -8.1,1.8 -1.5,0.2 -3,0.2 -3.8,1.1 -1,1 0.2,2.3 1.1,2.7 1.7,0.9 6,1 8.2,1.5 1.3,0.3 2.6,0.7 3.1,1.9 0.4,1.1 0.6,2.6 2.2,2.6 l 0.1,0 c 2.1,0 5.1,-1.7 7.9,-1.7 l 1.1,0 c 6.2,0 6.8,7.4 12.3,7.7 3.5,0.2 5.3,-0.8 7.8,-1.9 1.6,-0.7 5.5,-2.8 7.3,-2.8 l 0.3,0 c 1.8,0 3.3,1.1 4.8,1.5 1.6,0.5 3.3,1 5.4,1 l 0.5,0 c 1.2,0 2.3,-0.2 3.2,-0.5 1.2,-0.4 1.1,-1 1.1,-2.4 -0.1,-1.9 -2.2,-3.3 -3.5,-4 -1.4,-0.9 -3.4,-1.8 -4.9,-2.6 -0.8,-0.4 -1.5,-0.9 -2.3,-1.4 -1.3,-1 -1,-0.6 -1.7,-2.1 1.2,-1.8 6.9,0.2 6.9,-1.9 0,-0.2 -0.3,-0.5 -0.7,-0.7 l 12.2,0 0.7,0 0,-0.4 c 0.7,-0.3 1.3,-0.9 1.8,-1.7 0.6,-1 1.2,-2.5 1.6,-4.2 0.9,-3.5 1.4,-8.2 1.4,-13.4 0,-5.2 -0.5,-9.9 -1.4,-13.4 -0.4,-1.7 -1,-3.2 -1.6,-4.2 -0.6,-1 -1.4,-1.8 -2.5,-1.8 z m 0.3,1.4 c 0.3,0 0.7,0.3 1.3,1.1 0.5,0.8 1,2.2 1.4,3.8 0.8,3.3 1.4,7.9 1.4,13.1 0,5.1 -0.5,9.8 -1.4,13.1 -0.4,1.7 -0.9,3 -1.4,3.8 -0.5,0.8 -1,1.1 -1.3,1.1 -0.2,0 -0.4,-0.1 -0.7,-0.4 l 0,0.7 -47.9,0 c 0.2,-0.2 0.4,-0.4 0.6,-0.8 0.6,-1 1.1,-2.3 1.5,-4 0.9,-3.4 1.4,-8.1 1.4,-13.2 0,-5.2 -0.5,-9.8 -1.4,-13.2 -0.4,-1.7 -0.9,-3.1 -1.5,-4 -0.2,-0.3 -0.4,-0.5 -0.6,-0.7 l 47.9,0 0,0.2 c 0.3,-0.3 0.5,-0.4 0.7,-0.4 z m -50.7,0.2 c 0.3,0 0.7,0.3 1.3,1.1 0.5,0.8 1,2.2 1.4,3.8 0.8,3.3 1.4,7.9 1.4,13.1 0,5.1 -0.5,9.8 -1.4,13.1 -0.4,1.7 -0.9,3 -1.4,3.8 -0.5,0.8 -1,1.1 -1.3,1.1 -0.3,0 -0.7,-0.3 -1.3,-1.1 -0.3,-0.5 -0.6,-1.1 -0.8,-1.8 0.4,1.7 1,3 1.7,3.5 l 8.3,-0.2 7.1,0.1 20.3,-0.1 c 0.5,0 1.5,0.5 2.3,1 l 0,0 c 0.5,0.3 0.8,0.6 1,0.7 -0.1,0.2 -0.4,0.3 -0.6,0.4 -0.2,0.1 -0.5,0.2 -0.8,0.2 -0.4,0.1 -0.9,0.1 -1.3,0.1 -0.2,-0 -0.5,-0 -0.7,-0 -0.4,-0 -0.9,-0 -1.2,-0 l -0.3,0 c -0.9,0 -1.7,0.5 -1.7,1.4 l 0,0.1 0,0.1 c 0,0.1 0,0.2 0,0.3 0.7,3 11.3,5.8 11.9,9.2 0,0.1 0,0.2 0,0.3 -0,0.1 -0,0.1 -0,0.1 -0.2,1.6 -2.9,2.2 -5.2,2.2 -0.7,0 -1.3,0 -1.8,-0.1 -2.6,-0.4 -5.4,-2.3 -7.3,-2.3 -5.3,0 -9.5,5.5 -15.2,4.8 -4.4,-0.6 -5.5,-7.9 -12.3,-7.9 l -1.3,0 c -3,0 -5.6,1.7 -8.4,1.7 -0.5,0 -0.7,-0.3 -0.9,-0.6 -0,-0 -0,-0.1 -0.1,-0.1 -0.2,-0.5 -0.3,-1.1 -0.6,-1.6 -0,-0 0,-0 0,-0 -0,-0.1 -0.1,-0.1 -0.1,-0.2 -0,-0 -0,-0.1 -0.1,-0.1 -0,-0.1 -0.1,-0.1 -0.1,-0.1 -0.1,-0.2 -0.3,-0.3 -0.4,-0.4 -1.2,-0.9 -2.3,-1.1 -4,-1.4 -1.9,-0.3 -5.8,-0.3 -7.3,-1.5 -0,-0 -0.1,-0.1 -0.1,-0.1 -0,-0 -0,-0 -0.1,-0.1 -0,-0 -0.1,-0.1 -0.1,-0.1 -0,-0 -0,-0 -0,-0.1 -0,-0 -0,-0 -0,-0 -0.2,-0.3 -0.4,-0.6 -0.4,-0.9 l 0,-0.3 c 0,-2.1 13.2,-0.9 13.2,-3.2 0,-0.3 -0.1,-0.6 -0.3,-0.8 -0,-0.1 -0.1,-0.1 -0.1,-0.2 -0,-0 -0,-0 -0.1,-0.1 -0.1,-0.1 -0.1,-0.1 -0.2,-0.2 -0,-0 -0,-0 -0.1,-0.1 -0.1,-0.1 -0.3,-0.3 -0.5,-0.4 -1.7,-1.3 -4.8,-2.7 -6.3,-3.9 -0.1,-0.1 -0.3,-0.2 -0.4,-0.3 -0,-0 -0,-0 -0.1,-0.1 -0,-0 -0.1,-0.1 -0.1,-0.1 -0,-0 -0,-0 -0.1,-0.1 -0,-0 -0.1,-0.1 -0.1,-0.1 -0.1,-0.1 -0.2,-0.2 -0.2,-0.4 0.3,-0.1 0.6,-0.3 1.1,-0.3 l 2.9,0 6.3,0.3 2.6,-0.3 c 9.4e-4,0 -9.4e-4,0 0,0 l 0.7,-0.1 0.8,0.1 c -0,-0 -0,-0 -0,-0 -0.8,-3.3 -1.4,-7.9 -1.4,-13.1 0,-5.1 0.5,-9.7 1.4,-13.1 0.4,-1.7 0.9,-3 1.4,-3.8 0.5,-0.8 1,-1.1 1.3,-1.1 z m 27.7,1.1 -17.4,17 17.4,16.9 17.4,-16.9 -17.4,-17 z m -2.2,2.9 0,13.8 -3.6,0 0.1,-10.4 3.5,-3.5 z m 4.3,0 c 0.4,0.3 3.6,3.3 3.6,3.7 l 0,10.2 -3.6,0 0,-13.8 z m 7.3,7.2 3.2,2.9 c -0.1,0.1 -0.1,0.1 -0.1,0.1 -0,-0 0,0 0,0.3 l 0,3.3 -3.1,0 0,-6.7 z m -18.8,0 0,6.7 -3,0 0,-3.7 c 0,-0.4 2.7,-2.8 3,-3 z m -7,7.1 32.8,0 -16.4,15.8 -16.4,-15.8 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 134,72.9 c -0.2,0 -0.4,0.1 -0.7,0.4 l 0,-0.2 -47.9,0 c 0.2,0.2 0.4,0.4 0.6,0.7 0.6,1 1.1,2.3 1.5,4 0.9,3.4 1.4,8.1 1.4,13.2 0,5.2 -0.5,9.8 -1.4,13.2 -0.4,1.7 -0.9,3.1 -1.5,4 -0.2,0.3 -0.4,0.5 -0.6,0.8 l 47.9,0 0,-0.7 c 0.3,0.3 0.5,0.4 0.7,0.4 0.3,0 0.7,-0.3 1.3,-1.1 0.5,-0.8 1,-2.2 1.4,-3.8 0.8,-3.3 1.4,-7.9 1.4,-13.1 0,-5.1 -0.5,-9.8 -1.4,-13.1 -0.4,-1.7 -0.9,-3 -1.4,-3.8 -0.5,-0.8 -1,-1.1 -1.3,-1.1 z m -50.7,0.2 c -0.3,0 -0.7,0.3 -1.3,1.1 -0.5,0.8 -1,2.2 -1.4,3.8 -0.8,3.3 -1.4,7.9 -1.4,13.1 0,5.1 0.5,9.8 1.4,13.1 0,0 0,0 0,0 l -0.8,-0.1 -3.3,0.4 -6.2,-0.3 -2.9,0 c -0.5,0 -0.8,0.1 -1.1,0.3 0.4,1.6 8.4,4.3 8.4,6.5 0,2.3 -13.2,1.1 -13.2,3.2 l 0,0.3 c 0,2.4 5.6,2.3 8,2.7 1.7,0.3 2.8,0.5 4,1.4 1.3,1 0.8,3.3 2.2,3.3 2.8,0 5.4,-1.7 8.4,-1.7 l 1.3,0 c 6.8,0 7.9,7.3 12.3,7.9 5.7,0.7 9.9,-4.8 15.2,-4.8 1.8,0 4.7,1.9 7.3,2.3 2.3,0.2 7,-0.2 7,-2.4 0,-3.6 -12,-6.5 -12,-9.8 l 0,-0.1 c 0,-0.9 0.9,-1.4 1.7,-1.4 l 0.3,0 c 1.4,0 3.9,0.3 4.7,-0.7 -0.3,-0.4 -2.5,-1.7 -3.2,-1.7 l -20.3,0.1 -7.1,-0.1 -8.3,0.2 c -0.7,-0.5 -1.3,-1.8 -1.7,-3.5 0.3,0.7 0.5,1.3 0.8,1.8 0.5,0.8 1,1.1 1.3,1.1 0.3,0 0.7,-0.3 1.3,-1.1 0.5,-0.8 1,-2.2 1.4,-3.8 0.8,-3.3 1.4,-7.9 1.4,-13.1 0,-5.1 -0.5,-9.7 -1.4,-13.1 -0.4,-1.7 -0.9,-3 -1.4,-3.8 -0.5,-0.8 -1,-1.1 -1.3,-1.1 z m 27.7,1.1 17.4,17 -17.4,16.9 -17.4,-16.9 17.4,-17 z m -2.2,2.9 -3.5,3.5 -0.1,10.4 3.6,0 -0,-13.8 z m 4.3,0 0,13.8 3.6,0 0,-10.2 c 0,-0.4 -3.2,-3.4 -3.6,-3.7 z m 7.3,7.2 0,6.7 3.1,0 0,-3.3 c 0,-0.3 -0,-0.3 -0,-0.3 0,0 0,0 0.1,-0.1 l -3.2,-2.9 z m -18.8,0 c -0.4,0.3 -3,2.7 -3,3 l 0,3.7 3,0 0,-6.7 z m -7,7.1 16.4,15.8 16.4,-15.8 -32.8,0 z"}],t["GR.IN.IC.TOXIC RELEASE INVENTORY"]=[{type:"path",stroke:!1,d:"m 81.8,61 0,15.2 2,0 0,-6.4 2.2,0 c 0.8,6e-6 1.5,0.2 1.9,0.5 0.5,0.3 1,1 1.5,2 l 1.9,3.9 2.2,0 -2.1,-4.2 c -0.4,-0.9 -0.8,-1.5 -1.3,-2 -0.4,-0.5 -0.8,-0.8 -1.3,-0.9 0.8,-0.2 1.5,-0.7 1.9,-1.3 0.4,-0.6 0.7,-1.4 0.7,-2.4 -2e-5,-1.5 -0.4,-2.6 -1.3,-3.3 -0.9,-0.7 -2.1,-1.1 -3.9,-1.1 l -4.6,0 z m 14.5,0 0,15.2 9.8,0 0,-1.7 -7.7,0 0,-5.5 7.2,0 0,-1.7 -7.2,0 0,-4.5 7.5,0 0,-1.7 -9.6,0 z m 13.2,0 0,15.2 9.4,0 0,-1.7 -7.4,0 0,-13.4 -2,0 z m -25.6,1.7 2.6,0 c 1,1.4e-5 1.7,0.2 2.2,0.7 0.5,0.4 0.8,1.1 0.8,2 -10e-6,0.9 -0.3,1.6 -0.8,2 -0.5,0.5 -1.2,0.7 -2.2,0.7 l -2.6,0 0,-5.4 z m 16,14.7 c -4.3,1.1e-5 -8.3,0.4 -11.2,1.2 -1.4,0.4 -2.6,0.8 -3.5,1.3 -0.7,0.4 -1.2,0.9 -1.4,1.5 l -0.1,0 0,0.6 c -3.1e-5,0 0,0 0,0 l 0,31.1 -0.2,-0.7 c -0.1,0 -1.1,0.1 -2.4,0 -1.2,-0.1 -2.7,-0.2 -4.2,-0.3 -1.5,-0.1 -2.9,-0.2 -4,-0.1 -0.6,0 -1.1,0 -1.5,0.1 -0.2,0 -0.4,0.1 -0.6,0.2 -0.2,0.1 -0.4,0.2 -0.6,0.5 -0.3,0.4 -0.4,0.9 -0.3,1.4 0.1,0.5 0.3,0.8 0.5,1.2 0.5,0.7 1.2,1.2 1.9,1.7 0.7,0.5 1.4,1 1.9,1.5 0.5,0.5 0.7,0.9 0.6,1.2 -0,0.1 -0,0.2 -0.2,0.3 -0.2,0.2 -0.6,0.3 -1,0.5 -0.9,0.3 -2.2,0.5 -3.5,0.7 -1.3,0.2 -2.7,0.3 -3.7,0.5 -0.5,0.1 -1,0.2 -1.4,0.4 -0.2,0.1 -0.4,0.2 -0.6,0.3 -0.2,0.2 -0.4,0.4 -0.4,0.7 -0.1,0.9 0.3,1.7 1,2.3 0.7,0.6 1.5,1.1 2.6,1.6 2.1,0.9 4.9,1.7 7.9,2.4 2.9,0.7 5.9,1.2 8.3,1.7 2.4,0.4 4.4,0.8 4.8,0.9 2,0.6 3.3,1.8 4.9,3.2 1.5,1.3 3.2,2.8 5.8,3.5 3,0.8 6.2,-0.6 9.4,-2 3.2,-1.4 6.4,-2.8 9.1,-2.5 0.1,0 1,0.2 1.9,0.5 1,0.3 2.2,0.6 3.4,0.8 1.2,0.3 2.4,0.5 3.5,0.6 1.1,0.1 2,0.2 2.7,-0.5 0.8,-0.7 1.3,-1.4 1.4,-2.1 0.2,-0.8 -0,-1.5 -0.4,-2.2 -0.8,-1.3 -2.2,-2.3 -3.9,-3.2 -1.6,-0.9 -3.5,-1.8 -5,-2.6 -1.5,-0.8 -2.7,-1.6 -3,-1.9 -0.2,-0.3 -0.2,-0.2 -0.1,-0.4 0.1,-0.1 0.3,-0.4 0.7,-0.7 0.8,-0.5 2.2,-1 3.2,-1.5 0.5,-0.3 1,-0.5 1.3,-1 0.2,-0.3 0.3,-0.7 0.2,-1 -0.1,-0.4 -0.3,-0.6 -0.6,-0.8 -0.5,-0.4 -1.2,-0.7 -2.3,-1.1 -1.1,-0.3 -2.6,-0.7 -4.6,-1.1 l -0.3,1.3 0,-35.4 0,-0.6 -0.1,0 c -0.2,-0.6 -0.7,-1.1 -1.4,-1.5 -0.9,-0.5 -2.1,-1 -3.5,-1.3 -2.9,-0.7 -6.8,-1.2 -11.2,-1.2 z m 0,1.2 c 4.3,-1.1e-5 8.1,0.4 10.9,1.1 1.4,0.4 2.5,0.8 3.2,1.2 0.3,0.2 0.4,0.3 0.6,0.5 0.1,0.1 0.2,0.2 0.3,0.3 0,0 0,0 0,0.1 0,0 0,0.1 0,0.1 0,0 0,0.1 0,0.1 0,0 -0,0.1 -0,0.1 -0,0 -0,0 -0,0 -0,0 -0,0 -0,0.1 -0,0 -0,0 -0,0.1 -0,0 -0,0 -0,0.1 -0,0 -0,0.1 -0.1,0.1 -0,0.1 -0.1,0.1 -0.1,0.2 -0,0 -0,0 -0,0 -0.1,0.1 -0.3,0.3 -0.6,0.5 -0.7,0.4 -1.8,0.8 -3.2,1.2 -2.8,0.7 -6.6,1.2 -10.9,1.2 -4.3,1.1e-5 -8.1,-0.4 -10.9,-1.1 -1.4,-0.4 -2.5,-0.8 -3.2,-1.2 -0.3,-0.2 -0.5,-0.3 -0.6,-0.5 -0,-0 -0.1,-0.1 -0.1,-0.1 -0,-0 -0,-0 -0,-0 -0,-0 -0,-0.1 -0.1,-0.1 -0,-0 -0,-0 -0,-0 -0,-0 -0,-0.1 -0.1,-0.1 -0,-0.1 -0.1,-0.1 -0.1,-0.2 0,-0 0,-0.1 0,-0.1 0.1,-0.2 0.3,-0.6 0.9,-0.9 0.7,-0.4 1.8,-0.8 3.2,-1.2 2.8,-0.7 6.6,-1.1 10.9,-1.1 z m 15,5.3 0,34.1 0,0 0,5.6 c 0.1,0.2 0.2,0.3 0.2,0.4 0,0.2 -0.2,0.6 -0.9,1.1 -0.7,0.4 -1.8,0.8 -3.2,1.2 -2.8,0.7 -6.6,1.1 -10.9,1.1 -4.3,1e-5 -8.1,-0.4 -10.9,-1.1 -1.4,-0.4 -2.5,-0.8 -3.2,-1.2 -0.6,-0.4 -0.9,-0.7 -0.9,-1 l -0,0 0,-0.1 0,-1.9 c -0.1,0.1 -0.1,0.1 -0.2,0.1 l 0,-38.4 c 0.1,0.1 0.2,0.1 0.3,0.2 0.9,0.5 2.1,1 3.5,1.3 2.9,0.7 6.8,1.2 11.2,1.2 4.3,-1.2e-5 8.3,-0.5 11.2,-1.2 1.4,-0.4 2.6,-0.8 3.5,-1.3 0.1,-0.1 0.2,-0.1 0.3,-0.2 z m -15.2,6.1 -14.6,14.2 14.2,13.8 0.8,0 14.2,-13.8 -14.6,-14.3 z m -1.8,2.4 0,11.6 -3.1,0 0.1,-8.7 3,-2.9 z m 3.6,0 c 0.4,0.3 3,2.7 3,3 l 0,8.5 -3,0 0,-11.6 z m -9.7,6 0,5.6 -2.5,0 0,-3.1 c 0,-0.3 2.2,-2.3 2.5,-2.5 z m 15.8,0 2.6,2.5 c -0.1,0.3 -0.1,-0.1 -0.1,0.3 l 0,2.8 -2.5,0 0,-5.6 z m -21.7,6 27.5,0 -13.8,13.3 -13.7,-13.3 z m -12.8,9.3 c 1.1,-0 2.5,0 3.9,0.1 1.4,0.1 2.9,0.2 4.2,0.3 1.1,0.1 1.9,0.1 2.6,-0 l 0,10 0,0.6 0.3,0 c 0.2,0.6 0.7,1.1 1.4,1.5 0.9,0.5 2.1,1 3.5,1.3 2.9,0.7 6.8,1.2 11.2,1.2 4.3,-1e-5 8.3,-0.4 11.2,-1.2 1.4,-0.4 2.6,-0.8 3.5,-1.3 0.9,-0.5 1.5,-1.2 1.5,-2.1 0,-0.3 -0.1,-0.5 -0.2,-0.8 l 0,-5.6 c 1.9,0.4 3.4,0.8 4.4,1.1 0.9,0.3 1.3,0.5 1.6,0.7 -0.1,0.1 -0.1,0.1 -0.4,0.3 -0.8,0.4 -2.2,0.9 -3.3,1.6 -0.5,0.3 -1,0.7 -1.3,1.3 -0.3,0.6 -0.2,1.4 0.2,2 0.7,1 2,1.6 3.5,2.4 1.6,0.8 3.4,1.6 4.9,2.5 1.5,0.9 2.8,1.9 3.3,2.7 0.2,0.4 0.3,0.7 0.2,1 -0.1,0.3 -0.3,0.8 -0.9,1.3 0,-0 -0.6,0.2 -1.5,0.1 -0.9,-0.1 -2.1,-0.3 -3.3,-0.6 -1.2,-0.3 -2.4,-0.6 -3.3,-0.8 -1,-0.3 -1.7,-0.5 -2.2,-0.5 -3.3,-0.3 -6.7,1.3 -9.9,2.7 -3.2,1.4 -6.1,2.5 -8.4,1.9 -2.3,-0.6 -3.7,-1.8 -5.2,-3.2 -1.5,-1.3 -3.1,-2.8 -5.5,-3.5 -0.8,-0.2 -2.5,-0.5 -5,-0.9 -2.4,-0.4 -5.4,-1 -8.3,-1.6 -2.9,-0.7 -5.6,-1.5 -7.6,-2.3 -1,-0.4 -1.7,-0.9 -2.2,-1.3 -0.3,-0.3 -0.4,-0.5 -0.5,-0.7 0.2,-0.1 0.6,-0.2 1.1,-0.3 1,-0.2 2.3,-0.3 3.6,-0.5 1.4,-0.2 2.7,-0.4 3.9,-0.8 0.6,-0.2 1.1,-0.4 1.5,-0.8 0.4,-0.3 0.8,-0.8 0.8,-1.4 0.1,-1 -0.4,-1.8 -1.1,-2.5 -0.6,-0.7 -1.4,-1.2 -2.1,-1.7 -0.7,-0.5 -1.3,-1 -1.6,-1.4 -0.1,-0.2 -0.2,-0.3 -0.2,-0.4 -0,-0.1 0,-0.1 0.1,-0.2 0,-0 0.1,-0 0.1,-0 0.3,-0 0.7,-0.1 1.2,-0.1 z"
},{type:"path",stroke:!1,fill:!!R&&U,d:"m 85.8,104.4 13.7,13.3 13.8,-13.3 z m 21.7,-0.4 h 2.5 v -2.8 c 0,-0.5 -0,-0.1 0.1,-0.4 l -2.7,-2.4 v 5.6 z m -6.1,0 h 3.1 v -8.5 c 0,-0.3 -2.7,-2.8 -3.1,-3.1 v 11.6 z m -6.6,-8.7 -0.1,8.7 3.1,0 -0,-11.6 z m -5.7,5.6 v 3.1 h 2.5 v -5.6 c -0.3,0.2 -2.5,2.2 -2.5,2.5 z M 99.8,85.4 c -4.3,1.2e-5 -8.1,-0.4 -10.9,-1.1 -1.4,-0.4 -2.5,-0.8 -3.2,-1.2 -0.7,-0.4 -0.9,-0.8 -0.9,-1 0,-0.2 0.2,-0.6 0.9,-1 0.7,-0.4 1.8,-0.8 3.2,-1.2 2.8,-0.7 6.6,-1.2 10.9,-1.2 4.3,-1.1e-5 8.1,0.4 10.9,1.1 1.4,0.4 2.5,0.8 3.2,1.2 0.7,0.4 0.9,0.8 0.9,1 0,0.2 -0.2,0.6 -0.9,1 -0.7,0.4 -1.8,0.8 -3.2,1.2 -2.8,0.7 -6.6,1.2 -10.9,1.2 z m -15,-1.5 0,38.4 c 0.1,-0.1 0.1,-0.1 0.2,-0.1 l 0,1.8 0,0.1 0,0 c 0,0.2 0.3,0.6 0.9,0.9 0.7,0.4 1.8,0.9 3.2,1.2 2.8,0.7 6.6,1.2 10.9,1.2 4.3,-1e-5 8.2,-0.5 10.9,-1.2 1.4,-0.4 2.4,-0.8 3.2,-1.2 0.7,-0.4 0.9,-0.8 0.9,-1 0,-0.1 -0,-0.2 -0.2,-0.4 l 0,-5.6 -0,0 0,-34.1 c -0.1,0.1 -0.2,0.1 -0.3,0.2 -0.9,0.5 -2.1,1 -3.5,1.3 -2.9,0.7 -6.8,1.2 -11.2,1.2 -4.3,1.1e-5 -8.3,-0.4 -11.2,-1.2 -1.4,-0.4 -2.6,-0.8 -3.5,-1.3 -0.1,-0.1 -0.2,-0.1 -0.3,-0.2 z m 14.8,6.1 14.6,14.3 -14.2,13.8 -0.8,0 L 85,104.2 99.6,90 z m -26.7,23.7 c 1.1,-0 2.5,0 3.9,0.1 1.4,0.1 2.9,0.2 4.2,0.3 1.1,0.1 1.9,0.1 2.6,-0 l 0,10 0,0.6 0.3,0 c 0.2,0.6 0.7,1.1 1.4,1.5 0.9,0.5 2.1,1 3.5,1.3 2.9,0.7 6.8,1.2 11.2,1.2 4.3,-1e-5 8.3,-0.4 11.2,-1.2 1.4,-0.4 2.6,-0.8 3.5,-1.3 0.9,-0.5 1.5,-1.2 1.5,-2.1 0,-0.3 -0.1,-0.5 -0.2,-0.8 l 0,-5.6 c 1.9,0.4 3.4,0.8 4.4,1.1 0.9,0.3 1.3,0.5 1.6,0.7 -0.1,0.1 -0.1,0.1 -0.4,0.3 -0.8,0.4 -2.2,0.9 -3.3,1.6 -0.5,0.3 -1,0.7 -1.3,1.3 -0.3,0.6 -0.2,1.4 0.2,2 0.7,1 2,1.6 3.5,2.4 1.6,0.8 3.4,1.6 4.9,2.5 1.5,0.9 2.8,1.9 3.3,2.7 0.2,0.4 0.3,0.7 0.2,1 -0.1,0.3 -0.3,0.8 -0.9,1.3 0,-0 -0.6,0.2 -1.5,0.1 -0.9,-0.1 -2.1,-0.3 -3.3,-0.6 -1.2,-0.3 -2.4,-0.6 -3.3,-0.8 -1,-0.3 -1.7,-0.5 -2.2,-0.5 -3.3,-0.3 -6.7,1.3 -9.9,2.7 -3.2,1.4 -6.1,2.5 -8.4,1.9 -2.3,-0.6 -3.7,-1.8 -5.2,-3.2 -1.5,-1.3 -3.1,-2.8 -5.5,-3.5 -0.8,-0.2 -2.5,-0.5 -5,-0.9 -2.4,-0.4 -5.4,-1 -8.3,-1.6 -2.9,-0.7 -5.6,-1.5 -7.6,-2.3 -1,-0.4 -1.7,-0.9 -2.2,-1.3 -0.3,-0.3 -0.4,-0.5 -0.5,-0.7 0.2,-0.1 0.6,-0.2 1.1,-0.3 1,-0.2 2.3,-0.3 3.6,-0.5 1.4,-0.2 2.7,-0.4 3.9,-0.8 0.6,-0.2 1.1,-0.4 1.5,-0.8 0.4,-0.3 0.8,-0.8 0.8,-1.4 0.1,-1 -0.4,-1.8 -1.1,-2.5 -0.6,-0.7 -1.4,-1.2 -2.1,-1.7 -0.7,-0.5 -1.3,-1 -1.6,-1.4 -0.1,-0.2 -0.2,-0.3 -0.2,-0.4 -0,-0.1 0,-0.1 0.1,-0.2 0,-0 0.1,-0 0.1,-0 0.3,-0 0.7,-0.1 1.2,-0.1 z"}],t["GR.IN.IC.COLLEGE/UNIVERSITY"]=[{type:"path",stroke:!1,d:"m 97.4,106.9 h -14.8 v 31.7 h 32 v -31.7 H 99.8 V 95.1 c 0,-0.6 6.5,-3 7.5,-3.4 1.3,-0.5 6.9,-3 7.9,-3 -0.3,-0.4 -14.7,-6.3 -15.7,-6.3 h -2.3 v 24.5 z m 23.3,-30.1 -9.6,0 0,-15.1 2,0 0,13.3 7.6,0 0,1.8 M 106,63.5 c 0.6,0.7 1.1,1.5 1.4,2.5 0.3,1 0.5,2.1 0.5,3.3 -1e-5,1.2 -0.2,2.4 -0.5,3.4 -0.3,1 -0.8,1.8 -1.4,2.5 -0.6,0.7 -1.4,1.2 -2.2,1.5 -0.8,0.3 -1.8,0.5 -2.9,0.5 -1.1,0 -2,-0.2 -2.9,-0.5 -0.9,-0.4 -1.6,-0.9 -2.2,-1.5 -0.6,-0.7 -1.1,-1.5 -1.4,-2.5 -0.3,-1 -0.5,-2.1 -0.5,-3.3 -10e-7,-1.2 0.2,-2.3 0.5,-3.3 0.3,-1 0.8,-1.8 1.4,-2.5 0.6,-0.7 1.3,-1.2 2.2,-1.5 0.9,-0.4 1.9,-0.5 2.9,-0.5 1.1,1.5e-5 2.1,0.2 2.9,0.5 0.9,0.4 1.6,0.9 2.2,1.5 m -0.2,5.8 c -2e-5,-2 -0.4,-3.5 -1.3,-4.5 -0.9,-1.1 -2.1,-1.6 -3.6,-1.6 -1.5,1.4e-5 -2.7,0.5 -3.6,1.6 -0.9,1.1 -1.3,2.6 -1.3,4.5 -3e-6,2 0.4,3.5 1.3,4.6 0.9,1 2.1,1.6 3.6,1.6 1.5,2e-6 2.7,-0.5 3.6,-1.6 0.9,-1.1 1.3,-2.6 1.3,-4.6 m -14,6.5 c -0.4,0.2 -0.7,0.3 -1,0.5 -0.3,0.1 -0.7,0.3 -1.2,0.4 -0.4,0.1 -0.9,0.2 -1.4,0.3 -0.5,0.1 -1,0.1 -1.6,0.1 -1.1,0 -2.1,-0.2 -3,-0.5 -0.9,-0.3 -1.7,-0.8 -2.3,-1.5 -0.7,-0.6 -1.2,-1.5 -1.5,-2.4 -0.4,-1 -0.5,-2.1 -0.5,-3.5 -10e-7,-1.2 0.2,-2.4 0.5,-3.3 0.4,-1 0.9,-1.8 1.5,-2.5 0.6,-0.7 1.4,-1.2 2.3,-1.5 0.9,-0.3 1.9,-0.5 3,-0.5 0.8,1.5e-5 1.6,0.1 2.4,0.3 0.8,0.2 1.7,0.5 2.7,1 l 0,2.4 -0.2,0 c -0.8,-0.7 -1.7,-1.2 -2.5,-1.5 -0.8,-0.3 -1.7,-0.5 -2.6,-0.5 -0.8,1.4e-5 -1.5,0.1 -2.1,0.4 -0.6,0.2 -1.2,0.6 -1.6,1.1 -0.5,0.5 -0.8,1.2 -1.1,1.9 -0.3,0.8 -0.4,1.7 -0.4,2.7 -3e-6,1.1 0.1,2 0.4,2.7 0.3,0.8 0.7,1.4 1.1,1.9 0.5,0.5 1,0.9 1.7,1.1 0.6,0.2 1.3,0.4 2,0.4 1,2e-6 1.9,-0.2 2.7,-0.5 0.8,-0.3 1.6,-0.8 2.4,-1.5 l 0.1,0 0,2.4"}],t["GR.IN.IC.SCHOOL"]=[{type:"path",stroke:!1,d:"M 98.4,96.4 H 83.7 v 31.7 h 32 V 96.4 H 100.9 V 84.6 c 0,-0.6 6.5,-3 7.5,-3.4 1.3,-0.5 6.9,-3 7.9,-3 -0.3,-0.4 -14.7,-6.3 -15.7,-6.3 H 98.4 V 96.4 z"}],t["GR.IN.IC.REST STOP"]=[{type:"path",stroke:!1,d:"m 108.4,89.6 v -0.4 l 0.6,-0.6 -0.4,1.4 -3.8,13.4 -0.2,0.8 -0.4,0.6 0,0.9 -2,6.7 7.2,0 v 19.7 h 5.2 v -19.7 h 2.7 v 19.7 h 5.2 v -19.7 h 7.1 l -1.3,-5.3 -0.2,-0.8 -4.8,-16.4 -0.5,-1.4 0.6,0.7 0.1,0.4 c 2.1,2.4 5.4,14.2 8.6,14.2 h 0.4 c 1.2,0 2.1,-1.1 2.1,-2.3 v -0.6 c 0,-0.5 -4.8,-10 -5.3,-11.6 -0.7,-2 -1.7,-4.2 -2.6,-6 -1,-2.1 -1.2,-3.8 -4.6,-3.8 h -12.4 c -3.4,0 -3.6,1.8 -4.7,3.9 -0.9,1.7 -1.9,4 -2.5,5.9 -0.6,1.6 -5.2,11.1 -5.2,11.6 v 0.6 c 0,1.3 0.6,2.3 1.9,2.3 h 0.8 c 2.4,0 6.4,-12.2 8.2,-14.2 z m 0.2,0.4 0.4,-1.5 -0.6,0.6 0,0.4 z m 15.1,-0.4 -0.1,-0.4 -0.6,-0.6 0.5,1.4 z M 69.6,88.8 h 2.3 v 43.6 h 6.1 v -25.6 h 2.7 v 25.6 h 5.9 v -43.6 h 2.3 v 16.4 h 4.6 V 86.3 l -0.3,-2.3 h -0.4 c 0,-2.3 -1.7,-4.4 -4,-4.4 H 69.6 c -3,0 -4.4,3.4 -4.4,6.5 v 19.1 h 4.4 V 88.8 z M 110.7,72.8 c 0,2.7 2.4,5.4 5,5.4 h 0.2 c 1.6,0 2.8,-0.6 3.6,-1.4 0.5,-0.4 1.8,-2.4 1.8,-3 v -1.6 c 0,-2.4 -2.8,-4.6 -5.4,-4.6 -3,-0 -5.2,2.4 -5.2,5.2 z m -36.7,1.1 c 0,2 2.8,4.4 5,4.4 h 0.2 c 4.2,0 4.3,-3.4 5.2,-3.8 V 71.6 c 0,-1.8 -2.8,-4 -5.2,-4 -2.3,0 -5.2,2.2 -5.2,4 v 2.3 z"}],t["GR.IN.IC.CONTROL VALVE"]=[{type:"path",stroke:!1,d:"m 114,114.5 h 15.7 v 4 h 9.1 v -23.6 h -9.1 V 98.8 H 114.4 c -0.4,0 -2.6,-2.6 -2.6,-3.4 v -5.6 h -9.9 v -8.2 h 12.3 v -3.6 h -28.2 v 3.6 h 12.1 v 8.3 H 89.2 v 6.6 l -0.2,-0.2 -1.8,2.4 -17.2,0.1 V 95 H 61.2 v 23.6 h 8.9 v -4 H 87 c 0.4,0 2,2.4 2.4,2.8 0.5,0.6 2.2,1.9 2.9,2.4 1.9,1.2 4.7,2.4 7.8,2.4 h 0.6 c 3.5,0 5.8,-1 8.1,-2.4 1.4,-0.8 4.8,-3.8 5.2,-5.3 z"}],t["GR.IN.IC.DAM"]=[{type:"path",stroke:!1,d:"m 68.3,89.1 c 2.3,0 3.2,-1.7 4.6,-2.6 1.1,0.8 2.2,2.6 4.4,2.6 h 0.2 c 2.6,0 3.3,-1.7 4.7,-2.6 1.4,0.9 2.2,2.6 4.7,2.6 2.4,0 3.3,-1.8 4.6,-2.6 0.6,0.4 1.1,1.1 1.9,1.6 0.4,0.2 2.2,0.9 2.2,1.3 v 6.8 C 94.1,95.8 91.8,93.8 91.5,92.6 h -0.3 c -0.3,1.1 -3,3.6 -4.5,3.6 -1.5,0 -4.1,-2.6 -4.4,-3.8 -1,0.6 -2.6,3.8 -4.6,3.8 h -0.4 c -1.2,0 -4,-2.7 -4.2,-3.7 -0.8,0.2 -2.6,3.7 -4.7,3.7 h -0.3 c -1.1,0 -1.7,-0.7 -2.4,-1.2 l -1,1.2 c 1,0.7 1.6,1.8 3.2,1.8 h 0.4 c 2.3,0 3.1,-1.8 4.6,-2.8 0.7,1.1 2.8,2.8 4.7,2.8 2.3,0 3.3,-2 4.6,-2.8 1.2,0.8 2.6,2.8 4.7,2.8 2.1,0 3.4,-2.1 4.7,-2.8 0.7,1 2.6,2.4 4,2.7 v 7 c -1.4,-0.1 -3.4,-2.4 -4,-3.5 -1.1,0.7 -2.5,3.6 -4.7,3.6 h -0.1 c -2.3,0 -4.1,-3.5 -4.7,-3.7 -0.3,1 -3,3.7 -4.1,3.7 h -0.4 c -2.2,0 -3.6,-2.9 -4.7,-3.7 -0.6,1 -2.8,3.7 -4.1,3.7 H 67.7 c -0.7,0 -1.7,-1 -2.2,-1.3 l -0.9,1.5 c 1.1,0.7 1.7,1.6 3.6,1.6 2.7,0 3.1,-1.8 4.7,-2.6 1.4,0.9 2,2.6 4.7,2.6 2.2,0 3.4,-1.8 4.6,-2.6 1.4,1 2.5,2.6 4.8,2.6 1.8,0 3.4,-2 4.4,-2.6 0.9,0.5 1,1 2,1.6 0.4,0.3 2.2,0.7 2.2,1.2 v 6.8 c -1.4,-0.3 -3.6,-2.2 -4,-3.5 -1.1,0.7 -2.5,3.8 -4.8,3.8 -1.4,0 -4.1,-2.6 -4.4,-3.8 -1.2,0.8 -2.6,3.8 -4.8,3.8 -2,0 -3.7,-3.2 -4.7,-3.8 -0.3,1 -3,3.8 -4.3,3.8 h -0.6 c -0.8,0 -1.8,-1 -2.4,-1.3 l -0.9,1.3 c 1.1,0.7 1.8,1.8 3.6,1.8 2.2,0 3.3,-1.8 4.7,-2.8 1.2,0.8 2.6,2.9 4.7,2.8 2.3,-0.1 3.3,-1.9 4.6,-2.8 1.2,0.8 2.7,2.8 4.7,2.8 1.9,0 3.4,-2 4.6,-2.8 1.6,1 1.8,2 4.1,2.5 v 5 h 17 l -1.4,-5.2 c 0.8,0.2 1,0.6 2.2,0.6 2,0 3.3,-1.9 4.6,-2.8 1.3,0.9 2.4,2.8 4.7,2.8 1.6,0 3.8,-1.8 4.4,-2.8 1.3,0.3 2.5,2.8 5.1,2.8 1.2,0 2.6,-1.4 3.4,-1.8 l -1,-1.3 c -0.7,0.4 -1.5,1.3 -2.6,1.3 -2.1,0 -3.7,-3.1 -4.7,-3.8 -0.7,1.4 -2.7,3.8 -4.7,3.8 -1.3,0 -4.3,-2.6 -4.4,-3.8 -1,0.7 -2.6,3.8 -4.7,3.8 h -0.2 c -1.1,0 -2.2,-0.9 -2.7,-1.5 -0.4,-0.4 -0.8,-2.5 -1.1,-3.2 -0.4,-1 -1.8,-5.6 -1.8,-6.6 l -0.3,-0.4 0,-0.6 -0.3,-0.4 v -0.6 l -0.3,-0.4 -5.3,-18.6 0.2,-0 -0.3,-0.4 0,-0.6 c -0.2,-0.3 -0.3,-0.3 -0.3,-0.6 v -0.4 h -5.6 v 7.8 c -1.4,-0.7 -1.2,-0.5 -2.4,-1.6 -0.1,-0.1 -1,-0.9 -1,-1 -0.4,-0.5 -0.1,-0.9 -0.8,-1.1 -0.1,1.2 -3.1,3.8 -4.3,3.8 h -0.2 c -2.5,0 -4.2,-3.6 -4.8,-3.8 -0.3,1.1 -3,3.8 -4.2,3.8 h -0.4 c -1.2,0 -4.2,-2.7 -4.2,-3.8 -0.5,0.1 -2.8,3.8 -4.4,3.8 H 67.7 c -0.7,0 -1.7,-1 -2.2,-1.3 l -0.9,1.3 c 1,0.7 1.6,1.6 3.4,1.6 h 0.3 v 0 z"}],t["GR.IN.IC.DISCHARGE OUTFALL"]=[{type:"path",stroke:!1,d:"m 63.2,111.4 v 13.4 h 73.6 V 111.7 l -3.1,0.5 -1.1,-0.1 c -2.2,0 -3.6,-0.7 -4.9,-1.6 -0.6,-0.4 -1.1,-1.1 -1.5,-1.8 -0.4,-0.6 -0.2,-2.1 -1,-2.1 h -0.4 c -0.8,0 -0.7,1.6 -1.2,2.2 -0.4,0.6 -0.9,1.2 -1.6,1.7 -1.3,1 -3,1.6 -5.1,1.6 h -0.9 c -3.2,0 -6.8,-2.1 -6.8,-5.1 -0.3,-0.2 -0.4,-0.4 -0.8,-0.4 h -0.3 c -0.7,0 -0.8,1.5 -1.1,2.1 -0.4,0.6 -1,1.4 -1.5,1.8 -1.2,1 -2.7,1.6 -4.8,1.6 h -0.9 c -3.5,0 -7.3,-2.1 -7.3,-5.4 -0.4,-0.1 -0.4,-0.2 -0.8,-0.2 h -0.3 c -0.6,0 -0.6,1.5 -1.1,2.2 -0.5,0.8 -0.7,1.1 -1.5,1.7 -1.3,1 -2.7,1.6 -4.8,1.6 H 82.9 c -3.5,0 -6.7,-2.2 -7,-5.4 -0.3,-0.1 -0.4,-0.2 -0.8,-0.2 h -0.1 c -0.7,0 -0.8,1.5 -1.2,2.2 -0.4,0.6 -0.9,1.2 -1.6,1.7 -1.4,1 -2.7,1.6 -5,1.6 h -1 c -1.2,0 -2.2,-0.4 -3,-0.8 l 0,0 z m 0,-21.6 19.5,0 0,1.2 2.7,0 0,-15.8 -2.7,0 0,1.2 -19.5,0 z M 89.7,80.9 v 0.1 c 8.1,0 16.2,1.2 20.6,4.9 2.8,2.4 3.1,4.5 3.1,9.6 0,4.1 0.5,8.3 4.5,8.3 h 0.8 c 1.7,0 2.8,-2.6 2.8,-4.3 v -0.9 c 0,-5.1 -3.3,-10.7 -5.9,-13.3 -1.6,-1.6 -3.6,-3 -6.1,-3.6 -2.2,-0.5 -6,-1.1 -8.6,-1.1 l -1.8,-0.1 -9.4,0.4 z"}],t["GR.IN.IC.GROUND WATER WELL"]=[{type:"path",stroke:!1,d:"M86,64L86,70L75,110L81,110L92,70L99,70L99,130L86,130L86,140L120,140L120,130L110,130L110,89L120,89L120,93L130,93L130,87C130,82.631 125.551,83 125.551,83L110,83L110,70L113.774,70L113.774,64L86,64Z"}],t["GR.IN.IC.TELECOMMUNICATIONS INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 109.7,116.6 4.1,13.4 -0.2,0.1 -12.2,-8.4 8.3,-5.2 z m -19.7,0 8,5.1 -12.1,8.4 4.1,-13.6 z m 9.8,-9.8 8.8,8.2 c -1.7,0.5 -8.1,5.6 -8.8,5.6 -0.2,0 -8.2,-5.4 -8.6,-5.8 l 8.5,-8.1 z m 5.3,-4.8 3.1,9.8 -6.9,-6.4 3.7,-3.4 z m -10.5,0.1 3.8,3.3 -6.9,6.4 3.1,-9.7 z m 2.1,-1 6.4,-0 -3.2,3.2 -3.2,-3.2 z M 99.2,84.8 C 99.1,85.4 99,85.5 99,86.1 v 2 h -3 c -0.5,0 -0.8,0.3 -0.8,0.8 0,0.5 0.1,0.5 0.2,1 0.4,0.1 0.4,0.2 1,0.2 h 2.6 v 2.8 h -4.5 c -0.6,0 -1.2,0.2 -1.2,0.8 0,0.5 0.3,0.8 0.8,0.8 h 4.9 v 4.9 h -4.5 c -0.5,0 -0.5,0.1 -0.9,0.2 l -2.5,7.9 -1,3.2 -4.1,13.3 -1.1,3.1 c 0,2 -1.4,3.5 -1.4,5.5 0,0.4 0.1,0.2 0.2,0.8 h 0.5 c 0.6,0 15.1,-10.3 15.4,-10.3 0.6,0 14.2,9.4 15.8,10.5 0.4,-0.2 1,-0.4 1,-1 v -0.6 c 0,-0 -1.5,-4.4 -1.7,-5 -0.4,-1.1 -1.4,-4.3 -1.5,-5.2 l -1,-3.2 -4.1,-13.2 -0.9,-3.4 c -1,-0.4 -0.3,-2.6 -1.6,-2.6 h -4.8 v -5 h 4.8 c 0.5,0 0.8,-0.3 0.8,-0.8 0,-0.5 -0.3,-0.8 -0.8,-0.8 H 100.8 V 90.1 h 2.4 c 0.7,0 1.4,-0.4 1.4,-1 v -0.2 c 0,-0.5 -0.3,-0.8 -0.8,-0.8 h -2.9 v -2.6 c 0,-0.4 -0.6,-1 -0.8,-1 -0,-0 -0.7,0.1 -0.8,0.2 z m 6.7,-15.7 c 7,1.6 10.9,4.6 15.1,8.9 3,3 7.3,11 7.3,16.9 v 4 c 0,2.1 -1.5,7.7 -2.2,9 -0.7,1.1 -1.2,2.4 -1.9,3.6 -0.3,0.4 -2.4,3.3 -2.4,3.4 0,0.7 1,1.6 1.2,2.6 1.7,-0.4 4.8,-6.3 5.7,-8.2 1.2,-2.5 2.7,-7.8 2.7,-11.4 V 94.3 c 0,-0.1 -0.9,-4.9 -1,-5.5 -0.3,-0.9 -1.4,-3.7 -1.8,-4.8 -0.9,-2.2 -3.7,-6.4 -5.2,-8 -3.6,-3.6 -10.6,-9.2 -16.9,-9.7 l -0.4,2.8 z m -1.6,10.7 c 6,0.5 13.3,9.2 13.3,16.1 v 2.2 c 0,1.5 -1.4,5.5 -1.4,5.5 0,0.2 1.2,2.9 1.4,3.2 l 0.2,0.1 1.6,-3.4 0.1,-0.6 0.7,-5.9 0.2,-0.4 -1,-5.9 c -0.7,-0.3 -0.6,-1.4 -1.1,-2.2 -0.4,-0.8 -0.8,-1.6 -1.3,-2.3 -1.1,-1.6 -1.8,-2.6 -3.2,-3.9 -2.2,-2.2 -5.8,-4.2 -9.2,-5 l -0.3,2.8 z M 68.7,95.2 v 5.1 c 0,4.2 5.4,16.3 7.9,17 0.1,-0.5 1,-2.2 1,-2.6 0,0 -2.1,-2.9 -2.3,-3.4 -0.7,-1.3 -1.3,-2.4 -1.9,-3.8 -1,-2.6 -1.8,-6 -1.8,-9.6 v -2.4 c 0,-8 3.3,-12.9 6.9,-17.5 1.4,-1.8 4.7,-4.4 6.7,-5.6 1.4,-0.8 2.5,-1.4 4.1,-2.1 0.5,-0.2 4.5,-1.3 4.5,-1.6 l -0.2,-2.6 c -2.4,0.1 -8,2.6 -9.6,3.7 -3.2,1.9 -4.8,3.6 -7.3,6.1 -3.6,3.6 -7.8,12 -7.8,19.1 l 0,0 z m 10.7,0 v 2.9 c 0,1.9 0.2,3.1 0.8,4.5 0.2,0.4 1.5,4 1.5,4 l 0.4,-0 1.5,-2.9 c -0.9,-1.2 -1.4,-4 -1.4,-6.2 v -1.8 c 0,-3.7 2.3,-8.3 4.2,-10.3 1.8,-1.8 5.9,-5.5 9.1,-5.6 L 95,77.1 C 88,77.6 79.4,87.3 79.4,95.2 z"}],t["GR.IN.IC.TELECOMMUNICATIONS TOWER"]=[{type:"path",stroke:!1,d:"m 102.5,119.2 12,-8 2.8,9.2 1.3,4 2.1,6.9 -18.2,-12 z m -23,12 3.4,-11.7 2,-5.9 0.8,-2.6 11.9,8.2 -18,12 z m 20.4,-34.6 13,12.2 c -1.5,1 -12.3,8.5 -13.1,8.5 -0.1,0 -11.6,-7.7 -12.7,-8.5 L 99.9,96.6 z m 7.7,-7.1 0.2,0.2 1.8,5.7 2.5,8.7 -10.1,-9.3 5.6,-5.2 0,0 z m -15.5,0.6 v -0.6 l 0.4,0.2 5.4,5 -10,9.4 2.6,-9 1.6,-5 z m 2.9,-1.7 9.8,-0 -5,4.4 -4.8,-4.4 z m 3.6,-23.1 v 3.6 h -4.4 c -0.5,0 -1,0.6 -1,1 v 0.6 c 0,0.7 0.8,1 1.5,1 h 4 v 4.2 h -7.2 c -0.5,0 -1,0.6 -1,1 v 0.2 c 0,1 0.5,1.5 1.5,1.5 h 6.8 v 7 h -6.8 c -0.8,0 -1,0.3 -1.3,0.7 l -0.6,2 -4.9,15.6 -3,9.6 -3.1,9.4 -0.1,0.8 -2.9,8.7 -0.1,0.8 -0.5,2.2 c 1,0.2 0.5,0.6 1.3,0.6 h 0.2 c 0.8,0 20.1,-13.7 23.1,-15.2 2.5,1.7 22.4,15.2 23.5,15.2 0.6,0 1,-0.7 1,-1.3 0,-0.1 -1.4,-4 -1.5,-4.2 l -0.1,-0.8 -3.1,-9.7 -2.9,-9.3 -4.7,-15.7 c -0.6,-0.8 -1.4,-3.8 -1.8,-5 -0.6,-1.8 -0.5,-4.3 -2.5,-4.3 h -6.8 v -7 h 7.2 c 0.5,0 1,-0.6 1,-1 v -0.4 c 0,-0.6 -0.2,-1.3 -0.8,-1.3 h -7.4 v -4.2 h 4 c 0.7,0 1.5,-0.4 1.5,-1 v -0.6 c 0,-0.7 -0.8,-1 -1.5,-1 h -4 v -4 c 0,-0.6 -0.7,-1 -1.3,-1 -0.8,-0 -1.3,0.6 -1.3,1.4 l 0,0 z m -6.6,24.8 0.4,-0.4 -0.4,-0.2 z"}],t["GR.IN.IC.AIR TRAFFIC CONTROL FACILITY"]=S("ATC"),t["GR.IN.IC.PROPANE FACILITY"]=[{type:"path",stroke:!1,d:"m 98.7,73.1 v 0.2 c 0,1 0.5,1.5 1.5,1.5 0.5,0 1.1,-0.6 1.1,-1.1 0,-0.8 -0.2,-0.8 -0.2,-1.5 -0.5,-0.1 -0.5,-0.2 -1.1,-0.2 h -0.2 c -0.5,0 -1.1,0.6 -1.1,1.1 z m -12.6,58.5 h 28.4 v 3.3 h -28.4 v -3.3 z M 75.8,119 h 48.5 v 3.3 c 0,2 -8.8,7.8 -9.8,7.8 H 85.8 c -1,0 -10,-5.8 -10,-7.6 v -3.5 l 0,0 z m 0,-27.5 c 0,-1.1 7.2,-5.8 8.5,-6.6 2.6,-1.5 7.4,-3.7 11.4,-3.7 h 8.5 c 4.1,0 9.1,2 11.6,3.7 1.3,0.9 8.5,5.4 8.5,6.6 v 4.2 H 75.8 V 91.5 l 0,0 z M 98.2,77.1 c 0.7,0 0.8,0.2 1.5,0.2 h 0.4 c 0.8,0 0.8,-0.2 1.5,-0.2 v 1.8 l 1.2,0.8 -5.5,0 c 0.3,-0.5 0.9,-0.8 0.9,-1.3 l -0,-1.3 0,0 z m -1.1,-4 c 0,-1.4 1.4,-2.4 2.8,-2.4 1.3,0 2.8,0.9 2.8,2 v 1.1 c 0,1.4 -1.6,2.4 -3,2.4 -1,0 -2.6,-1.2 -2.6,-2.4 v -0.7 h -0 z m 12.2,-8.1 h 3.5 v 3.5 h -1.8 v 6.8 c 0.7,0 2.4,0.6 2.4,1.3 v 3.7 H 109.4 V 65.1 z m -22.7,0 h 4.2 V 80.3 H 85.8 v -4.1 c 0.8,-0.2 3.1,-0.8 3.1,-1.5 v -6.1 h -2.2 v -3.5 z m 5.7,0 h 15.5 v 15.3 c -1.6,-0.4 -4.8,-0.9 -4.8,-2.6 v -0.9 c 0,-1.5 0.9,-2.1 0.9,-2.6 v -1.1 c 0,-3.2 -3,-3.2 -3.3,-4.4 h 4.2 v -1.5 h -9.6 v 1.5 h 4.2 v 0.6 c -1.9,0.1 -3.1,1.9 -3.1,4 v 0.6 c 0,1 0.9,2 0.9,2.4 v 1.3 c 0,1.4 -3.4,2.3 -4.8,2.6 V 65.1 l 0,0 z m -7.2,4.8 h 2.2 v 4 c 0,0.8 -2.1,1.2 -2.8,1.3 v 6.8 h 3 c -0.6,0.4 -2.7,1.2 -3.6,1.8 -1.2,0.7 -2.2,1.4 -3.4,2.1 -0.9,0.6 -6.1,4.7 -6.3,4.8 v 31.6 c 0,1.9 3.2,4.4 4.5,5.3 1,0.6 5.8,3.3 5.8,4.1 v 4.8 h 31.2 v -4.8 c 0,-1.6 10,-4.6 10,-10 V 91.1 c 0,-0.9 -5,-4.4 -6,-5.1 -1.2,-0.8 -2.1,-1.4 -3.3,-2.1 -0.9,-0.6 -3.2,-1.4 -3.7,-1.9 h 2.4 v -6.8 c -0.7,-0.2 -2.6,-0.5 -2.6,-1.3 v -4 h 2 V 63.5 H 85.2 v 6.3 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 114.4,134.9 0,-3.3 -28.4,0 0,3.3 z M 75.8,122.5 c 0,1.9 9,7.6 10,7.6 h 28.6 c 1,0 9.8,-5.9 9.8,-7.8 v -3.3 H 75.8 v 3.5 l 0,0 z m 0,-31 v 4.2 h 48.5 V 91.5 c 0,-1.2 -7.2,-5.7 -8.5,-6.6 -2.5,-1.7 -7.5,-3.7 -11.6,-3.7 h -8.5 c -3.9,0 -8.8,2.2 -11.4,3.7 -1.3,0.8 -8.5,5.4 -8.5,6.6 l 0,0 z M 109.4,80.3 h 4.2 v -3.7 c 0,-0.8 -1.7,-1.2 -2.4,-1.3 v -6.8 h 1.8 V 65.1 H 109.4 V 80.3 z M 86.7,68.6 h 2.2 v 6.1 c 0,0.8 -2.3,1.4 -3,1.5 v 4.2 h 5 V 65.1 h -4.2 v 3.5 z m 11.6,9.8 c 0,0.6 -0.6,0.8 -0.9,1.3 l 5.5,-0.1 -1.1,-0.8 V 77.1 c -0.7,0 -0.8,0.2 -1.5,0.2 H 99.8 c -0.8,0 -0.8,-0.2 -1.5,-0.2 l -0,1.3 0,0 z m 2.8,-6.1 c 0.1,0.7 0.2,0.8 0.2,1.6 0,0.5 -0.6,1.1 -1.1,1.1 -1,0 -1.5,-0.5 -1.5,-1.5 v -0.2 c 0,-0.5 0.6,-1.1 1.1,-1.1 h 0.2 c 0.6,0 0.6,0.1 1.1,0.2 z m -3.9,0.9 v 0.7 c 0,1.2 1.6,2.4 2.6,2.4 1.4,0 3,-1 3,-2.4 V 72.7 c 0,-1 -1.6,-2 -2.8,-2 -1.4,0 -2.8,1 -2.8,2.4 z"}],t["GR.IN.IC.GOVERNMENT SITE INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"M 100,67.3 C 90.1122,72.1037 79.3336,77.3992 70,82 c -1.2,0.6 -3.8,1.3 -3.8,2.8 l -0.1,0 0,0.4 c 0,0.6 0.1,0.6 0.2,1.1 0.5,0.1 0.5,0.2 1.1,0.2 l 65,0 c 0.7,0 1.7,-0.6 1.7,-1.1 0,-2.2 -1.7,-2.4 -3.2,-3 C 119.391,76.7575 109.17,71.7941 100,67.3 Z m -0.1,3.4 c 0.2,0 24.5,12 25.9,13 l -51.6,0 0,-0.1 C 75,83 99.7,70.7 99.9,70.7 Z m 31.6,55.6 0,-3 -63.3,0 0,3 z m 2.3,6.4 0,-3 -67.7,0 0,3 z m -6.2,-40.7 2.4,0 0,-3.2 -7.9,0 0,3.2 2.1,0 -0.6,25.5 -1.5,0 0,3.8 7.9,0 0,-3.8 -1.5,0 z m -14.6,-3.2 -7.6,0 0,3.2 2.2,0 -0.9,25.4 -1.3,0 0,3.8 7.6,0 0,-3.8 -1.4,0 -0.7,-25.5 2.1,0 z m -20.8,3.1 2.3,0 0,-3.2 -7.8,0 0,3.2 2.3,0 -0.8,25.4 -1.5,0 0,3.8 7.8,0 0,-3.8 -1.7,0 z m -22.5,25.5 0,3.8 8,0 0,-3.8 -1.5,0 -0.8,-25.5 2.3,0 0,-3.2 -8,0 0,3.2 2.4,0 -0.9,25.5 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 74.1,83.6 h 51.6 C 124.3,82.7 100,70.7 99.8,70.7 99.6,70.7 74.9,83 74.1,83.6 l 0,0 z"}],t["GR.IN.IC.MILITARY INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"m 65.2,93.1 c 0,-0.5 15.6,-11.5 17.3,-12.8 1.5,-1.2 17.3,-12.6 17.4,-12.6 0.6,0 15.9,11.2 17.6,12.5 1.7,1.3 17.3,12.4 17.3,12.9 0,0 -6.1,18.6 -6.7,20.3 -1.2,3.4 -2.2,6.8 -3.4,10.3 -1,3 -2.7,7.2 -3.3,10 H 78.4 c -0.1,-1.7 -5.6,-18 -6.5,-20.4 -0.6,-1.4 -6.6,-20.1 -6.6,-20.1 z m 8.4,38.5 2,6.1 49,0 8.4,-26.4 6.6,-20.5 -39.7,-28.7 -39.6,28.8 13.3,40.6 0,0 z M 100,76.2 c 2.7,2.4 26.6,18.7 26.6,19.6 0,0.8 -4.1,12.7 -4.5,13.4 l -5.6,17.4 -32.5,0 c -0.9,0 -3,-7.4 -3.5,-8.7 -0.6,-1.8 -2.9,-7.8 -2.9,-9.4 L 74.3,98.9 73.5,95.5 100,76.2 z m 30.5,18 c -3.1,-2.1 -30,-22.2 -30.7,-22.2 -0.1,0 -13.8,10.1 -15.2,11.1 -2,1.4 -14.3,10.7 -15.2,10.9 v 0.7 c 0,1 2.9,7 2.9,9.3 l 8.7,26.3 37.7,0 5,-15.7 6.6,-20.4 z m -50.4,3.2 c 0.8,-0.2 8.6,-6.1 10,-7 1.2,-0.8 9.5,-7.1 10,-7.1 0,0 9,6.5 10,7.2 1.2,0.8 9.7,6.5 9.7,7.3 0,1.2 -0.4,2 -0.9,2.7 0,1.6 -2.6,8.7 -3.3,10.6 -0.5,1.4 -2.8,10.1 -3.7,10.1 H 88.1 c -0.7,0 -1.8,-4 -2,-4.8 -0.6,-1.7 -1.2,-3.3 -1.7,-5.1 -0.6,-2.1 -3.1,-8.7 -3.1,-10.3 l -0.3,0.1 -0.9,-3.7 z m -3.2,-0.7 8.8,27 28.2,-0 8.7,-27.2 c -3.2,-1.7 -21.7,-16.3 -22.9,-16.3 -0.3,0 -20.6,15 -22.9,16.6 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 77,96.8 c 2.3,-1.5 22.6,-16.6 22.9,-16.6 1.2,0 19.7,14.6 22.9,16.3 l -8.7,27.2 -28.3,0 -8.8,-27 z m -3.6,-1.3 0.9,3.4 3.4,9.7 c 0,1.5 2.3,7.6 2.9,9.4 0.4,1.3 2.5,8.7 3.5,8.7 l 32.5,-0 5.5,-17.4 c 0.4,-0.6 4.5,-12.6 4.5,-13.4 0,-1 -23.9,-17.2 -26.6,-19.6 L 73.5,95.5 z m 6.7,2 0.9,3.7 0.3,-0.1 c 0,1.6 2.4,8.2 3.1,10.3 0.5,1.8 1.1,3.4 1.7,5.1 0.2,0.8 1.3,4.8 2,4.8 h 23.8 c 1,0 3.3,-8.6 3.7,-10.1 0.6,-1.9 3.3,-9 3.3,-10.6 0.5,-0.7 1,-1.5 1,-2.7 0,-0.8 -8.5,-6.5 -9.7,-7.3 -1,-0.7 -9.9,-7.2 -10,-7.2 -0.5,0 -8.8,6.2 -10,7 -1.3,1 -9.2,6.8 -10,7.1 z m 43.8,17.1 -5,15.7 -37.7,-0 -8.7,-26.3 c 0,-2.3 -2.9,-8.3 -2.9,-9.3 v -0.7 c 1,-0.2 13.2,-9.5 15.2,-10.9 1.4,-1 15.1,-11.1 15.2,-11.1 0.7,0 27.6,20 30.7,22.2 l -6.6,20.4 z M 65.2,93.1 c 0,0 6,18.7 6.6,20.1 1,2.4 6.4,18.7 6.5,20.4 h 43.1 c 0.6,-2.8 2.3,-7 3.3,-10 1.2,-3.5 2.1,-6.8 3.4,-10.3 0.6,-1.7 6.7,-20.2 6.7,-20.3 0,-0.5 -15.6,-11.5 -17.3,-12.9 C 115.8,79 100.5,67.7 99.9,67.7 99.8,67.7 84.1,79.2 82.5,80.3 80.8,81.6 65.2,92.7 65.2,93.1 z"}],t["GR.IN.IC.POSTAL SERVICE INFRASTRUCTURE"]=[{type:"path",stroke:!1,d:"M 64.3,86.6 99.9,102.1 135.7,86.6 v 31.8 H 64.3 v -31.8 l 0,0 z m 62.5,1.9 c -3.1,1.2 -5.9,2.6 -9,3.9 -2.2,0.9 -17.1,7.7 -18,7.7 -0.5,0 -15.8,-7 -17.8,-7.8 -3,-1.2 -5.9,-2.8 -8.8,-3.9 -2.3,-0.9 -6.8,-3.4 -8.8,-3.8 v -3.2 h 71.5 v 3.2 c -2.1,0.4 -6.6,2.9 -9,3.9 z m -64.1,31.7 h 74.7 V 79.8 H 62.7 v 40.4 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 64.3,86.6 0,31.8 71.5,0 0,-31.8 -35.8,15.5 z m 0,-2 c 2,0.5 6.5,3 8.8,3.8 2.9,1.1 5.8,2.7 8.8,3.9 2,0.8 17.3,7.8 17.8,7.8 0.9,0 15.9,-6.8 18,-7.7 3.1,-1.3 5.9,-2.6 9,-3.9 2.4,-1 6.9,-3.4 9,-3.9 V 81.4 H 64.3 v 3.2 l 0,0 z"}],t["GR.IN.IC.POSTAL DISTRIBUTION CENTER"]=[{type:"path",stroke:!1,d:"M 64.3,94.6 99.9,110.1 135.7,94.6 V 126.4 H 64.3 l 4e-4,-31.8 0,0 z m 62.5,1.9 c -3.1,1.2 -5.9,2.6 -9,3.9 -2.2,0.9 -17.1,7.7 -18.1,7.7 -0.5,0 -15.7,-6.9 -17.8,-7.8 -3,-1.2 -5.9,-2.8 -8.8,-3.9 -2.3,-0.9 -6.8,-3.4 -8.8,-3.9 v -3.2 h 71.5 v 3.2 c -2.1,0.5 -6.6,2.9 -9,3.9 z M 62.7,128.2 h 74.7 V 87.8 H 62.7 v 40.5 z m 66.1,-54.4 -5.4,0 0,13.3 -2,0 0,-13.3 -5.4,0 0,-1.8 12.8,0 0,1.8 m -14,9 c -1e-5,0.6 -0.1,1.2 -0.4,1.7 -0.3,0.6 -0.7,1.1 -1.1,1.5 -0.5,0.4 -1.2,0.8 -1.9,1 -0.7,0.2 -1.6,0.4 -2.6,0.4 -1.1,0 -2.1,-0.1 -2.9,-0.3 -0.9,-0.2 -1.8,-0.5 -2.7,-0.9 l 0,-2.5 0.1,0 c 0.8,0.6 1.6,1.1 2.7,1.5 1,0.3 1.9,0.5 2.8,0.5 1.2,10e-7 2.2,-0.2 2.9,-0.7 0.7,-0.5 1,-1.1 1,-1.9 -1e-5,-0.7 -0.2,-1.2 -0.5,-1.5 -0.3,-0.3 -0.8,-0.6 -1.5,-0.7 -0.5,-0.1 -1.1,-0.2 -1.7,-0.3 -0.6,-0.1 -1.2,-0.2 -1.9,-0.3 -1.3,-0.3 -2.3,-0.8 -3,-1.5 -0.6,-0.7 -1,-1.6 -1,-2.7 0,-1.3 0.5,-2.3 1.6,-3.1 1.1,-0.8 2.4,-1.2 4.1,-1.2 1.1,1.6e-5 2,0.1 2.9,0.3 0.9,0.2 1.7,0.5 2.4,0.8 l 0,2.4 -0.1,0 c -0.6,-0.5 -1.3,-0.9 -2.3,-1.2 -0.9,-0.3 -1.9,-0.5 -2.9,-0.5 -1.1,1.3e-5 -1.9,0.2 -2.6,0.7 -0.7,0.4 -1,1 -1,1.7 -1e-5,0.6 0.2,1.1 0.5,1.5 0.3,0.4 0.9,0.6 1.7,0.8 0.4,0.1 1,0.2 1.8,0.3 0.8,0.1 1.5,0.3 2,0.4 1.1,0.3 2,0.7 2.5,1.4 0.6,0.6 0.9,1.4 0.9,2.5 m -14.4,4.3 -6,0 0,-1.5 2,0 0,-12 -2,0 0,-1.5 6,0 0,1.5 -2,0 0,12 2,0 0,1.5 m -8.6,-7.5 c -1.5e-5,1.4 -0.3,2.6 -0.9,3.7 -0.6,1.1 -1.4,2 -2.4,2.6 -0.7,0.4 -1.5,0.7 -2.3,0.9 -0.8,0.2 -2,0.3 -3.4,0.3 l -3.8,0 0,-15.1 3.8,0 c 1.5,1.5e-5 2.6,0.1 3.5,0.3 0.9,0.2 1.6,0.5 2.2,0.9 1,0.6 1.8,1.5 2.4,2.6 0.6,1.1 0.9,2.3 0.9,3.8 m -2.1,-0 c -1.2e-5,-1.2 -0.2,-2.2 -0.6,-3 -0.4,-0.8 -1,-1.5 -1.8,-1.9 -0.6,-0.3 -1.2,-0.6 -1.9,-0.7 -0.7,-0.1 -1.5,-0.2 -2.4,-0.2 l -1.9,0 0,11.7 1.9,0 c 1,2e-6 1.8,-0.1 2.5,-0.2 0.7,-0.1 1.4,-0.4 2,-0.8 0.8,-0.5 1.3,-1.1 1.7,-1.9 0.4,-0.8 0.6,-1.8 0.6,-2.9"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 126.8,96.5 c -3.1,1.2 -5.9,2.6 -9,3.9 -2.2,0.9 -17.1,7.7 -18.1,7.7 -0.5,0 -15.7,-6.9 -17.8,-7.8 -3,-1.2 -5.9,-2.8 -8.8,-3.9 -2.3,-0.9 -6.8,-3.4 -8.8,-3.9 v -3.2 h 71.5 v 3.2 c -2.1,0.5 -6.6,2.9 -9,3.9 z m -62.5,-1.9 35.6,15.5 35.8,-15.5 V 126.4 H 64.3 l 4e-4,-31.8 0,0 z"}],t["GR.IN.IC.POST OFFICE"]=[{type:"path",stroke:!1,d:"m 74.7,92.8 24.9,10.8 L 124.7,92.8 V 115.1 H 74.7 V 92.8 l 0,0 z m 43.7,1.3 c -2.2,0.9 -4.1,1.8 -6.3,2.7 -1.5,0.6 -12,5.4 -12.6,5.4 -0.4,0 -11,-4.9 -12.5,-5.4 -2.1,-0.8 -4.1,-1.9 -6.2,-2.7 -1.6,-0.6 -4.8,-2.4 -6.2,-2.7 v -2.2 h 50 v 2.3 c -1.5,0.3 -4.6,2 -6.3,2.7 z M 73.6,116.4 H 125.8 V 88.1 H 73.6 V 116.4 z M 99.8,64.3 c 0.2,0 35.5,19.8 37.1,21.2 h -4.8 v 38.6 h -63.9 v -38.6 h -4.9 c 1.6,-1.4 6.9,-4.1 9.1,-5.3 3.1,-1.8 6,-3.4 9.1,-5.3 1.6,-1 18.3,-10.6 18.4,-10.6 z m -43.3,23.1 9.9,-0.2 v 38.4 h 67.4 v -38.4 l 9.9,0.2 c -0.5,-0.6 -43.6,-25 -43.9,-25 -0,0 -19.5,11.4 -21.7,12.5 -3.5,1.8 -7.4,4.2 -10.9,6.2 -2.7,1.6 -8.8,4.6 -10.8,6.3 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"M 99.8,64.3 C 99.8,64.3 83.1,73.9 81.5,74.9 c -3,1.8 -6,3.5 -9.1,5.3 -2.2,1.2 -7.5,4 -9.1,5.3 l 4.9,0 0,38.6 63.9,0 0,-38.7 4.8,0 c -1.6,-1.4 -36.9,-21.2 -37.1,-21.2 z M 73.6,88.1 l 52.3,0 0,28.3 -52.3,0 0,-28.3 z m 44.9,6.1 c -2.2,0.9 -4.1,1.8 -6.3,2.7 -1.5,0.6 -12,5.4 -12.6,5.4 -0.4,0 -11,-4.9 -12.5,-5.4 -2.1,-0.8 -4.1,-1.9 -6.2,-2.7 -1.6,-0.6 -4.8,-2.4 -6.2,-2.7 v -2.2 h 50 v 2.3 c -1.5,0.3 -4.6,2 -6.3,2.7 z M 74.7,92.8 99.6,103.7 124.7,92.8 V 115.1 H 74.7 V 92.8 l 0,0 z"}],t["GR.IN.IC.ENCLOSED FACITLITY (PUBLIC VENUE)"]=[{type:"path",stroke:!1,d:"m 114.9,121.3 0,-1.2 -30.7,0 0,1.2 z m -31.9,-2.5 -10.4,-16.7 -1,0.4 10.6,16.6 z m 13,-13.8 h 7 c 0.6,0 4.4,-6 5,-6.8 H 91 c 0.6,0.9 4.4,6.8 5,6.8 z m 15.3,12 0,-1 -23.5,0 0,1 z m 2.4,-1.6 8.6,-13.6 -0.8,-0.4 -8.5,13.3 z M 76.8,101.9 c 0,0.3 3.7,5.9 4.2,6.7 0.4,0.6 4.2,6.7 4.3,6.7 0.4,0 0.5,-0.2 0.7,-0.5 l -8.5,-13.4 c -0.2,0.1 -0.7,0.2 -0.7,0.5 z m 31,10.8 0,-1 -16.5,0 0,1 z m -19.3,-1.2 0.7,-0.4 -6.7,-10.5 -0.7,0.4 z m 22.3,-0 6.4,-10.5 -0.8,-0.3 -6.6,10.5 z m -6.4,-3 0,-1 -9.7,0 0,1 z m 2.8,-1.8 c 0,0.6 0.3,0.6 0.7,0.6 l 4.2,-6.9 -0.6,-0.4 c -0.2,0.2 -4.3,6.6 -4.3,6.7 z m -20.3,-6.3 4.1,7 c 0.3,-0.1 0.8,-0.2 0.8,-0.5 0,-0.6 -3.7,-5.6 -4,-6.9 l -1,0.4 z m -19.7,18 0.3,-2.8 c 0.1,-3.9 2,-11.4 3,-14.6 1.6,-4.7 3.2,-8.3 5.6,-12 4.4,-6.5 12,-12.4 22.8,-12.4 h 1.1 c 9.6,0 17,4.8 21.3,10.2 1.2,1.5 2.3,2.8 3.2,4.6 0.5,0.9 1,1.6 1.4,2.6 0.4,0.9 0.7,1.9 1.1,2.7 0.8,1.4 3.6,10.3 3.6,12.1 v 0.6 h 0.3 v 1 l 1.2,10.8 -0.1,2.2 H 67 l 0.2,-5 0,0 z m -2.3,-4 -0.3,2.4 -0.4,5.6 v 3.8 h 70.9 v -1 c 0,-2 0.1,-6.4 -0.2,-8.1 -0.4,-2.4 -0.5,-5.2 -1,-7.5 -0.4,-2 -2.9,-12.7 -3.9,-13.1 0,-1.6 -3.5,-7.6 -4.3,-8.8 -1.8,-2.6 -3.8,-5 -6.2,-7 -4.9,-3.9 -10.5,-7 -19.3,-7 h -1 c -11.8,0 -19.6,5.9 -24.6,12.8 -1.4,1.9 -2.4,3.8 -3.5,5.9 -1.2,2.3 -1.7,4.2 -2.6,6.7 -1.2,3 -3.4,11.4 -3.5,15.3 l 0,0 z m 52.2,4.7 c 0.4,-1.3 4.2,-6.6 5.2,-8.3 0.6,-1 5.1,-7.9 5.1,-8.2 0,-0.3 -0.6,-0.4 -0.8,-0.5 l -10.6,16.6 1.1,0.4 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 84.2,120.1 h 30.7 v 1.2 H 84.2 v -1.2 z m 3.6,-4.2 h 23.5 v 1 H 87.8 v -1 z m 3.5,-4.2 h 16.5 v 1 H 91.4 v -1 z m 3.3,-4.2 h 9.7 v 1 h -9.7 v -1 z m 22.4,11.5 -1.1,-0.4 10.6,-16.6 c 0.3,0.1 0.8,0.2 0.8,0.5 0,0.3 -4.6,7.2 -5.1,8.2 -1,1.8 -4.9,7 -5.2,8.3 z m -45.4,-16.6 1,-0.4 10.4,16.7 -0.8,0.4 -10.6,-16.6 z m 13.7,12.8 c -0.2,0 -4,-6 -4.3,-6.7 -0.5,-0.8 -4.2,-6.3 -4.2,-6.6 0,-0.3 0.4,-0.4 0.7,-0.5 l 8.5,13.3 c -0.2,0.3 -0.2,0.5 -0.7,0.5 z m 36.2,-13.8 0.8,0.4 -8.6,13.6 -0.8,-0.6 8.6,-13.4 z m -5.1,-0.6 0.8,0.3 -6.4,10.5 -1,-0.3 6.6,-10.5 z m -33.9,-0 6.7,10.5 -0.7,0.4 -6.7,-10.5 0.7,-0.4 z m 24.7,6 c 0,-0.1 4.1,-6.5 4.3,-6.7 l 0.6,0.4 -4.2,6.9 c -0.4,0 -0.7,-0.1 -0.7,-0.6 z m -19.4,-6.7 c 0.3,1.3 4,6.3 4,6.9 0,0.3 -0.6,0.4 -0.8,0.5 l -4.1,-7 1,-0.4 z m 8.2,4.9 c -0.6,0 -4.4,-6 -5,-6.8 h 17 c -0.6,0.8 -4.4,6.8 -5,6.8 h -7 z m -28.5,10.7 c 0,0.5 -0,2.8 -0.3,2.8 l -0.2,5 h 65.2 l 0.1,-2.2 -1.2,-10.8 v -1 h -0.3 v -0.6 c 0,-1.8 -2.8,-10.6 -3.6,-12.1 -0.4,-0.8 -0.7,-1.8 -1.1,-2.7 -0.5,-1 -1,-1.6 -1.5,-2.6 -0.9,-1.8 -2,-3.1 -3.2,-4.6 -4.2,-5.4 -11.6,-10.2 -21.3,-10.2 h -1 c -10.8,0 -18.5,5.8 -22.8,12.4 -2.5,3.8 -4.1,7.4 -5.7,12 -1.1,3.2 -3,10.7 -3,14.6 l 0,0 z"}],t["GR.IN.IC.OPEN FACILITY (OPEN VENUE)"]=[{type:"path",stroke:!1,d:"m 122.4,117.1 0,-1.5 -45.1,0 0,1.5 z M 74.5,114 75.6,113.4 59.8,88.8 58.8,89.4 z m 49.6,-0.6 c 0.2,0.1 1,0.5 1.3,0.5 0.2,0 14.4,-22.4 15.9,-24.6 l -1.5,-0.5 -15.7,24.6 z m -6.6,-2.6 0,-1.7 -35,0 0,1.7 z m 2.4,-3.2 c 0,0.2 1,0.8 1.1,0.9 l 12.8,-20 h 0.2 l -1.6,-0.8 c -1.3,2.4 -12.6,19.3 -12.6,20 z m -41.1,0.9 1.4,-0.8 -12.7,-20.1 -1.3,0.8 z m 33.3,-3.9 0,-1.6 -24.4,0 0,1.6 z m 3.4,-2.8 c 0,0.6 0.6,0.7 1.1,0.9 l 9.6,-15.4 -1.2,-0.6 c -0.6,2 -9.4,14.5 -9.4,15.2 z m -32.2,1 1.4,-0.6 -9.7,-15.5 -1.3,0.8 z m 23.4,-4.5 0,-1.7 -13.8,0 0,1.7 z m 5.6,-1.7 6.4,-10.3 -1.2,-0.5 -6.6,10.2 z m -24.6,0.1 1.1,-0.8 -6.5,-10.2 -1.3,0.6 z m 6.6,-4 11,0.1 c 0.6,0 6.4,-8.9 7,-10 H 87.3 l 6.9,9.9 z"}],t["GR.IN.IC.RELIGIOUS INSTITUTION"]=[{type:"path",stroke:!1,d:"m 101.2,68.1 c 7.9,0 18,3.8 21.7,8 5,5.7 7,12.3 7,22.8 V 131.9 H 101.2 V 68.1 z M 70.1,96.3 c 0,-8.4 3.4,-16.4 7.7,-20.7 3.9,-3.9 13.2,-7.5 20.9,-7.5 v 63.9 H 70.1 V 96.3 z m -2.6,38.3 h 65 V 99.3 c 0,-10.8 -2.5,-19.7 -8.1,-25.2 -4.8,-4.8 -15,-8.7 -24.6,-8.7 -8.3,0 -19.4,3.7 -23.6,7.9 -3.2,3.3 -4.3,5 -6.2,9.5 -1,2.4 -2.5,10 -2.5,13.2 v 38.5 l 0,0 z M 105.1,97.6 v 12.5 c 0,0.5 0.6,1.1 1.1,1.1 h 0.4 c 0.7,0 1.1,-0.8 1.1,-1.5 V 97.8 c 0,-0.5 -0.6,-1.1 -1.1,-1.1 H 106 c -0.5,0 -0.9,0.4 -0.9,0.9 z m -11.2,13.6 c 0.8,0 0.9,-1 0.9,-1.7 V 97.6 c 0,-0.5 -0.4,-0.9 -0.9,-0.9 h -0.6 c -0.5,0 -0.9,0.4 -0.9,0.9 v 12.5 c 0,0.5 0.6,1.1 1.1,1.1 h 0.4 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 105.1,97.6 c 0,-0.5 0.4,-0.9 0.9,-0.9 h 0.7 c 0.5,0 1.1,0.6 1.1,1.1 v 11.8 c 0,0.7 -0.4,1.5 -1.1,1.5 h -0.5 c -0.5,0 -1.1,-0.6 -1.1,-1.1 V 97.6 h 0 z m -3.9,34.4 h 28.7 V 98.9 c 0,-10.5 -2,-17.1 -7,-22.8 C 119.2,71.9 109.1,68.1 101.2,68.1 v 63.9 z M 94,111.2 H 93.5 c -0.5,0 -1.1,-0.6 -1.1,-1.1 V 97.6 c 0,-0.5 0.4,-0.9 0.9,-0.9 h 0.7 c 0.5,0 0.9,0.4 0.9,0.9 v 11.8 c 0,0.8 -0.1,1.8 -0.9,1.8 z M 70.1,96.3 v 35.7 H 98.8 V 68.1 c -7.7,0 -17,3.6 -20.9,7.5 -4.3,4.3 -7.7,12.3 -7.7,20.7 z"}],t["GR.IN.IC.CHILD DAY CARE"]=[{type:"path",stroke:!1,d:"m 76.6,100.3 c 0,1.8 1.1,3.4 3,3.4 h 0.6 c 1.4,0 2.4,-1.5 2.4,-3 0,-4.3 -6,-4.2 -6,-0.4 z m 26.5,-11.9 v 0.4 c 0,1.5 1.4,3.2 2.8,3.2 h 0.4 c 1.6,0 3,-1.2 3,-2.8 V 87.8 c 0,-1 -1.6,-2 -2.8,-2 h -0.2 c -1.5,-0 -3.2,1.4 -3.2,2.6 z m -3.2,-16.8 35.4,21.7 c -1.3,0.2 -4.6,-0.3 -4.6,0.9 v 34.9 H 69.3 V 94.1 c 0,-1.2 -3.3,-0.8 -4.6,-0.9 l 35.2,-21.7 0,0 z m -39.8,22.4 c 0.2,0.8 0.3,1.3 1.3,1.3 h 6.2 v 34.6 c 0,0.5 0.1,0.5 0.2,0.9 h 64 c 0.4,0 0.8,-0.3 0.8,-0.8 V 95.2 h 6 c 0.8,0 1.3,-0.4 1.3,-1.1 0,-0.6 -17.8,-11.2 -19.8,-12.5 -1.6,-1 -20,-12.3 -20,-12.3 -0.2,0 -36.7,22.5 -40,24.7 l 0,0 z m 20.9,14.2 5.9,4.3 -0.1,0.1 -4.8,2.2 c -0.2,-0.8 -1,-1.9 -1,-2.5 v -4.1 z m 28.4,-8.8 c 0.5,-0.8 0.6,-2.9 1,-3.1 0.4,-0.2 2.4,0.8 2.9,0.9 v 3.6 l -4.4,1.7 v -0.6 c -0,-0.9 0.5,-1 0.5,-2.4 z m -3,2 c 0,0.9 0,1.1 -0.4,1.7 V 104 c -2.4,0.2 -15.4,7.5 -17,7.5 -0.5,0 -6.5,-6.7 -7.3,-6.7 h -4.3 c -0.5,0 -2.8,5.2 -2.8,5.6 v 4.7 c 0,0.9 1.8,1.4 2,2.4 l -4.1,1.7 1.3,2.6 6.2,-2.8 c 1.5,0.8 9.3,5.6 10.5,5.6 h 0.6 c 0.8,0 1.9,-0.8 1.9,-1.5 v -0.4 c 0,-0.9 -7.3,-4.8 -8.4,-5.8 l 14,-6.3 v 8.4 h -3 v 6.7 h 8.4 v -6.7 h -2.8 v -9.9 l 13.2,-5.8 c 0,1.6 0.2,3.7 0.4,5.1 0.2,1.8 -0.6,3.9 1.5,3.9 2.1,0 1.3,-2.5 1.3,-4.3 0,-1.9 -0.2,-3.5 -0.2,-5.6 v -0.6 l 9.1,-4 -1,-2.9 -6.2,2.8 c 0.3,-0.6 0.7,-0.8 1,-1.4 0.2,-0.7 0.4,-1.2 0.7,-1.8 0.5,-1 0.9,-2.6 1.4,-3.4 l -11.4,-1.6 c -0.6,0.5 -3.2,3.3 -3.2,4.2 v 0.6 h -0.4 l -1.1,7.1 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 81,112.2 c 0,0.6 0.8,1.7 1,2.5 l 4.8,-2.2 0.2,-0.1 -6,-4.3 v 4.1 z m 28.4,-12.9 c 0,1.4 -0.6,1.6 -0.6,2.4 v 0.6 l 4.5,-1.7 v -3.6 c -0.5,-0.1 -2.6,-1 -2.9,-0.9 -0.4,0.2 -0.5,2.4 -1,3.1 z m -32.9,0.9 c 0,-3.9 6,-4 6,0.4 0,1.4 -1.1,3 -2.4,3 h -0.5 c -1.8,0 -3,-1.6 -3,-3.4 z m 29.5,2.8 0.4,-1.7 1.1,-7.1 h 0.4 v -0.6 c 0,-0.8 2.6,-3.7 3.2,-4.2 l 11.4,1.6 c -0.5,0.8 -0.9,2.4 -1.4,3.4 -0.3,0.6 -0.4,1.1 -0.7,1.8 -0.3,0.7 -0.7,0.8 -1,1.4 l 6.2,-2.8 1,2.9 -9.1,4 v 0.6 c 0,2.1 0.2,3.7 0.2,5.6 0,1.8 0.8,4.3 -1.3,4.3 -2.1,0 -1.3,-2.2 -1.5,-3.9 -0.2,-1.4 -0.4,-3.5 -0.4,-5.1 l -13.2,5.8 v 9.9 h 2.8 v 6.7 h -8.4 v -6.7 h 3 v -8.4 l -14,6.3 c 1.1,0.9 8.4,4.9 8.4,5.8 v 0.4 c 0,0.7 -1,1.5 -1.9,1.5 H 90.6 c -1.2,0 -8.9,-4.8 -10.5,-5.6 l -6.2,2.8 -1.3,-2.6 4.1,-1.7 c -0.3,-1 -2,-1.5 -2,-2.4 v -4.6 c 0,-0.4 2.3,-5.6 2.8,-5.6 h 4.3 c 0.8,0 6.8,6.7 7.3,6.7 1.5,0 14.6,-7.3 17,-7.5 v -0.9 z m -3,-14.8 c 0,-1.2 1.7,-2.6 3.2,-2.6 h 0.2 c 1.2,0 2.8,1.1 2.8,2 v 1.3 c 0,1.6 -1.4,2.8 -3,2.8 h -0.4 c -1.4,0 -2.8,-1.7 -2.8,-3.2 v -0.4 z m -38.4,4.9 c 1.3,0.1 4.6,-0.3 4.6,0.8 v 34.9 h 61.4 V 94.1 c 0,-1.2 3.3,-0.8 4.6,-0.9 l -35.4,-21.7 -35.2,21.8 0,0 z"}],t["GR.IN.IC.HELICOPTER LANDING SITE"]=[t["AR.I.FF.CIVILIAN ROTARY WING"],{type:"circle",fill:!1,cx:100,cy:100,r:40}],t["GR.IN.IC.TRANSPORTATION INFRASTRUCTURE LOCK"]=[{type:"path",fill:!1,d:"m 70,70 65,30 -65,30"}],t["GR.IN.IC.TRANSPORTATION INFRASTRUCTURE SHIP ANCHORAGE"]=[{type:"path",fill:!1,stroke:"rgb(255, 0, 255)",d:"m 73.6,112.8 c 0.8,8 26.4,11.2 26.4,11.2 0,0 25.6,-3.2 26.4,-11.2 M 80,88 l 40,0 m -20,-12 0,48"}],t["GR.IN.IC.NATURAL GAS FACILITY"]=[{type:"path",stroke:!1,d:"M 99.5,57 C 82.9,56.8 69.7,69.5 65.9,84.4 62.1,99 67.7,115.9 87,124.3 l 0,12.8 c 0,1.6 1,2.4 1.9,2.9 0.8,0.6 1.8,1 2.9,1.3 1.6,0.6 3.5,0.9 5.3,1.2 l 0,0.5 2,0 c 0.4,0 0.6,-0 0.9,-0.1 0.1,0 0.2,-0 0.3,0 0.2,0 0.5,0.1 0.9,0.1 l 2,0 0,-0.5 c 1.8,-0.3 3.6,-0.6 5.3,-1.2 1.1,-0.4 2,-0.8 2.9,-1.3 0.8,-0.6 1.9,-1.4 1.9,-2.9 L 113,124.3 c 19.5,-8.4 25,-25.4 21.1,-40 -4,-14.9 -17.3,-27.6 -34,-27.2 -0,-6.4e-5 -0.1,0 -0.1,0 -0.1,-0 -0.1,-0 -0.4,-0 z m -0.1,4 C 99.5,61 99.6,61 99.9,61 l 0.1,0 0.1,0 c 14.7,-0.4 26.6,10.9 30.1,24.3 3.6,13.3 -0.9,28.3 -19.9,35.9 l -1.3,0.5 0,1.3 0,13.5 c -0,0 -0,0 -0.1,0.1 -0.4,0.3 -1.1,0.6 -2,0.9 -1.8,0.6 -4.2,1.1 -6.1,1.3 l -0.6,0.1 c -0,-0 -0,0 -0.1,0 l -0.1,0 -0.1,0 c -0,0 -0.1,-0 -0.1,0 l -0.6,-0.1 c -1.9,-0.2 -4.3,-0.7 -6.1,-1.3 -0.9,-0.3 -1.6,-0.7 -2,-0.9 -0.1,-0.1 -0.1,-0 -0.1,-0.1 l 0,-13.5 0,-1.3 -1.3,-0.5 C 70.8,113.6 66.3,98.7 69.8,85.4 73.2,72.1 85,60.8 99.5,61 z m 26.8,44.1 c -1.4,0.7 -3,1.2 -4.7,1.7 -1.7,0.5 -3.3,0.7 -4.9,0.7 -2,-10e-6 -3.9,-0.3 -5.6,-0.8 -1.7,-0.6 -3.1,-1.4 -4.3,-2.5 -1.2,-1.1 -2.1,-2.6 -2.8,-4.3 -0.7,-1.7 -1,-3.7 -1,-6 0,-4.2 1.2,-7.5 3.7,-9.9 2.4,-2.4 5.8,-3.6 10.1,-3.6 1.5,2.7e-5 3,0.2 4.6,0.5 1.6,0.4 3.2,1 5,1.8 l 0,4.1 -0.3,0 c -0.4,-0.3 -0.9,-0.7 -1.6,-1.1 -0.7,-0.5 -1.4,-0.8 -2,-1.1 -0.8,-0.4 -1.7,-0.7 -2.8,-0.9 -1,-0.2 -2.2,-0.4 -3.5,-0.4 -2.9,2.4e-5 -5.3,0.9 -7,2.8 -1.7,1.9 -2.5,4.4 -2.5,7.6 -1e-5,3.4 0.9,6 2.7,7.9 1.8,1.9 4.2,2.8 7.3,2.8 1.1,0 2.2,-0.1 3.4,-0.3 1.1,-0.2 2.1,-0.5 3,-0.9 l 0,-6.4 -7,0 0,-3.1 10.5,0 0,11.2 m -28.8,1.9 -4.3,0 -12.4,-23.4 0,23.4 -3.3,0 0,-26.2 5.4,0 11.3,21.4 0,-21.4 3.3,0 0,26.2"
}],t["GR.IN.IC.TOLL FACILITY"]=[{type:"path",stroke:!1,d:"m 69.1,112.3 c 0,-0.7 0.8,-1.7 1.4,-1.7 h 0.5 c 0.8,0 1.5,0.8 1.5,1.5 v 1.2 c 0,0.5 -0.9,1.2 -1.5,1.2 h -0.2 c -0.8,0 -1.7,-0.8 -1.7,-1.4 v -0.9 l 0,0 z m -1.1,0.5 v 0.3 c 0,1.2 1.5,2.6 2.9,2.6 1.3,0 2.8,-1.5 2.8,-2.5 v -1 c 0,-1.2 -1.4,-2.6 -2.8,-2.6 -1.7,0 -2.9,1.6 -2.9,3.2 z m 27.6,-11.6 -2,-2.8 -2.3,0 4.3,2.8 z m -29.5,17.8 c 0,-0.5 0.8,-0.9 1.4,-0.9 H 99.1 c 0.8,0 1.3,0.6 1.4,1.4 -0.6,0.1 -1,0.3 -1.7,0.3 H 68 c -0.6,0 -1.8,0 -1.8,-0.6 v -0.2 z m 9.4,-10.2 15.1,0 8.2,0.2 c 0.5,0.9 2,3 1.8,4.3 l -0.2,2.6 c -0.5,0.2 -0.5,0.3 -1,0.3 H 67.1 c -0.6,0 -0.5,-0.2 -1.1,-0.3 -0.1,-0.7 -0.3,-1 -0.3,-1.8 v -0.6 c 0,-1.1 1.5,-3.5 2,-4.4 l 7.8,-0.2 z m -5.8,-2 c 0.1,-1.1 3.5,-7.1 4.3,-7.1 h 18.4 c 1,0 4,5.8 4.3,7.1 H 69.7 z m 21.7,-8.4 2.3,-0 2,2.8 -4.3,-2.8 z m 44.3,27.8 V 73.8 c -1,0.2 -10.3,6 -11.9,7 -1.3,0.8 -11.6,6.5 -11.6,7.2 0,0 1.3,2.1 1.4,2.3 l 4.9,-2.8 v 19.2 l -0.4,0.3 c -2.9,-2 -33.4,-22 -33.6,-22 -0.1,0 -3.9,5.6 -4,6.2 l 10.8,7 -18.3,0 c -0.9,1.4 -1.9,2.4 -2.8,3.8 -0.2,0.3 -2,4.4 -2,4.6 v 0.8 h -1.2 c -0.1,0.9 -2.6,4.6 -2.6,5.4 v 0.8 c 0,1.5 0.4,2.9 1.4,3.4 -0.2,0.3 -1,1.1 -1,1.6 v 0.9 c 0,1.1 1.5,1.5 2.6,1.5 v 2.3 l 0.2,2 c 0.5,0.2 0.3,0.5 1.2,0.6 0.6,0.1 1,0.2 1.7,0.2 h 1.1 l 1.7,-0.2 0.3,-0.3 0.2,-2 0,-2.5 h 19.1 v 3.1 c 0,0.8 0.3,1.2 0.6,1.7 l 1.4,0.2 1.2,-0 c 1.7,0 3.1,-0.1 3.1,-1.8 v -3.1 c 0.8,-0.2 2.6,-0.5 2.6,-1.4 v -1.7 c 0,-0.5 -0.5,-0.7 -0.9,-0.8 0.1,-0.5 1.2,-1.1 1.2,-2.5 v -2 c 0,-1.5 -2.1,-4.1 -2.5,-5.4 h -1.2 v -0.4 c 0,-1.1 -2.2,-4.8 -2.5,-5.8 l 19,12.5 c -0.4,1.6 -2,4 -2,5.2 v 7.2 h 22.9 l 0,0 z M 95.9,114.6 H 95.7 c -1.1,0 -1.8,-0.7 -1.8,-1.7 v -0.5 c 0,-1 0.6,-1.8 1.5,-1.8 h 0.5 c 1,0 1.5,1.1 1.5,2 0,1.1 -0.5,2 -1.5,2 z m -3.1,-2.5 v 1.1 c 0,1 1.6,2.5 2.9,2.5 1.4,0 2.6,-1.3 2.6,-2.8 v -0.8 c 0,-1.2 -1.3,-2.6 -2.5,-2.6 H 95.7 c -1.4,0 -2.9,1.4 -2.9,2.6 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 114.5,107.9 c 0,0.9 -0.8,1.6 -1.8,1.6 -1,0 -1.8,-0.7 -1.8,-1.6 0,-0.9 0.8,-1.6 1.8,-1.6 1,0 1.8,0.7 1.8,1.6 z m -11.2,-7.2 c 0,0.9 -0.8,1.6 -1.8,1.6 -1,0 -1.8,-0.7 -1.8,-1.6 0,-0.9 0.8,-1.6 1.8,-1.6 1,0 1.8,0.7 1.8,1.6 z m -5.5,-3.7 c 0,0.9 -0.8,1.6 -1.8,1.6 -1,0 -1.8,-0.7 -1.8,-1.6 0,-0.9 0.8,-1.6 1.8,-1.6 1,0 1.8,0.7 1.8,1.6 z M 108.9,104.5 c 0,0.9 -0.8,1.6 -1.8,1.6 -1,0 -1.8,-0.7 -1.8,-1.6 0,-0.9 0.8,-1.6 1.8,-1.6 1,0 1.8,0.7 1.8,1.6 z M 92.3,93.5 c 0,0.9 -0.8,1.6 -1.8,1.6 -1,0 -1.8,-0.7 -1.8,-1.6 0,-0.9 0.8,-1.6 1.8,-1.6 1,0 1.8,0.7 1.8,1.6 z M 86.5,89.8 c 0,0.9 -0.8,1.6 -1.8,1.6 -1,0 -1.8,-0.7 -1.8,-1.6 0,-0.9 0.8,-1.6 1.8,-1.6 1,0 1.8,0.7 1.8,1.6 z m 35.6,2.6 10.8,0 0,16.1 -10.8,0 z m -55.9,26.4 v 0.2 c 0,0.6 1.2,0.6 1.8,0.6 h 30.8 c 0.7,0 1.1,-0.2 1.7,-0.3 -0.1,-0.8 -0.6,-1.4 -1.4,-1.4 H 67.5 c -0.5,0 -1.4,0.4 -1.4,0.9 z m 26.6,-6.8 c 0,-1.2 1.5,-2.6 2.9,-2.6 h 0.2 c 1.2,0 2.5,1.4 2.5,2.6 v 0.8 c 0,1.4 -1.2,2.8 -2.6,2.8 -1.4,0 -2.9,-1.4 -2.9,-2.5 v -1 h -0 z m -24.8,0.6 c 0,-1.6 1.2,-3.2 2.9,-3.2 1.3,0 2.8,1.5 2.8,2.6 v 1.1 c 0,0.9 -1.4,2.5 -2.8,2.5 -1.4,0 -2.9,-1.4 -2.9,-2.6 v -0.3 z m -0.3,-3.8 c -0.5,1 -2,3.4 -2,4.4 v 0.6 c 0,0.9 0.2,1.1 0.3,1.8 0.5,0.1 0.5,0.3 1.1,0.3 h 32.3 c 0.6,0 0.5,-0.2 1,-0.3 l 0.2,-2.6 c 0.1,-1.2 -1.4,-3.4 -1.8,-4.3 l -8.2,-0.2 -15.1,-0 -7.8,0.2 z m 2,-2.2 h 27.1 c -0.4,-1.3 -3.3,-7.1 -4.3,-7.1 H 74 c -0.8,0 -4.2,6 -4.3,7.1 z m 26.2,7.8 c 1.1,0 1.5,-0.9 1.5,-2 0,-0.9 -0.6,-2 -1.5,-2 h -0.5 c -1,0 -1.5,0.8 -1.5,1.8 v 0.5 c 0,1 0.8,1.7 1.8,1.7 h 0.2 l 0,0 z M 69.1,112.3 v 0.9 c 0,0.6 1,1.4 1.7,1.4 h 0.2 c 0.6,0 1.5,-0.8 1.5,-1.2 v -1.2 c 0,-0.8 -0.8,-1.5 -1.5,-1.5 h -0.5 c -0.6,0 -1.4,1 -1.4,1.7 z"}],t["GR.IN.IC.TRAFFIC INSPECTION FACILITY"]=[{type:"path",stroke:!1,d:"m 121.4,81.7 h 1.1 v 0.6 c 0,0.6 0.8,2.1 1.2,2.4 0.5,0.4 1.9,0.9 2.7,0.9 2.6,0 3.9,-1.9 3.9,-4.5 v -0.5 h -7.4 c -0.5,0 -1.2,0.8 -1.4,1.1 z m -22.6,23.5 c 0,-1.7 1.7,-3 3.4,-3 1.7,0 3.1,1.4 3.1,3.1 v 0.6 c 0,1.3 -1.7,2.6 -3.1,2.6 -1.7,0 -3.4,-1.3 -3.4,-3 v -0.5 z m -29.7,0 c 0,-1.8 1.3,-3 3.1,-3 1.7,0 3.3,1.4 3.3,3.1 v 0.3 c 0,1.6 -1.6,3 -3.4,3 -1.5,0 -3,-1.2 -3,-2.6 v -0.8 z m 3.7,-7 c 0,-0.4 1.6,-4.2 1.9,-5 0.6,-1.7 0.9,-3.6 3.3,-3.6 H 96.5 c 2.8,0 2.2,1.8 3.2,3.6 0.2,0.4 1.8,4.5 1.8,4.9 H 72.8 z m -3.7,1 c -2.1,0 -3.7,1.5 -3.7,3.6 v 9.2 c 0,1 1.7,2.3 3.1,2.3 v 5.3 c 0,1.8 1.3,3.3 3.3,3.3 1.4,0 3.1,-1.6 3.1,-2.6 v -5.9 h 24.8 v 6.2 c 0,1 1.7,2.3 3,2.3 h 0.2 c 1.4,0 3.1,-1.3 3.1,-2.6 v -5.9 c 1.9,0 3.3,-1.4 3.3,-3.3 v -8.1 c 0,-2 -1.4,-3.3 -3.2,-3.7 -1.4,-0.2 -1.1,-0.8 -1.6,-1.9 -0.4,-0.8 -0.7,-1.6 -1,-2.4 -1.2,-2.6 -2.2,-8.2 -5.6,-8.2 h -21.2 c -2.9,0 -3.5,3.3 -4.5,5.5 -0.6,1.4 -2.7,5.8 -3,7 z m 56.5,20.2 0.3,-3.3 0.5,-6.2 h 1.7 l 0.8,12.9 h 5.8 V 88.9 c 0,-0.6 -1.2,-1.9 -2,-1.9 l -0.6,0.1 -9.9,14.6 h 8.4 v 3.6 h -11.2 v 17.6 h 6.1 l -0,-0.8 0.2,-2.6 z m -16.8,-30.8 c 0.2,-0.9 1,-1.5 2,-1.6 v 2.2 h -2 c 0,1.4 0.8,2.2 2.2,2.2 v -2 h 2 c -0,1.3 -0.8,1.4 -1.4,2 h 7.8 l 0,10.2 10,-14.3 -10.1,-0.2 h -6.4 v -7.6 c 0,-1.2 -0.8,-2.2 -1.9,-2.2 h -0.4 c -2.2,0 -2,2.4 -2,4.7 0,1.3 -0.4,5.8 0.2,6.6 z m 0,0 v 0.6 h 2 v -2.2 c -1.1,0 -1.8,0.7 -2,1.6 z m 2.2,2.8 h 0.6 c 0.6,-0.6 1.4,-0.7 1.4,-2 h -2 v 2 z m 19.3,-12 0,-2 -8.8,-0 1,2 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 130.3,79.4 -7.9,-0 0.4,1.3 7.5,0 z m -8.1,22.2 9.9,-14.6 0.6,-0.1 -3.1,0.2 -10,14.3 -0.1,3.7 11.2,0 0,-3.6 z m -23.3,3.6 v 0.5 c 0,1.7 1.7,3 3.4,3 1.4,0 3.1,-1.4 3.1,-2.6 v -0.6 c 0,-1.7 -1.4,-3.1 -3.1,-3.1 -1.8,0 -3.4,1.3 -3.4,3 z m -29.7,0 v 0.8 c 0,1.4 1.5,2.6 3,2.6 1.8,0 3.4,-1.3 3.4,-3 v -0.3 c 0,-1.6 -1.6,-3.1 -3.3,-3.1 -1.8,0 -3.1,1.2 -3.1,3 z m 3.7,-7 h 28.6 c 0,-0.5 -1.5,-4.5 -1.8,-4.9 -1,-1.8 -0.4,-3.6 -3.2,-3.6 H 77.9 c -2.4,0 -2.6,1.9 -3.3,3.6 -0.2,0.8 -1.8,4.6 -1.8,5 z"}],t["GR.IN.IC.TUNNEL"]=[{type:"path",stroke:!1,d:"m 94.4,116.8 c 0,-3.5 2.6,-7.2 5.9,-7.2 3.2,0 5.6,4 5.6,7.1 v 0.8 H 94.4 v -0.7 z m 27.2,-4.7 9,-4.2 c 0.2,1.7 0.8,3.2 1,5.2 0.3,1.8 0.6,3.3 0.6,5.6 v 0.5 h -10 l -0.7,-7.1 z m -43.5,4.9 0.1,2.2 H 68 c 0,-1.6 0.3,-3.8 0.6,-5.4 0.1,-0.7 0.2,-1.8 0.5,-2.4 0.1,-0.2 0.7,-2.2 0.7,-2.4 l 9.2,3.1 -0.8,4.9 z m 39,-16.8 6.2,-6.2 c 0.6,1 1.2,1.8 1.9,2.8 0.8,1.1 1.2,2 1.8,3.1 0.6,1 2.8,5.6 2.8,6.9 l -8.7,4.2 c -0.1,-2.5 -3,-9 -4,-10.6 z m -37.9,10.4 -9.1,-3 c 0.1,-1.2 2.4,-5.9 3,-7 1.2,-2.1 3,-4.2 4,-6 l 7.6,4.4 c -0.2,0.5 -2.6,4.3 -3,5.4 -0.8,1.7 -1.6,4.9 -2.4,6.2 z M 111.2,83.2 c 2.8,0.7 9.8,7.1 11.3,9.4 l -6.3,6.2 c -0.5,-1.8 -6,-6.9 -8.2,-7.4 l 3.2,-8.2 z M 78.1,93.4 C 79.7,91 88,83.8 91,83.1 L 94.9,91 c -2.6,0.6 -7.9,5 -9.2,6.9 l -7.6,-4.5 z M 92.6,82.4 c 2.6,-0.6 4.1,-1.8 7.8,-1.8 h 1.4 c 4,0 5.3,1.2 8.1,1.8 -0,1 -1.9,5.2 -2.3,6.3 -0.6,1.4 -0.4,2 -2.2,1.5 -1.1,-0.3 -2.4,-0.6 -3.6,-0.6 h -1 L 96.1,90.3 92.6,82.4 z M 66.5,119.8 H 60.4 c -0.4,0 -0.5,0.1 -0.5,0.5 v 0.2 c 0,0.4 0.1,0.5 0.5,0.5 h 79 c 0.3,0 0.7,-0.3 0.7,-0.5 0,-0.4 -0.3,-0.7 -0.7,-0.7 h -5.7 v -1.5 c 0,-10.1 -4.9,-20.4 -9.5,-25.9 C 119.8,87 111.6,79 102.2,79 h -2 c -9.7,0 -18.8,8.4 -23.6,13.7 -5,5.6 -10.1,16.6 -10.1,27.1 l 0,0 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 79,112 -9.3,-3.1 c -0,0.2 -0.6,2.2 -0.7,2.4 -0.2,0.6 -0.4,1.7 -0.5,2.4 -0.2,1.5 -0.5,3.8 -0.5,5.4 h 10.3 l -0.1,-2.2 0.8,-4.9 z m 15.5,5.4 h 11.4 v -0.8 c 0,-3.1 -2.4,-7.1 -5.6,-7.1 -3.3,0 -5.9,3.8 -5.9,7.2 v 0.7 z m 27.9,1.7 h 10 v -0.5 c 0,-2.3 -0.4,-3.8 -0.6,-5.6 -0.3,-2 -0.9,-3.5 -1,-5.2 l -9,4.2 0.7,7.1 z m -5.2,-19 c 1.1,1.6 4,8.1 4,10.6 l 8.7,-4.2 c 0,-1.2 -2.1,-5.8 -2.8,-6.8 -0.7,-1.1 -1.1,-2 -1.8,-3.1 -0.7,-1 -1.3,-1.8 -1.9,-2.8 l -6.2,6.2 z m -37.9,10.4 c 0.7,-1.4 1.6,-4.5 2.4,-6.2 0.5,-1.1 2.9,-4.9 3,-5.4 l -7.6,-4.4 c -1,1.8 -2.8,4 -4,6 -0.6,1.1 -2.9,5.8 -3,7 l 9.1,3 z m 28.8,-19.1 c 2.1,0.5 7.6,5.6 8.2,7.4 l 6.3,-6.1 c -1.5,-2.3 -8.5,-8.8 -11.3,-9.5 l -3.2,8.2 z m -30,2 7.6,4.6 C 87,96 92.3,91.6 94.9,91 l -3.8,-7.9 c -3.1,0.7 -11.4,7.9 -13,10.3 z M 92.6,82.4 l 3.5,7.9 4.6,-0.6 h 1 c 1.3,0 2.6,0.3 3.6,0.6 1.7,0.4 1.6,-0.1 2.2,-1.5 0.4,-1.1 2.3,-5.3 2.3,-6.3 -2.8,-0.6 -4,-1.9 -8.1,-1.9 h -1.4 c -3.6,0 -5.2,1.3 -7.7,1.9 z"}],t["GR.IN.IC.PUMPING STATION"]=[{type:"path",stroke:!1,d:"m 83.2,83.8 0,1.2 0,5.6 -11.3,0 0,-0 c -0.2,0 -0.3,0 -0.5,0 -0.1,6.6e-4 -0.1,-9.6e-4 -0.2,0 -2.7,0 -4.9,0.3 -6.5,1.7 -1.4,1.2 -2,3.3 -2.1,5.9 l -0.1,0 0,1.2 c 8e-6,0.1 -0,0.2 -0,0.3 l 0,0 0,14.1 -2.8,0 0,2.4 80.8,0 0,-2.4 -2.8,0 0,-14 0,-1.6 -0.1,0 c -0.1,-2.6 -0.5,-4.6 -1.8,-5.9 -1.5,-1.4 -3.8,-1.7 -6.8,-1.7 l 0,-0 -0.3,0 c -0.2,-5.6e-4 -0.3,-0 -0.4,-0 l 0,0 -11.3,0 0,-5.6 0,-1.2 -1.2,0 -31.2,0 -1.2,0 z m 2.4,2.4 28.8,0 0,27.2 -28.8,0 0,-27.2 z M 71.2,93 c 0.1,-0 0.1,0 0.2,0 l 11.8,0 0,8.4 -7.5,0 c -0.8,-0.1 -1.4,-0.1 -2,-0 -0,0 -0,0 -0.1,0 -0,0 -0,-0 -0,0 l 0,0 c -0.5,0.1 -1.2,0.3 -1.5,0.8 -0.4,0.5 -0.4,1.1 -0.4,1.6 -0,0.4 -0,0.8 0,1.2 l -0,0 0,8.8 -6.8,0 0,-14.5 c 0,-3 0.5,-4.5 1.4,-5.3 C 67.1,93.3 68.7,93.1 71.2,93 z m 45.6,0 11.8,0 c 0.1,9.7e-4 0.1,-0 0.2,0 2.8,0.1 4.5,0.4 5.2,1.1 0.8,0.7 1.2,2.3 1.2,5.2 l 0,14.5 -6.8,0 0,-8 0,0 c -0,-0.1 -0,-0.3 -0,-0.4 0,-0.9 0.2,-1.6 -0.1,-2.5 -0.1,-0.5 -0.6,-1.2 -1.2,-1.4 -0.2,-0.1 -0.5,-0 -0.7,-0 l 0,-0.1 -9.6,0 0,-8.4 z M 74,103.8 l 9.2,0 0,10 -9.2,0 0,-8.5 0,0 c 0,-0.6 -0,-1.1 -0,-1.4 0,-0.1 -0,-0 0,-0.1 z m 42.8,0 9.2,0 c 0,0.2 0,0.8 0,1.6 l -0,0 0,8.4 -9.2,0 0,-10 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 116.8,93 11.8,0 c 0.1,9.7e-4 0.1,-0 0.2,0 2.8,0.1 4.5,0.4 5.2,1.1 0.8,0.7 1.2,2.3 1.2,5.2 l 0,14.5 -6.8,0 0,-8 0,0 c -0,-0.1 -0,-0.3 -0,-0.4 0,-0.9 0.2,-1.6 -0.1,-2.5 -0.1,-0.5 -0.6,-1.2 -1.2,-1.4 -0.2,-0.1 -0.5,-0 -0.7,-0 l 0,-0.1 -9.6,0 0,-8.4 z m -45.6,0 c 0.1,-0 0.1,0 0.2,0 l 11.8,0 0,8.4 -7.5,0 c -0.8,-0.1 -1.4,-0.1 -2,-0 -0,0 -0,0 -0.1,0 -0,0 -0,-0 -0,0 l 0,0 c -0.5,0.1 -1.2,0.3 -1.5,0.8 -0.4,0.5 -0.4,1.1 -0.4,1.6 -0,0.4 -0,0.8 0,1.2 l -0,0 0,8.8 -6.8,0 0,-14.5 c 0,-3 0.5,-4.5 1.4,-5.3 C 67.1,93.3 68.7,93.1 71.2,93 z m 14.4,-6.8 28.8,0 0,27.2 -28.8,0 0,-27.2 z"}],t["GR.IN.IC.RESERVOIR"]=[{type:"path",stroke:!1,d:"M 127.3 69.1 C 127 69.1 126.7 69.2 126.4 69.2 C 123.4 69.5 120.8 71.9 118.4 74.5 C 115.9 77 113.5 79.7 111.5 80.9 C 108.9 82.4 105.5 82.5 101.9 82.6 C 98.3 82.7 94.7 82.9 91.8 84.9 C 89.7 86.5 88.6 88.5 87.5 90.3 C 86.4 92 85.2 93.4 82.7 94.2 C 79.4 95.3 72 96.4 66.9 98.8 C 64.3 100.1 62.1 101.7 61.5 104 C 60.8 106.3 61.7 109.1 64.7 112.3 L 65.1 111.9 L 65.1 120.1 L 84.3 120.1 L 84.3 129.7 L 86.7 129.7 L 86.7 120.1 L 97.9 120.1 L 97.9 129.7 L 100.3 129.7 L 100.3 120.1 L 117.1 120.1 L 117.1 112.5 C 117.4 112.2 117.7 111.9 118 111.5 C 119 110.1 119.3 108.5 119.5 106.9 C 119.8 103.7 119.5 100.5 121.7 97.7 C 123.1 95.9 126 95.4 129.1 94.7 C 132.1 94.1 135.4 93.3 137.2 90.4 C 139.4 86.7 139.1 81.3 137.2 76.8 C 136.3 74.5 134.9 72.5 133 71.1 C 131.4 69.9 129.5 69.1 127.3 69.1 z M 127.4 70.7 C 129.2 70.7 130.7 71.3 132.1 72.3 C 133.6 73.5 134.9 75.4 135.8 77.4 C 137.5 81.5 137.6 86.6 135.8 89.6 C 134.5 91.8 131.7 92.5 128.7 93.2 C 125.7 93.8 122.4 94.3 120.5 96.7 C 117.8 100 118.2 103.7 117.9 106.7 C 117.8 108.2 117.5 109.5 116.7 110.6 C 116.5 110.8 116.3 111.1 116.1 111.3 L 65.8 111.3 L 65.9 111.3 C 63.1 108.2 62.6 106.1 63 104.4 C 63.5 102.8 65.2 101.4 67.6 100.3 C 72.3 98 79.5 96.9 83.1 95.8 C 86.1 94.8 87.7 92.9 88.8 91.1 C 90 89.3 90.9 87.5 92.8 86.2 C 95.1 84.5 98.4 84.3 102 84.2 C 105.5 84.1 109.2 84.1 112.3 82.3 C 114.7 80.8 117.1 78.1 119.5 75.6 C 121.9 73.1 124.4 71 126.6 70.8 C 126.9 70.8 127.1 70.7 127.4 70.7 z "},{type:"path",stroke:!1,fill:!!R&&U,d:"m 127.4,70.7 c 1.8,-0 3.3,0.6 4.7,1.6 1.5,1.2 2.8,3 3.7,5.1 1.7,4.1 1.9,9.2 0.1,12.2 -1.3,2.2 -4.1,3 -7.1,3.6 -3,0.6 -6.3,1.1 -8.3,3.5 -2.6,3.3 -2.3,7.1 -2.6,10 -0.1,1.5 -0.4,2.8 -1.2,3.8 -0.2,0.2 -0.4,0.5 -0.6,0.7 l -50.2,0 0,-0 c -2.8,-3 -3.3,-5.2 -2.8,-6.8 0.5,-1.6 2.1,-3 4.5,-4.2 4.8,-2.3 11.9,-3.4 15.6,-4.5 3,-1 4.5,-2.8 5.7,-4.6 1.2,-1.8 2.1,-3.6 3.9,-4.9 2.3,-1.7 5.7,-1.9 9.2,-2 3.5,-0.1 7.3,-0.1 10.3,-1.9 2.5,-1.4 4.8,-4.2 7.2,-6.7 2.4,-2.5 4.9,-4.6 7.1,-4.8 0.3,-0 0.5,-0.1 0.8,-0.1 z m -41.9,49 13.6,0 0,10 -13.6,0 z"}],t["GR.IN.IC.STORAGE TOWER"]=[{type:"path",stroke:!1,d:"m 118.3,121 0.4,5.3 0.7,12.8 h 2.9 c 0,-6.1 -1.1,-12.6 -1.1,-18.6 0,-3.4 -0.4,-6.2 -0.4,-9.6 -0.1,-5.3 0.2,-3 2.6,-6.6 l -0.3,-3.1 0,-1.1 h -4.2 V 84 c -2.5,0.6 -5.2,1.8 -8.3,2.6 -2.6,0.6 -6.4,1.4 -9.4,1.4 h -2.4 c -7.6,0 -12.2,-2.6 -18,-4 v 16.2 h -4.2 v 0.7 l -0.3,3.7 3.2,3.7 -2,30.8 h 3.1 v -3.3 l 1.4,-21.7 c 0.5,0.4 2.1,2.7 3,3.6 0.9,0.9 2.4,2.2 3.5,2.9 2.2,1.5 5.6,3.8 8.7,4.1 v 14.4 h 5.6 v -14.4 c 3.7,-0.9 6.2,-2.2 8.8,-4.3 1.4,-1.1 2.2,-1.8 3.4,-3 0.7,-0.7 2.5,-3.2 3,-3.4 v 3.1 l 0.2,3.8 z M 99.7,85.2 c 7.4,0 23,-4.4 25.7,-8.4 -2.8,-1.5 -25.1,-16 -25.3,-16 -0.4,0 -24.9,15.4 -25.5,16.2 2.6,3.5 16.6,8.2 23.3,8.2 h 1.8 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 97.9,85.2 c -4.3,0 -11.7,-2 -17,-4.3 l -0,3.2 c 5.8,1.4 10.4,4 18,4 h 2.4 c 3,0 6.9,-0.8 9.4,-1.4 3,-0.8 5.8,-2 8.3,-2.6 V 80.8 c -6,2.4 -14.4,4.4 -19.3,4.4 H 97.9 z"}],t["GR.IN.IC.SURFACE WATER INTAKE"]=[{type:"path",stroke:!1,d:"M 63.4 75.5 L 63.4 76.3 L 63.4 90.7 L 63.4 91.5 L 64.2 91.5 L 75.7 91.5 C 76.5 96.6 79.8 99.1 83.3 101 C 87.1 102.9 91.3 104.3 93.8 107.5 C 94.8 108.9 94.9 110.7 95.2 112.6 C 95.4 113.6 95.6 114.5 96.2 115.4 C 96.7 116.2 97.5 117 98.8 117.5 C 101.2 118.6 108.7 120.7 115.9 122.4 C 119.6 123.2 123.1 123.9 126 124.3 C 127.5 124.4 128.7 124.5 129.8 124.5 C 130.8 124.4 131.6 124.3 132.2 123.8 C 134.8 121.7 136.1 119.9 136.5 118.3 C 136.8 116.8 136.1 115.4 135 114.4 C 133.9 113.4 132.4 112.5 131 111.7 C 129.7 110.8 128.4 109.9 127.7 108.8 C 124.2 103.6 121 95.5 113.4 91.5 L 119 91.5 L 119.8 91.5 L 119.8 90.7 L 119.8 76.3 L 119.8 75.5 L 119 75.5 L 64.2 75.5 L 63.4 75.5 z M 65 77.1 L 118.2 77.1 L 118.2 89.9 L 109.4 89.9 L 109.4 81.1 L 73.8 81.1 L 73.8 89.9 L 65 89.9 L 65 77.1 z M 76.9 91.5 L 110.5 91.5 C 119.4 94.8 122.7 103.5 126.7 109.5 C 127.6 110.8 129 111.8 130.4 112.7 C 131.8 113.6 133.2 114.4 134.2 115.3 C 135.1 116.2 135.6 117 135.3 118.1 C 135.1 119.2 134 120.8 131.4 122.9 C 131.3 123 130.6 123.2 129.7 123.3 C 128.8 123.3 127.6 123.3 126.2 123.1 C 123.3 122.8 119.8 122.1 116.2 121.3 C 109 119.6 101.5 117.3 99.3 116.4 C 98.2 116 97.6 115.4 97.2 114.8 C 96.8 114.1 96.6 113.3 96.4 112.4 C 96.1 110.6 96 108.5 94.7 106.8 C 91.9 103.2 87.6 101.8 83.9 99.9 C 80.5 98.1 77.7 96.1 76.9 91.5 z "},{type:"path",stroke:!1,fill:!!R&&U,d:"m 76.9,91.5 33.6,0 c 8.9,3.3 12.2,12 16.2,18 0.9,1.3 2.3,2.3 3.7,3.2 1.4,0.9 2.8,1.7 3.8,2.6 0.9,0.9 1.4,1.7 1.2,2.8 -0.2,1.1 -1.3,2.7 -3.9,4.8 -0.2,0.1 -0.8,0.3 -1.7,0.4 -0.9,0 -2.2,-0 -3.6,-0.2 -2.8,-0.3 -6.4,-1 -10,-1.8 -7.2,-1.7 -14.7,-3.9 -16.9,-4.8 -1.1,-0.4 -1.6,-1 -2.1,-1.7 -0.4,-0.7 -0.6,-1.5 -0.8,-2.3 -0.3,-1.8 -0.4,-3.9 -1.7,-5.6 -2.8,-3.6 -7.1,-5 -10.8,-6.9 C 80.5,98.1 77.7,96.1 76.9,91.5 z m -11.9,-14.4 53.2,0 0,12.8 -8.8,0 0,-8.8 -35.6,0 0,8.8 -8.8,0 0,-12.8 z"}],t["GR.IN.IC.WAREHOUSE/STORAGE FACILITY"]=[{type:"text",stroke:!1,x:100,y:113,fontsize:23,text:"STOR"}],t["GR.IN.IC.WASTEWATER TREATMENT FACILITY"]=[{type:"path",stroke:!1,d:"m 107.2,114.8 c 1.9,0 3.9,-1 4.3,-2.4 1.5,1 1.7,2.4 4.6,2.4 h 0.4 c 1.8,0 3.8,-1.1 4.1,-2.4 h 0.4 c 0.4,1.4 2.5,2.4 4.5,2.4 h 0.4 c 2.7,0 3,-1.5 4.5,-2.4 0.4,1.4 2.6,2.4 4.5,2.4 v -1.5 c -2.2,0 -3.5,-1.6 -3.9,-3.4 h -1.5 c -0,1.8 -1.7,3.4 -3.6,3.4 h -0.4 c -2.2,0 -3.6,-1.4 -3.8,-3.4 h -1.7 l -0.2,1.3 c -1,0.7 -1.1,2 -3.3,2 h -0.4 c -3.3,0 -3.2,-3.4 -4.1,-3.4 h -1.3 c -0.2,2 -1.4,3.4 -3.6,3.4 v 1.5 z m -2.2,-33.3 h 32 v 37 h -32 V 81.5 z M 65.1,114.8 v -1.5 c 2,0 3.7,-1.6 3.8,-3.4 h 1.9 c 0,1.8 1.5,3.4 3.4,3.4 h 0.4 c 1.8,0 3.5,-1.6 3.6,-3.4 h 1.9 c 0,2 1.7,3.4 3.8,3.4 h 0.2 c 2.2,0 3.2,-1.6 3.6,-3.4 h 1.7 c 0,2 1.7,3.4 3.8,3.4 v 1.5 c -2,0 -4.1,-1 -4.5,-2.4 -1.4,0.9 -1.7,2.5 -4.6,2.5 h -0.6 c -2.9,0 -3.1,-1.5 -4.5,-2.4 -0.4,1.3 -2.4,2.4 -4.1,2.4 H 74.1 c -2.4,0 -3.4,-1.2 -4.5,-2.4 -0.4,1.4 -2.6,2.4 -4.5,2.4 l 0,0 z M 96.5,93.4 h 6.7 v 13.3 H 96.5 V 93.4 z m -31.4,7.9 c 2,0 3.6,-1.5 3.8,-3.4 h 1.9 c 0.2,1.8 1.4,3.4 3.4,3.4 h 0.4 c 1.8,0 3.5,-1.7 3.6,-3.4 h 1.9 c 0,2 1.7,3.4 3.8,3.4 h 0.2 c 1.5,0 3.4,-1.5 3.4,-2.6 v -0.8 h 1.9 c 0,1.9 1.8,3.4 3.8,3.4 v 1.5 c -3.6,0 -3.8,-2 -4.9,-2.2 -0.4,1.3 -2.5,2.2 -4.2,2.2 h -0.6 c -1.7,0 -3.8,-1 -4.1,-2.2 -1,0.3 -1.4,2.2 -4.5,2.2 H 74.1 c -2.7,0 -3,-1.3 -4.5,-2.2 -1,1.4 -2.2,2.2 -4.5,2.2 v -1.5 l 0,0 z m 0,-12 c 2,0 3.6,-1.5 3.8,-3.4 h 1.9 c 0.1,1.8 1.4,3.4 3.4,3.4 h 0.4 c 1.8,0 3.5,-1.7 3.6,-3.4 h 1.9 c 0,2 1.7,3.4 3.8,3.4 h 0.2 c 1.5,0 3.4,-1.5 3.4,-2.6 v -0.8 h 1.9 c 0,1.9 1.8,3.4 3.8,3.4 v 1.5 c -3.1,0 -3,-1 -4.7,-2 -1.4,1 -1.7,2.1 -4.4,2.1 h -0.6 c -2.7,0 -2.9,-1.1 -4.3,-2 -1.6,1 -1.6,2 -4.5,2 H 73.9 c -2.4,0 -2.9,-1.2 -4.1,-2 -1.6,1 -1.7,2 -4.7,2 v -1.5 l 0,0 z m 31.4,21.3 h 6.7 v 10.1 h 35.6 V 79.4 L 103.3,79.2 V 89.5 H 96.5 V 79.4 L 61.2,79.2 v 41.6 h 35.4 v -10.1 z m 14.2,-12.2 c 0,1.4 -1.8,2.8 -3.6,2.8 v 1.5 c 3.4,0 3.5,-1.9 4.7,-2.2 0.4,1.3 2.7,2.2 4.5,2.2 h 0.2 c 2.9,0 3,-1.3 4.3,-2.2 1.2,0.9 1.7,2.2 4.3,2.2 h 0.8 c 2.6,0 3,-1.3 4.3,-2.2 1.4,1 1.5,2.2 4.6,2.2 v -1.5 c -1.7,0 -3.8,-1.6 -3.8,-2.8 v -0.6 h -1.7 c -0.1,1.8 -1.6,3.4 -3.6,3.4 h -0.6 c -1.4,0 -3.4,-1.4 -3.4,-2.4 v -0.9 h -1.9 c 0,1.7 -1.7,3.4 -3.5,3.4 h -0.4 c -1.9,0 -3.5,-1.5 -3.6,-3.4 h -1.8 v 0.6 z m 0,-12 c 0,1.4 -1.8,2.8 -3.6,2.8 v 1.5 c 1.8,0 4,-0.9 4.3,-2.2 1.6,1.1 1.7,2.2 4.9,2.2 h 0.4 c 2.6,0 2.9,-1.3 4.3,-2.2 0.3,1.3 2.4,2.3 4.1,2.3 h 0.8 c 2.7,0 3,-1.3 4.5,-2.2 0.4,1.3 2.7,2.2 4.5,2.2 v -1.5 c -1.7,0 -3.8,-1.6 -3.8,-2.8 v -0.6 h -1.7 c -0.1,1.8 -1.6,3.4 -3.6,3.4 h -0.6 c -1.6,0 -3.4,-1.4 -3.4,-2.8 v -0.6 h -1.9 c 0,1.7 -1.7,3.4 -3.5,3.4 h -0.4 c -1.9,0 -3.5,-1.5 -3.6,-3.4 h -1.8 v 0.5 z"},{type:"path",stroke:!1,fill:!!R&&U,d:"m 65.1,114.8 c 1.9,0 4.1,-1 4.5,-2.4 1.1,1.2 2.2,2.4 4.5,2.4 h 0.6 c 1.8,0 3.8,-1.1 4.1,-2.4 1.4,1 1.6,2.4 4.5,2.4 h 0.6 c 2.8,0 3.2,-1.6 4.5,-2.4 0.4,1.4 2.5,2.4 4.5,2.4 v -1.5 c -2.1,0 -3.7,-1.4 -3.8,-3.4 h -1.6 c -0.4,1.8 -1.4,3.4 -3.6,3.4 h -0.2 c -2.1,0 -3.7,-1.4 -3.8,-3.4 h -1.8 c -0,1.8 -1.7,3.4 -3.6,3.4 H 74.1 c -1.8,0 -3.3,-1.6 -3.4,-3.4 h -1.9 c -0,1.8 -1.8,3.4 -3.8,3.4 v 1.5 l 0,0 z m 0,-13.5 v 1.5 c 2.3,0 3.6,-0.9 4.5,-2.2 1.4,1 1.8,2.2 4.5,2.2 h 0.6 c 3.1,0 3.5,-2 4.5,-2.2 0.4,1.3 2.4,2.2 4.1,2.2 h 0.6 c 1.7,0 3.8,-1 4.1,-2.2 1.1,0.3 1.2,2.2 4.9,2.2 v -1.5 c -2,0 -3.8,-1.4 -3.8,-3.4 h -1.9 v 0.8 c 0,1.2 -1.9,2.6 -3.4,2.6 h -0.2 c -2,0 -3.7,-1.4 -3.8,-3.4 h -1.8 c -0,1.6 -1.7,3.4 -3.6,3.4 H 74.1 c -2,0 -3.2,-1.5 -3.4,-3.4 h -1.9 c -0.2,1.8 -1.7,3.4 -3.8,3.4 l 0,0 z m 0,-12 v 1.5 c 3,0 3.1,-1 4.7,-2 1.2,0.9 1.7,2 4.1,2 h 0.6 c 2.9,0 2.9,-1 4.5,-2 1.4,0.9 1.6,2 4.3,2 h 0.6 c 2.7,0 2.9,-1.1 4.3,-2 1.6,1.1 1.6,2 4.7,2 v -1.5 c -2,0 -3.8,-1.4 -3.8,-3.4 h -1.9 v 0.8 c 0,1.2 -1.9,2.6 -3.4,2.6 h -0.2 c -2,0 -3.7,-1.4 -3.8,-3.4 h -1.8 c -0,1.7 -1.7,3.4 -3.6,3.4 H 74.1 c -2,0 -3.2,-1.5 -3.4,-3.4 h -1.9 c -0.2,1.8 -1.7,3.4 -3.8,3.4 l 0,0 z m 42.1,25.4 v -1.5 c 2.2,0 3.4,-1.4 3.6,-3.4 h 1.3 c 1,0 0.8,3.4 4.1,3.4 h 0.4 c 2.2,0 2.4,-1.4 3.3,-2.1 l 0.2,-1.3 h 1.7 c 0.2,2 1.6,3.4 3.8,3.4 h 0.4 c 1.8,0 3.5,-1.6 3.6,-3.4 h 1.5 c 0.4,1.8 1.7,3.4 3.9,3.4 v 1.5 c -1.9,0 -4.1,-1 -4.5,-2.4 -1.5,1 -1.8,2.5 -4.5,2.5 h -0.4 c -2,0 -4.1,-1 -4.5,-2.4 h -0.4 c -0.4,1.3 -2.3,2.4 -4.1,2.4 h -0.4 c -2.9,0 -3.1,-1.4 -4.7,-2.4 -0.4,1.4 -2.4,2.4 -4.3,2.4 z m 3.6,-16.8 h 1.9 c 0,1.8 1.6,3.4 3.5,3.4 h 0.4 c 1.8,0 3.5,-1.6 3.6,-3.4 h 1.9 v 0.9 c 0,1 2,2.4 3.4,2.4 h 0.6 c 1.9,0 3.4,-1.6 3.6,-3.4 h 1.7 v 0.6 c 0,1.2 2,2.8 3.8,2.8 v 1.5 c -3.1,0 -3.2,-1.2 -4.7,-2.2 -1.3,0.9 -1.7,2.2 -4.4,2.2 h -0.7 c -2.6,0 -3,-1.3 -4.3,-2.2 -1.3,1 -1.4,2.2 -4.3,2.2 h -0.2 c -1.8,0 -4.2,-1 -4.5,-2.2 -1.2,0.3 -1.2,2.2 -4.7,2.2 v -1.5 c 1.8,0 3.6,-1.4 3.6,-2.8 v -0.6 l 0,0 z m 0,-12 h 1.9 c 0,1.9 1.6,3.4 3.5,3.4 h 0.4 c 1.8,0 3.5,-1.6 3.6,-3.4 h 1.9 v 0.6 c 0,1.4 1.8,2.8 3.4,2.8 h 0.6 c 1.9,0 3.4,-1.6 3.6,-3.4 h 1.7 v 0.6 c 0,1.2 2,2.8 3.8,2.8 v 1.5 c -1.8,0 -4.2,-1 -4.5,-2.2 -1.5,1 -1.8,2.2 -4.6,2.2 h -0.7 c -1.7,0 -3.8,-1 -4.1,-2.2 -1.4,0.9 -1.7,2.2 -4.3,2.2 h -0.4 c -3.1,0 -3.2,-1.2 -4.9,-2.2 -0.4,1.3 -2.5,2.2 -4.3,2.2 v -1.5 c 1.8,0 3.6,-1.4 3.6,-2.8 v -0.6 z m -5.8,32.6 h 32 V 81.5 h -32 v 37 z m -1.7,-11.8 0,-13.3 -6.8,0 0,13.3 z"}],t["GR.IN.IC.TRANSPORTATION INFRASTRUCTURE.TRAFFIC CONTROL POINT"]=[{type:"path",stroke:!1,d:"m 85.5,81.3 0.5,0.7 13.7,18.2 0.3,0.5 0.3,-0.5 13.7,-18.2 0.5,-0.7 -0.9,0 -27.4,0 -0.9,0 z m 1.7,0.9 25.7,0 L 100,99.3 87.2,82.2 z M 106.7,50.7 c 0,0.2 -0,0.5 -0.1,0.7 -0.1,0.2 -0.2,0.4 -0.4,0.5 -0.2,0.2 -0.4,0.3 -0.7,0.4 -0.3,0.1 -0.6,0.1 -1,0.1 l -0.7,0 0,2.1 -0.7,0 0,-5.6 1.5,0 c 0.3,5e-6 0.6,0 0.9,0.1 0.2,0.1 0.4,0.1 0.6,0.3 0.2,0.1 0.4,0.3 0.5,0.5 0.1,0.2 0.2,0.5 0.2,0.8 m -0.8,0 c -1e-5,-0.2 -0,-0.4 -0.1,-0.5 -0.1,-0.1 -0.2,-0.3 -0.3,-0.3 -0.1,-0.1 -0.3,-0.1 -0.4,-0.2 -0.2,-0 -0.3,-0.1 -0.6,-0.1 l -0.7,0 0,2.2 0.6,0 c 0.3,3e-6 0.5,-0 0.7,-0.1 0.2,-0.1 0.3,-0.1 0.5,-0.3 0.1,-0.1 0.2,-0.2 0.2,-0.4 0.1,-0.1 0.1,-0.3 0.1,-0.4 m -3.9,3.5 c -0.1,0.1 -0.3,0.1 -0.4,0.2 -0.1,0.1 -0.3,0.1 -0.4,0.2 -0.2,0 -0.3,0.1 -0.5,0.1 -0.2,0 -0.4,0.1 -0.6,0.1 -0.4,0 -0.8,-0.1 -1.1,-0.2 -0.3,-0.1 -0.6,-0.3 -0.9,-0.5 -0.2,-0.2 -0.4,-0.5 -0.6,-0.9 -0.1,-0.4 -0.2,-0.8 -0.2,-1.3 0,-0.5 0.1,-0.9 0.2,-1.2 0.1,-0.4 0.3,-0.7 0.6,-0.9 0.2,-0.2 0.5,-0.4 0.9,-0.6 0.3,-0.1 0.7,-0.2 1.1,-0.2 0.3,6e-6 0.6,0 0.9,0.1 0.3,0.1 0.6,0.2 1,0.4 l 0,0.9 -0.1,0 c -0.3,-0.3 -0.6,-0.4 -0.9,-0.6 -0.3,-0.1 -0.6,-0.2 -1,-0.2 -0.3,5e-6 -0.5,0 -0.8,0.1 -0.2,0.1 -0.4,0.2 -0.6,0.4 -0.2,0.2 -0.3,0.4 -0.4,0.7 -0.1,0.3 -0.1,0.6 -0.1,1 -10e-7,0.4 0.1,0.7 0.2,1 0.1,0.3 0.2,0.5 0.4,0.7 0.2,0.2 0.4,0.3 0.6,0.4 0.2,0.1 0.5,0.1 0.7,0.1 0.4,10e-7 0.7,-0.1 1,-0.2 0.3,-0.1 0.6,-0.3 0.9,-0.6 l 0.1,0 0,0.9 m -5.1,-4.5 -2,0 0,4.9 -0.7,0 0,-4.9 -2,0 0,-0.7 4.7,0 0,0.7 M 85.9,44.6 l 0,0.4 0,36.5 0,0.4 0.4,0 27.4,0 0.4,0 0,-0.4 0,-36.5 0,-0.4 -0.4,0 -27.4,0 -0.4,0 z m 0.9,0.9 26.5,0 0,35.6 -26.5,0 0,-35.6 z"}],t["AC.M1.RIOT"]=N("RIOT"),t["AC.M1.THREAT"]=N("?"),t["AC.M1.EMERGENCY COLLECTION EVACUATION POINT"]=N("ECEP"),t["AC.M1.EMERGENCY INCIDENT COMMAND CENTER"]=N("EICC"),t["AC.M1.EMERGENCY OPERATIONS CENTER"]=N("EOC"),t["AC.M1.EMERGENCY SHELTER"]=N("ES"),t["AC.M1.EMERGENCY STAGING AREA"]=N("SA"),t["AC.M1.EMERGENCY"]=N("EMER"),t["AC.M1.COMMERCIAL"]=N("COM"),t["AC.M1.PRODUCTION"]=N("PROD"),t["AC.M1.RETAIL"]=N("RTL"),t["AC.M1.MILITARY ARMORY"]=N("RES"),t["AC.M1.GENERATION STATION"]=N("GEN"),t["CY.IC.COMMAND AND CONTROL (C2)"]=S("BC2"),t["CY.IC.HERDER"]=S("HDR"),t["CY.IC.CALLBACK DOMAIN"]=S("CBD"),t["CY.IC.ZOMBIE"]=S("ZMB"),t["CY.IC.ADVANCED PERSISTENT THREAT (APT)"]=S("APT"),t["CY.IC.APT WITH C2"]=S("AC2"),t["CY.IC.APT WITH SELF PROPAGATION"]=S("ASP"),t["CY.IC.APT WITH C2 AND SELF PROPAGATION"]=S("ACS"),t["CY.IC.APT OTHER"]=S("AOT"),t["CY.IC.NON-ADVANCED PERSISTENT THREAT (NAPT)"]=S("NAPT"),t["CY.IC.NAPT WITH C2"]=S("NC2"),t["CY.IC.NAPT WITH SELF PROPAGATION"]=S("NSP"),t["CY.IC.NAPT WITH C2 AND SELF PROPAGATION"]=S("NCS"),t["CY.IC.NAPT OTHER"]=S("NOH"),t["CY.IC.NORMAL"]=S("ON"),t["CY.IC.NETWORK OUTAGE"]=S("OUT"),t["CY.IC.UNKNOWN"]=S("UNK"),t["CY.IC.IMPAIRED"]=S("IMP"),t["CY.IC.CORE ROUTER"]=S("CRT"),t["CY.IC.ROUTER"]=S("RTR"),t["CY.IC.CROSS DOMAIN SOLUTION"]=S("CDS"),t["CY.IC.MAIL SERVER"]=S("MSR"),t["CY.IC.WEB SERVER"]=S("WSR"),t["CY.IC.DOMAIN SERVER"]=S("DSR"),t["CY.IC.FILE SERVER"]=S("FSR"),t["CY.IC.PEER-TO-PEER NODE"]=S("P2P"),t["CY.IC.FIREW ALL"]=S("FWL"),t["CY.IC.SWITCH"]=S("SWT"),t["CY.IC.HOST"]=S("HST"),t["CY.IC.VIRTUAL PRIVATE NETWORK (VPN)"]=S("VPN"),t["CY.IC.DEPARTMENT OF DEFENSE (DOD)"]=S("DOD"),t["CY.IC.GOVERNMENT"]=S("GOV"),t["CY.IC.CONTRACTOR"]=S("CTR"),t["CY.IC.SUPERVISORY CONTROL AND DATA ACQUISITION (SCADA)"]=S("SCD"),t["CY.IC.NON-GOVERNMENT"]=S("NGD"),t["CY.IC.INFECTION"]=S("INF"),t["CY.IC.DEGRADATION"]=S("DGD"),t["CY.IC.DATA SPOOFING"]=S("SPF"),t["CY.IC.DATA MANIPULATION"]=S("MNP"),t["CY.IC.EXFILTRATION"]=S("XFL"),t["CY.IC.POWER OUTAGE"]=S("POT"),t["CY.IC.NETWORK OUTAGE"]=S("NOT"),t["CY.IC.SERVICE OUTAGE"]=S("SOT"),t["CY.IC.DEVICE OUTAGE"]=S("DOT");for(var F in t)M.call(this,t[F]);return t},this.symbolGeometries={AirHostile:{g:{type:"path",d:"M 45,150 L45,70 100,20 155,70 155,150"},bbox:new this.bbox({x1:45,y1:20,x2:155,y2:150})},AirFriend:{g:{type:"path",d:"M 155,150 C 155,50 115,30 100,30 85,30 45,50 45,150"},bbox:new this.bbox({x1:45,y1:30,x2:155,y2:150})},AirNeutral:{g:{type:"path",d:"M 45,150 L 45,30,155,30,155,150"},bbox:new this.bbox({x1:45,y1:30,x2:155,y2:150})},AirUnknown:{g:{type:"path",d:"M 65,150 c -55,0 -50,-90 0,-90 0,-50 70,-50 70,0 50,0 55,90 0,90"},bbox:new this.bbox({x1:25,y1:20,x2:175,y2:150})},GroundHostile:{g:{type:"path",d:"M 100,28 L172,100 100,172 28,100 100,28z"},bbox:new this.bbox({x1:28,y1:28,x2:172,y2:172})},GroundFriend:{g:{type:"path",d:"M25,50 l150,0 0,100 -150,0 z"},bbox:new this.bbox({x1:25,y1:50,x2:175,y2:150})},GroundNeutral:{g:{type:"path",d:"M45,45 l110,0 0,110 -110,0 z"},bbox:new this.bbox({x1:45,y1:45,x2:155,y2:155})},GroundUnknown:{g:{type:"path",d:"M63,63 C63,20 137,20 137,63 C180,63 180,137 137,137 C137,180 63,180 63,137 C20,137 20,63 63,63 Z"},bbox:new this.bbox({x1:30.75,y1:30.75,x2:169.25,y2:169.25})},SeaHostile:{g:{type:"path",d:"M100,28 L172,100 100,172 28,100 100,28"},bbox:new this.bbox({x1:28,y1:28,x2:172,y2:172})},SeaFriend:{g:{type:"circle",cx:100,cy:100,r:60},bbox:new this.bbox({x1:40,y1:40,x2:160,y2:160})},SeaNeutral:{g:{type:"path",d:"M45,45 l110,0 0,110 -110,0 z"},bbox:new this.bbox({x1:45,y1:45,x2:155,y2:155})},SeaUnknown:{g:{type:"path",d:"M63,63 C63,20 137,20 137,63 C180,63 180,137 137,137 C137,180 63,180 63,137 C20,137 20,63 63,63 Z"},bbox:new this.bbox({x1:30.75,y1:30.75,x2:169.25,y2:169.25})},SubsurfaceHostile:{g:{type:"path",d:"M45,50 L45,130 100,180 155,130 155,50"},bbox:new this.bbox({x1:45,y1:50,x2:155,y2:180})},SubsurfaceFriend:{g:{type:"path",d:"m 45,50 c 0,100 40,120 55,120 15,0 55,-20 55,-120"},bbox:new this.bbox({x1:45,y1:50,x2:155,y2:170})},SubsurfaceNeutral:{g:{type:"path",d:"M45,50 L45,170 155,170 155,50"},bbox:new this.bbox({x1:45,y1:50,x2:155,y2:170})},SubsurfaceUnknown:{g:{type:"path",d:"m 65,50 c -55,0 -50,90 0,90 0,50 70,50 70,0 50,0 55,-90 0,-90"},bbox:new this.bbox({x1:25,y1:50,x2:175,y2:180})},PositionMarker:{g:{type:"circle",cx:100,cy:100,r:15},bbox:new this.bbox({x1:85,y1:85,x2:115,y2:115})}},this.symbol=function(E,R){if(this.SIDC=E,this.size=100,this.fill=!0,this.fillOpacity=1,this.frame=!0,this.strokeWidth=4,this.icon=!0,this.monoColor=!1,this.civilianColor=!0,this.colorMode=MS.getColorMode("Light"),this.infoFields=!0,this.infoSize=40,this.alternateMedal=!1,this.quantity="",this.reinforcedReduced="",this.staffComments="",this.additionalInformation="",this.evaluationRating="",this.combatEffectiveness="",this.signatureEquipment="",this.higherFormation="",this.hostile="",this.iffSif="",this.direction="",this.sigint="",this.uniqueDesignation="",this.type="",this.dtg="",this.altitudeDepth="",this.location="",this.speed="",this.specialHeadquarters="",this.platformType="",this.equipmentTeardownTime="",this.commonIdentifier="",this.auxiliaryEquipmentIndicator="",!R)var R={};this.setOptions.call(this,R),this.bbox=new MS.bbox,this.colors={},this.DOM={},this.height=100,this.markerAnchor={x:50,y:50},this.octagonAnchor={x:50,y:50},this.properties={},this.width=100,this.XML="";var C=MS.symbolGeometries;this.getProperties=function(){var I={activity:!1,affiliation:"",baseAffilation:"",baseDimension:"",baseGeometry:{g:"",bbox:{}},civilian:!1,condition:"",context:"",dimension:"",dimensionUnknown:!1,echelon:"",faker:!1,fenintDummy:!1,fill:this.fill,frame:this.frame,functionid:"",headquarters:!1,iconBottom:150,installation:!1,joker:!1,mobility:"",notpresent:"",numberSIDC:!1,space:!1,taskForce:!1},E={};return E.context=["Reality","Exercise","Simulation"],E.status=["Present","Planned","FullyCapable","Damaged","Destroyed","FullToCapacity"],E.echelonMobility={11:"Team/Crew",12:"Squad",13:"Section",14:"Platoon/detachment",15:"Company/battery/troop",16:"Battalion/squadron",17:"Regiment/group",18:"Brigade",21:"Division",22:"Corps/MEF",23:"Army",24:"Army Group/front",25:"Region/Theater",26:"Command",31:"Wheeled limited cross country",32:"Wheeled cross country",33:"Tracked",34:"Wheeled and tracked combination",35:"Towed",36:"Rail",37:"Pack animals",41:"Over snow (prime mover)",42:"Sled",51:"Barge",52:"Amphibious",61:"Short towed array",62:"Long towed Array"},E.affiliation=["Hostile","Friend","Neutral","Unknown"],E.dimension=["Air","Ground","Sea","Subsurface"],I.context=E.context[0],""!=this.monoColor&&(I.fill=!1),this.SIDC=String(this.SIDC).replace(/\*/g,"-").replace(" ",""),I.numberSIDC=!isNaN(this.SIDC),I.numberSIDC?"function"==typeof MS._getNumberProperties?I=MS._getNumberProperties.call(this,I,E):console.warn("MS._getNumberProperties() is not present, you will need to load functionality for letter based SIDCs"):"function"==typeof MS._getLetterProperties?I=MS._getLetterProperties.call(this,I,E):console.warn("MS._getNumberProperties() is not present, you will need to load functionality for letter based SIDCs"),C.hasOwnProperty(I.dimension+I.affiliation)?I.baseGeometry=C[I.dimension+I.affiliation]:I.baseGeometry.bbox=new MS.bbox,this.frame||this.icon||(I.baseGeometry=C.PositionMarker),I},this.getColors=function(){var I=this.colorMode,E=MS.getColorMode("FrameColor"),R=MS.getColorMode("IconColor"),C=I,A=MS.getColorMode("Black"),S=MS.getColorMode("White"),N=MS.getColorMode("OffWhite"),T=MS.getColorMode("None");this.civilianColor&&this.properties.civilian&&(I.Friend=I.Neutral=I.Unknown=I.Civilian,E.Friend=E.Neutral=E.Unknown=E.Civilian,R.Friend=R.Neutral=R.Unknown=R.Civilian),(this.properties.joker||this.properties.faker)&&(I.Friend=I.Hostile,E.Friend=E.Hostile,R.Friend=R.Hostile),""!=this.monoColor&&(E.Friend=E.Neutral=E.Hostile=E.Unknown=E.Civilian=this.monoColor,A=E,S=I=T);var M={fillColor:I,frameColor:E,iconColor:R,iconFillColor:C,none:T,black:A,white:S};return this.properties.frame?M.frameColor=A:M.frameColor=T,this.properties.fill?(M.fillColor=this.properties.frame||!this.properties.frame&&!this.icon?I:T,M.iconColor=A,M.iconFillColor=this.properties.frame?N:I,M.white=N):(M.fillColor=T,M.frameColor=this.properties.frame?E:T,M.iconColor=E,M.iconFillColor=T,this.properties.frame||this.properties.fill||this.icon||(M.frameColor=A,M.fillColor=A)),M},this.getMarker=function(I){this.properties=this.getProperties(),this.colors=this.getColors(),this.drawInstructions=[],this.bbox=MS.bbox();for(var E in MS._markerParts){var R=MS._markerParts[E].call(this);R.pre&&(R.pre.length&&this.drawInstructions.unshift(R.pre),R.post.length&&this.drawInstructions.push(R.post),R.bbox&&(this.bbox=MS.bboxMax(this.bbox,R.bbox)))}this.baseWidth=this.bbox.width()+3*this.strokeWidth,this.baseHeight=this.bbox.height()+3*this.strokeWidth,this.width=this.baseWidth*this.size/100,this.height=this.baseHeight*this.size/100;var C={x:100,y:100};return this.octagonAnchor={x:(C.x-this.bbox.x1+parseFloat(this.strokeWidth))*this.size/100,y:(C.y-this.bbox.y1+parseFloat(this.strokeWidth))*this.size/100},this.properties.headquarters&&(C={x:this.properties.baseGeometry.bbox.x1,y:this.properties.baseGeometry.bbox.y2+MS.hqStafLength}),this.markerAnchor={x:(C.x-this.bbox.x1+parseFloat(this.strokeWidth))*this.size/100,y:(C.y-this.bbox.y1+parseFloat(this.strokeWidth))*this.size/100},MS.autoSVG&&this.asSVG(),this},this.asDOM=function(){return parseXML(this.XML)},this.asImage=function(){return"data:image/svg+xml;base64,"+btoa(this.XML)},this.asSVG=function(){function E(I){for(var R="",C=0;C<I.length;C++)if(Array.isArray(I[C]))I[C].length&&(R+=E.call(this,I[C]));else if("object"==typeof I[C]){var A;if("svg"==I[C].type)A=I[C].svg;else{switch(I[C].type){case"path":A='<path d="'+I[C].d+'" ';break;case"circle":A='<circle cx="'+I[C].cx+'" cy="'+I[C].cy+'" r="'+I[C].r+'" ';break;case"text":A='<text x="'+I[C].x+'" y="'+I[C].y+'" text-anchor="'+I[C].textanchor+'" font-size="'+I[C].fontsize+'" font-family="'+I[C].fontfamily+'" ',I[C].fontweight&&(A+='font-weight="'+I[C].fontweight+'" ');break;case"translate":A='<g transform="translate('+I[C].x+","+I[C].y+')" ';break;case"rotate":A='<g transform="rotate('+I[C].degree+","+I[C].x+","+I[C].y+')" ';break;case"scale":A='<g transform="scale('+I[C].factor+')" '}switch(void 0!==I[C].stroke&&(A+='stroke-width="'+(I[C].strokewidth||this.strokeWidth)+'" ',I[C].strokedasharray&&(A+='stroke-dasharray="'+I[C].strokedasharray+'" '),A+=I[C].stroke?'stroke="'+I[C].stroke+'" ':'stroke="none" '),void 0!==I[C].fill&&(A+='fill="'+(I[C].fill?I[C].fill:"none")+'" '),void 0!==I[C].fillopacity&&(A+='fill-opacity="'+I[C].fillopacity+'" '),
A+=">",I[C].type){case"path":A+="</path>";break;case"circle":A+="</circle>";break;case"text":A+=I[C].text+"</text>";break;case"translate":A+=E.call(this,I[C].draw),A+="</g>";break;case"rotate":A+=E.call(this,I[C].draw),A+="</g>";break;case"scale":A+=E.call(this,I[C].draw),A+="</g>"}}R+=A}return R}for(var R='<svg xmlns="'+I+'" version="1.2" baseProfile="tiny" width="'+this.width+'" height="'+this.height+'" viewBox="'+(this.bbox.x1-this.strokeWidth)+" "+(this.bbox.y1-this.strokeWidth)+" "+this.baseWidth+" "+this.baseHeight+'">',C=0;C<this.drawInstructions.length;C++)R+=E.call(this,this.drawInstructions[C]);return R+="</svg>",this.XML=R,R},this.processCanvasInstructions=function(I,E){for(var R=0;R<I.length;R++)if(Array.isArray(I[R]))I[R].length&&this.processCanvasInstructions.call(this,I[R],E);else if("object"==typeof I[R]){switch(E.lineWidth=I[R].strokewidth||this.strokeWidth,void 0!==I[R].stroke&&(I[R].stroke?E.strokeStyle=I[R].stroke:E.strokeStyle="rgba(0,0,0,0)"),I[R].strokedasharray?E.setLineDash(I[R].strokedasharray.split(",")):0!=E.getLineDash().length&&E.setLineDash([]),I[R].fill&&(E.fillStyle=I[R].fill),I[R].fill||(E.fillStyle="rgba(0,0,0,0)"),void 0!==I[R].fillopacity&&(E.globalAlpha=I[R].fillopacity),I[R].type){case"path":if("undefined"!=typeof Path2D){var C=new Path2D(I[R].d);(void 0===I[R].fill||void 0!==I[R].fill&&I[R].fill)&&E.fill(C),(void 0===I[R].stroke||void 0!==I[R].stroke&&I[R].stroke)&&E.stroke(C)}else"function"==typeof MS._Path2D?(MS._Path2D(E,I[R].d),(void 0===I[R].fill||void 0!==I[R].fill&&I[R].fill)&&E.fill(),(void 0===I[R].stroke||void 0!==I[R].stroke&&I[R].stroke)&&E.stroke()):console.warn("MS._Path2D() is not present, you will need to load functionality for using Canvas in older version of Internet Explorer.");break;case"circle":E.beginPath(),E.arc(I[R].cx,I[R].cy,I[R].r,0,2*Math.PI,!1),(void 0===I[R].fill||void 0!==I[R].fill&&I[R].fill)&&E.fill(),(void 0===I[R].stroke||void 0!==I[R].stroke&&I[R].stroke)&&E.stroke();break;case"text":E.font=(void 0!==I[R].fontweight?I[R].fontweight+" ":"")+I[R].fontsize+"px "+I[R].fontfamily,E.textAlign="middle"==I[R].textanchor?"center":I[R].textanchor,E.fillText(I[R].text,I[R].x,I[R].y),I[R].stroke&&E.strokeText(I[R].text,I[R].x,I[R].y);break;case"translate":E.translate(I[R].x,I[R].y),this.processCanvasInstructions.call(this,I[R].draw,E),E.translate(-I[R].x,-I[R].y);break;case"rotate":var A=I[R].x,S=I[R].y;E.translate(A,S),E.rotate(I[R].degree*Math.PI/180),E.translate(-A,-S),this.processCanvasInstructions.call(this,I[R].draw,E),E.translate(A,S),E.rotate(-I[R].degree*Math.PI/180),E.translate(-A,-S);break;case"scale":E.scale(I[R].factor,I[R].factor),this.processCanvasInstructions.call(this,I[R].draw,E),E.scale(1/I[R].factor,1/I[R].factor)}void 0!=I[R].fillopacity&&(E.globalAlpha=1)}},this.asCanvas=function(){var I=document.createElement("canvas"),E=1;I.width=this.width*E,I.height=this.height*E;var R=I.getContext("2d");R.scale(E*this.size/100,E*this.size/100),R.translate(-(this.bbox.x1-this.strokeWidth),-(this.bbox.y1-this.strokeWidth));for(var C=0;C<this.drawInstructions.length;C++)this.processCanvasInstructions.call(this,this.drawInstructions[C],R);return I}},this.symbol.prototype.setOptions=function(I){for(var E in I)this[E]=I[E];return this}};MS.addMarkerParts(function(){var I=[],E=[],R=this.colors.frameColor[this.properties.affiliation],C={type:this.properties.baseGeometry.g.type};switch(C.type){case"path":C.d=this.properties.baseGeometry.g.d;break;case"circle":C.cx=this.properties.baseGeometry.g.cx,C.cy=this.properties.baseGeometry.g.cy,C.r=this.properties.baseGeometry.g.r}if(C.fill=this.colors.fillColor[this.properties.affiliation],C.fillopacity=this.fillOpacity,C.stroke=R,C.strokewidth=this.size>=10?this.strokeWidth:10,""==this.monoColor&&this.fill||!this.properties.notpresent||(C.strokedasharray=this.properties.notpresent),E.push(C),this.properties.space){var A={Friend:{type:"path",stroke:!1,fill:R,d:"M 100,30 C 90,30 80,35 68.65625,50 l 62.6875,0 C 120,35 110,30 100,30"},Hostile:{type:"path",stroke:!1,fill:R,d:"M67,50 L100,20 133,50 z"},Neutral:{type:"path",stroke:!1,fill:R,d:"M45,50 l0,-20 110,0 0,20 z"},Unknown:{type:"path",stroke:!1,fill:R,d:"M 100 22.5 C 85 22.5 70 31.669211 66 50 L 134 50 C 130 31.669204 115 22.5 100 22.5 z"}};E.push(A[this.properties.affiliation])}if(this.properties.activity){var A={Friend:{type:"path",stroke:!1,fill:R,d:"m 160,135 0,15 15,0 0,-15 z m -135,0 15,0 0,15 -15,0 z m 135,-85 0,15 15,0 0,-15 z m -135,0 15,0 0,15 -15,0 z"},Hostile:{type:"path",stroke:!1,fill:R,d:"M 100 28 L 89.40625 38.59375 L 100 49.21875 L 110.59375 38.59375 L 100 28 z M 38.6875 89.3125 L 28.0625 99.9375 L 38.6875 110.53125 L 49.28125 99.9375 L 38.6875 89.3125 z M 161.40625 89.40625 L 150.78125 100 L 161.40625 110.59375 L 172 100 L 161.40625 89.40625 z M 99.9375 150.71875 L 89.3125 161.3125 L 99.9375 171.9375 L 110.53125 161.3125 L 99.9375 150.71875"},Neutral:{type:"path",stroke:!1,fill:R,d:"m 140,140 15,0 0,15 -15,0 z m -80,0 0,15 -15,0 0,-15 z m 80,-80 0,-15 15,0 0,15 z m -80,0 -15,0 0,-15 15,0 z"},Unknown:{type:"path",stroke:!1,fill:R,d:"M 107.96875 31.46875 L 92.03125 31.71875 L 92.03125 46.4375 L 107.71875 46.4375 L 107.96875 31.46875 z M 47.03125 92.5 L 31.09375 92.75 L 31.09375 107.5 L 46.78125 107.5 L 47.03125 92.5 z M 168.4375 92.5 L 152.5 92.75 L 152.5 107.5 L 168.1875 107.5 L 168.4375 92.5 z M 107.96875 153.5625 L 92.03125 153.8125 L 92.03125 168.53125 L 107.71875 168.53125 L 107.96875 153.5625 z"}};E.push(A[this.properties.affiliation])}if(this.fill&&this.frame&&this.properties.notpresent&&!this.properties.unframed){var C={type:this.properties.baseGeometry.g.type};switch(C.type){case"path":C.d=this.properties.baseGeometry.g.d;break;case"circle":C.cx=this.properties.baseGeometry.g.cx,C.cy=this.properties.baseGeometry.g.cy,C.r=this.properties.baseGeometry.g.r}C.fill=!1,C.stroke=this.colors.white[this.properties.affiliation],C.strokewidth=parseFloat(this.strokeWidth)+1,C.strokedasharray=this.properties.notpresent,E.push(C)}return MS.buildingBlock(I,E,this.properties.baseGeometry.bbox)}),MS.addMarkerParts(function(){var I=[],E=[],R=this.properties.baseGeometry.bbox,C=R.y1,A=R.y2;if(this.properties.condition)if(this.properties.fill&&""==this.monoColor){var S={FullyCapable:"rgb(0,255,0)",Damaged:"rgb(255,255,0)",Destroyed:"rgb(255,0,0)",FullToCapacity:"rgb(0, 180, 240)"};!this.properties.frame&&this.properties.iconBottom&&(A=this.properties.iconBottom),A+=this.properties.mobility?25:5,E.push({type:"path",strokewidth:this.strokeWidth,fill:S[this.properties.condition],stroke:this.colors.frameColor[this.properties.affiliation],d:"M"+R.x1+","+A+" l"+R.width()+",0 0,15 -"+R.width()+",0 z"}),A+=15}else"Damaged"!=this.properties.condition&&"Destroyed"!=this.properties.condition||(E.push({type:"path",d:"M150,20 L50,180",strokewidth:2*this.strokeWidth,stroke:this.colors.frameColor[this.properties.affiliation]}),C=20,A=180),"Destroyed"==this.properties.condition&&E.push({type:"path",d:"M50,20 L150,180",strokewidth:2*this.strokeWidth,stroke:this.colors.frameColor[this.properties.affiliation]});return MS.buildingBlock(I,E,{y1:C,y2:A})}),MS.addMarkerParts(function(){var I=[],E=[],R=this.properties.baseGeometry.bbox,C=this.colors.frameColor[this.properties.affiliation];if(this.properties.dimensionUnknown&&C&&E.push({type:"text",text:"?",x:100,y:127,fill:C,fontfamily:"Arial",fontsize:80,fontweight:"bold",textanchor:"middle"}),this.properties.baseGeometry.g){var A=10;("Unknown"==this.properties.affiliation||"Hostile"==this.properties.affiliation&&"Subsurface"!=this.properties.dimension)&&(A=-10),"Exercise"==this.properties.context&&(this.properties.joker||this.properties.faker||E.push({type:"text",text:"X",x:R.x2+A,y:60,fill:C,fontfamily:"Arial",fontsize:35,fontweight:"bold",textanchor:"start"}),this.properties.joker&&E.push({type:"text",text:"J",x:R.x2+A,y:60,fill:C,fontfamily:"Arial",fontsize:35,fontweight:"bold",textanchor:"start"}),this.properties.faker&&E.push({type:"text",text:"K",x:R.x2+A,y:60,fill:C,fontfamily:"Arial",fontsize:35,fontweight:"bold",textanchor:"start"}),R={x2:R.x2+A+22,y1:35}),"Simulation"==this.properties.context&&(E.push({type:"text",text:"S",x:R.x2+A,y:60,fill:C,fontfamily:"Arial",fontsize:35,fontweight:"bold",textanchor:"start"}),R=new MS.bbox({x2:R.x2+A+22,y1:35}))}return MS.buildingBlock(I,E,R)}),MS.addMarkerParts(function(){var I=[],E=[],R=MS.bboxMax(this.properties.baseGeometry.bbox,{}),C=new MS.bbox;if(this.properties.headquarters){var A=100;["AirFriend","AirNeutral","GroundFriend","GroundNeutral","SeaNeutral","SubsurfaceNeutral"].indexOf(this.properties.dimension+this.properties.affiliation)>-1&&(A=R.y2),this.properties.dimensionType+this.properties.affiliationType=="SubsurfaceFriend"&&(A=R.y1),I.push({type:"path",d:"M"+R.x1+","+A+" L"+R.x1+","+(R.y2+MS.hqStafLength)}),C.y2=R.y2+MS.hqStafLength}if(this.properties.taskForce&&(I.push({type:"path",d:"M55,"+R.y1+" L55,"+(R.y1-40)+" 145,"+(R.y1-40)+" 145,"+R.y1}),C.y1=R.y1-40),this.properties.installation){var S=0;["AirHostile","GroundHostile","SeaHostile"].indexOf(this.properties.dimension+this.properties.affiliation)>-1&&(S=14),["AirUnknown","GroundUnknown","SeaUnknown","AirFriend","SeaFriend"].indexOf(this.properties.dimension+this.properties.affiliation)>-1&&(S=2),I.push({type:"path",fill:this.colors.frameColor[this.properties.affiliation],d:"M85,"+(R.y1+S-this.strokeWidth/2)+" 85,"+(R.y1-10)+" 115,"+(R.y1-10)+" 115,"+(R.y1+S-this.strokeWidth/2)+" 100,"+(R.y1-this.strokeWidth)+" Z"}),C=MS.bboxMax(C,{y1:R.y1-10})}if(this.properties.feintDummy&&(I.push({type:"path",strokedasharray:MS.dashArrays.feintDummy,d:"M"+R.x1+","+R.y1+" L100,-28 "+R.x2+","+R.y1}),C=MS.bboxMax(C,{y1:-28})),this.properties.echelon){var N=this.properties.installation?15:0,T={"Team/Crew":{g:[{type:"circle",cx:100,cy:R.y1-20,r:15},{type:"path",d:"M80,"+(R.y1-10)+"L120,"+(R.y1-30)}],bbox:{y1:R.y1-40-N}},Squad:{g:[{type:"circle",fill:this.colors.frameColor[this.properties.affiliation],cx:100,cy:R.y1-20,r:7.5}],bbox:{y1:R.y1-20-7.5-N}},Section:{g:[{type:"circle",fill:this.colors.frameColor[this.properties.affiliation],cx:115,cy:R.y1-20,r:7.5},{type:"circle",fill:this.colors.frameColor[this.properties.affiliation],cx:85,cy:R.y1-20,r:7.5}],bbox:{y1:R.y1-20-7.5-N}},"Platoon/detachment":{g:[{type:"circle",fill:this.colors.frameColor[this.properties.affiliation],cx:100,cy:R.y1-20,r:7.5},{type:"circle",fill:this.colors.frameColor[this.properties.affiliation],cx:70,cy:R.y1-20,r:7.5},{type:"circle",fill:this.colors.frameColor[this.properties.affiliation],cx:130,cy:R.y1-20,r:7.5}],bbox:{y1:R.y1-20-7.5-N}},"Company/battery/troop":{g:[{type:"path",d:"M100,"+(R.y1-10)+"L100,"+(R.y1-35)}],bbox:{y1:R.y1-40-N}},"Battalion/squadron":{g:[{type:"path",d:"M90,"+(R.y1-10)+"L90,"+(R.y1-35)},{type:"path",d:"M110,"+(R.y1-10)+"L110,"+(R.y1-35)}],bbox:{y1:R.y1-40-N}},"Regiment/group":{g:[{type:"path",d:"M100,"+(R.y1-10)+"L100,"+(R.y1-35)},{type:"path",d:"M120,"+(R.y1-10)+"L120,"+(R.y1-35)},{type:"path",d:"M80,"+(R.y1-10)+"L80,"+(R.y1-35)}],bbox:{y1:R.y1-40-N}},Brigade:{g:[{type:"path",d:"M87.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25"}],bbox:{y1:R.y1-15-25-N}},Division:{g:[{type:"path",d:"M70,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25   M105,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25"}],bbox:{y1:R.y1-15-25-N,x1:70,x2:130}},"Corps/MEF":{g:[{type:"path",d:"M52.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M87.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M122.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25"}],bbox:{y1:R.y1-15-25-N,x1:52.5,x2:147.5}},Army:{g:[{type:"path",d:"M35,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25   M70,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25   M105,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M140,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25"}],bbox:{y1:R.y1-15-25-N,x1:35,x2:165}},"Army Group/front":{g:[{type:"path",d:"M17.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M52.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M87.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M122.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25       M157.5,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25"}],bbox:{y1:R.y1-15-25-N,x1:17.5,x2:182.5}},"Region/Theater":{g:[{type:"path",d:"M0,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25   M35,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25   M70,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25   M105,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25    M140,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25     M175,"+(R.y1-10)+" l25,-25 m0,25 l-25,-25"}],bbox:{y1:R.y1-15-25-N,x1:0,x2:200}},Command:{g:[{type:"path",d:"M70,"+(R.y1-22.5)+" l25,0 m-12.5,12.5 l0,-25   M105,"+(R.y1-22.5)+" l25,0 m-12.5,12.5 l0,-25"}],bbox:{y1:R.y1-15-25-N,x1:70,x2:130}}};T.hasOwnProperty(this.properties.echelon)&&(I.push({type:"translate",x:0,y:-N,draw:T[this.properties.echelon].g}),C=MS.bboxMax(C,T[this.properties.echelon].bbox))}if(this.properties.mobility){this.frame||(R.y2=this.properties.iconBottom),"Neutral"==this.properties.affiliation&&("Towed"!=this.properties.mobility&&"Short towed array"!=this.properties.mobility&&"Long towed Array"!=this.properties.mobility||(R.y2+=8),"Over snow (prime mover)"!=this.properties.mobility&&"Sled"!=this.properties.mobility||(R.y2+=13));var M={"Wheeled limited cross country":{g:[{type:"path",d:"M 50,1 l 100,0"},{type:"circle",cx:55,cy:8,r:8},{type:"circle",cx:145,cy:8,r:8}],bbox:{y2:R.y2+16}},"Wheeled cross country":{g:[{type:"path",d:"M 50,1 l 100,0"},{type:"circle",cx:55,cy:8,r:8},{type:"circle",cx:145,cy:8,r:8},{type:"circle",cx:100,cy:8,r:8}],bbox:{y2:R.y2+16}},Tracked:{g:[{type:"path",d:"M 50,1 l 100,0 c15,0 15,15 0,15 l -100,0 c-15,0 -15,-15 0,-15"}],bbox:{y2:R.y2+18,x1:42,x2:168}},"Wheeled and tracked combination":{g:[{type:"circle",cx:55,cy:8,r:8},{type:"path",d:"M 80,1 l 70,0 c15,0 15,15 0,15 l -70,0 c-15,0 -15,-15 0,-15"}],bbox:{y2:R.y2+16,x2:168}},Towed:{g:[{type:"path",d:"M 60,1 l 80,0"},{type:"circle",cx:55,cy:3,r:8},{type:"circle",cx:145,cy:3,r:8}],bbox:{y2:R.y2+10}},Rail:{g:[{type:"path",d:"M 50,1 l 100,0"},{type:"circle",cx:55,cy:8,r:8},{type:"circle",cx:70,cy:8,r:8},{type:"circle",cx:130,cy:8,r:8},{type:"circle",cx:145,cy:8,r:8}],bbox:{y2:R.y2+16}},"Over snow (prime mover)":{g:[{type:"path",d:"M 50,-9 l10,10 90,0"}],bbox:{y2:R.y2+9}},Sled:{g:[{type:"path",d:"M 145,-12  c15,0 15,15 0,15 l -90,0 c-15,0 -15,-15 0,-15"}],bbox:{y2:R.y2+15,x1:42,x2:168}},"Pack animals":{g:[{type:"path",d:"M 80,20 l 10,-20 10,20 10,-20 10,20"}],bbox:{y2:R.y2+20}},Barge:{g:[{type:"path",d:"M 50,1 l 100,0 c0,10 -100,10 -100,0"}],bbox:{y2:R.y2+10}},Amphibious:{g:[{type:"path",d:"M 65,10 c 0,-10 10,-10 10,0 0,10 10,10 10,0\t0,-10 10,-10 10,0 0,10 10,10 10,0\t0,-10 10,-10 10,0 0,10 10,10 10,0\t0,-10 10,-10 10,0"}],bbox:{y2:R.y2+20}},"Short towed array":{g:[{type:"path",fill:this.colors.frameColor[this.properties.affiliation],d:"M 50,5 l 100,0 M50,0 l10,0 0,10 -10,0 z M150,0 l-10,0 0,10 10,0 z M100,0 l5,5 -5,5 -5,-5 z"}],bbox:{y2:R.y2+10}},"Long towed Array":{g:[{type:"path",fill:this.colors.frameColor[this.properties.affiliation],d:"M 50,5 l 100,0 M50,0 l10,0 0,10 -10,0 z M150,0 l-10,0 0,10 10,0 z M105,0 l-10,0 0,10 10,0 z M75,0 l5,5 -5,5 -5,-5 z  M125,0 l5,5 -5,5 -5,-5 z"}],bbox:{y2:R.y2+10}}};M.hasOwnProperty(this.properties.mobility)&&(I.push({type:"translate",x:0,y:R.y2,draw:M[this.properties.mobility].g}),C=MS.bboxMax(C,M[this.properties.mobility].bbox))}for(var t=0;t<I.length;t++)I[t].hasOwnProperty("fill")||(I[t].fill=!1),I[t].stroke=this.colors.iconColor[this.properties.affiliation],I[t].hasOwnProperty("strokewidth")||(I[t].strokewidth=this.strokeWidth);for(var t=0;t<E.length;t++)E[t].hasOwnProperty("fill")||(E[t].fill=!1),E[t].stroke=this.colors.iconColor[this.properties.affiliation],E[t].hasOwnProperty("strokewidth")||(E[t].strokewidth=this.strokeWidth);return MS.buildingBlock(I,E,C)}),MS.addMarkerParts(function(){var I=[],E=[],R=this.properties.baseGeometry.bbox,C=new MS.bbox;if(this.infoFields&&this.direction&&""!=this.direction){var A=95,S=[{type:"rotate",degree:this.direction,x:100,y:100,draw:[{type:"path",fill:this.colors.frameColor[this.properties.affiliation],stroke:this.colors.frameColor[this.properties.affiliation],strokewidth:this.strokeWidth,d:"M100,100 l0,-"+(A-20)+" -5,3 5,-15 5,15 -5,-3"}]}];C.y1=Math.min(100-Math.cos(this.direction/360*Math.PI*2)*A,100),C.y2=Math.max(100-Math.cos(this.direction/360*Math.PI*2)*A,100),C.x1=Math.min(100+Math.sin(this.direction/360*Math.PI*2)*A,100),C.x2=Math.max(100+Math.sin(this.direction/360*Math.PI*2)*A,100),"Ground"==this.properties.baseDimension&&(S=[{type:"translate",x:0,y:R.y2,draw:S},{type:"path",fill:this.colors.frameColor[this.properties.affiliation],stroke:this.colors.frameColor[this.properties.affiliation],strokewidth:this.strokeWidth,d:"M 100,"+R.y2+"l0,100"}],C.y2+=R.y2+parseFloat(this.strokeWidth)),E.push(S)}return MS.buildingBlock(I,E,C)}),MS.addMarkerParts(function(){function I(I){if(0==I.length)return 0;var E={" ":9,"!":10,'"':15,"#":17,$:17,"%":27,"&":22,"'":8,"(":10,")":10,"*":12,"+":18,",":9,"-":10,".":9,"/":9,0:17,1:17,2:17,3:17,4:17,5:17,6:17,7:17,8:17,9:17,":":10,";":10,"<":18,"=":18,">":18,"?":19,"@":30,A:22,B:22,C:22,D:22,E:21,F:19,G:24,H:22,I:9,J:17,K:22,L:19,M:25,N:22,O:24,P:21,Q:24,R:22,S:21,T:19,U:22,V:21,W:29,X:21,Y:21,Z:19,"[":10,"]":10,"^":18,_:17,"`":10,a:17,b:19,c:17,d:19,e:17,f:10,g:19,h:19,i:9,j:9,k:17,l:9,m:27,n:19,o:19,p:19,q:19,r:12,s:17,t:10,u:19,v:17,w:24,x:17,y:17,z:15,"{":12,"|":9,"}":12,"~":18},R=0;for(var C in I)R+=A/30*(E[I[C]]?E[I[C]]:28.5);return R+=T}var E=[],R=[],C=this.properties.baseGeometry.bbox,A=this.infoSize,S="Arial",N=new MS.bbox,T=20,M=this.quantity||this.reinforcedReduced||this.staffComments||this.additionalInformation||this.evaluationRating||this.combatEffectiveness||this.signatureEquipment||this.higherFormation||this.hostile||this.iffSif||this.sigint||this.uniqueDesignation||this.type||this.dtg||this.altitudeDepth||this.location||this.speed||this.specialHeadquarters||this.platformType||this.equipmentTeardownTime||this.commonIdentifier||this.auxiliaryEquipmentIndicator;if(this.infoFields&&M){this.specialHeadquarters&&R.push({type:"text",text:this.specialHeadquarters,x:100,y:110,textanchor:"middle",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),this.quantity&&(R.push({type:"text",text:this.quantity,x:100,y:C.y1-10,textanchor:"middle",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),N.y1=C.y1-10-A);var t,L={L1:"",L2:"",L3:"",L4:"",L5:"",R1:"",R2:"",R3:"",R4:"",R5:""};isNaN(this.SIDC)||"Air"!=this.properties.dimension||(L.R1=this.uniqueDesignation,L.R2=this.iffSif,L.R3=this.type,(this.speed||this.altitudeDepth)&&(t=[],this.speed&&t.push(this.speed),this.location&&t.push(this.altitudeDepth),L.R4=t.join(" ")),(this.staffComments||this.location)&&(t=[],this.staffComments&&t.push(this.staffComments),this.additionalInformation&&t.push(this.additionalInformation),L.R5=t.join(" "))),(isNaN(this.SIDC)||"Ground"==this.properties.dimension)&&(L.L1=this.dtg,(this.altitudeDepth||this.location)&&(t=[],this.altitudeDepth&&t.push(this.altitudeDepth),this.location&&t.push(this.location),L.L2=t.join(" ")),(this.type||this.platformType||this.commonIdentifier)&&(t=[],this.type&&t.push(this.type),this.platformType&&t.push(this.platformType),this.commonIdentifier&&t.push(this.commonIdentifier),L.L3=t.join(" ")),L.L4=this.uniqueDesignation,L.L5=this.speed,L.R1=this.reinforcedReduced,L.R2=this.staffComments,(this.additionalInformation||this.equipmentTeardownTime)&&(t=[],this.additionalInformation&&t.push(this.additionalInformation),this.equipmentTeardownTime&&t.push(this.equipmentTeardownTime),L.R3=t.join(" ")),L.R4=this.higherFormation,(this.evaluationRating||this.combatEffectiveness||this.signatureEquipment||this.hostile||this.iffSif)&&(t=[],this.evaluationRating&&t.push(this.evaluationRating),this.combatEffectiveness&&t.push(this.combatEffectiveness),this.signatureEquipment&&t.push(this.signatureEquipment),this.hostile&&t.push(this.hostile),this.iffSif&&t.push(this.iffSif),L.R5=t.join(" "))),isNaN(this.SIDC)||"Sea"!=this.properties.dimension||(L.R1=this.uniqueDesignation,L.R2=this.type,L.R3=this.iffSif,(this.staffComments||this.location)&&(t=[],this.staffComments&&t.push(this.staffComments),this.additionalInformation&&t.push(this.additionalInformation),L.R4=t.join(" ")),(this.location||this.speed)&&(t=[],this.location&&t.push(this.location),this.speed&&t.push(this.speed),L.R5=t.join(" "))),isNaN(this.SIDC)||"Subsurface"!=this.properties.dimension||(L.R1=this.uniqueDesignation,L.R2=this.type,L.R3=this.altitudeDepth,L.R4=this.staffComments,L.R5=this.additionalInformation),N.x1=C.x1-Math.max(this.specialHeadquarters?(I(this.specialHeadquarters)-this.properties.baseGeometry.bbox.width())/2:0,I(L.L1),I(L.L2),I(L.L3),I(L.L4),I(L.L5)),N.x2=C.x2+Math.max(this.specialHeadquarters?(I(this.specialHeadquarters)-this.properties.baseGeometry.bbox.width())/2:0,I(L.R1),I(L.R2),I(L.R3),I(L.R4),I(L.R5)),(L.L1||L.R1)&&(N.y1=Math.min(N.y1,100-2.5*A)),(L.L2||L.R2)&&(N.y1=Math.min(N.y1,100-1.5*A)),(L.L4||L.R4)&&(N.y2=Math.max(N.y2,100+1.7*A)),(L.L5||L.R5)&&(N.y2=Math.max(N.y2,100+2.7*A)),L.L1&&R.push({type:"text",text:L.L1,x:C.x1-T,y:100-1.5*A,textanchor:"end",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.L2&&R.push({type:"text",text:L.L2,x:C.x1-T,y:100-.5*A,textanchor:"end",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.L3&&R.push({type:"text",text:L.L3,x:C.x1-T,y:100+.5*A,textanchor:"end",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.L4&&R.push({type:"text",text:L.L4,x:C.x1-T,y:100+1.5*A,textanchor:"end",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.L5&&R.push({type:"text",text:L.L5,x:C.x1-T,y:100+2.5*A,textanchor:"end",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.R1&&R.push({type:"text",text:L.R1,x:C.x2+T,y:100-1.5*A,textanchor:"start",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.R2&&R.push({type:"text",text:L.R2,x:C.x2+T,y:100-.5*A,textanchor:"start",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.R3&&R.push({type:"text",text:L.R3,x:C.x2+T,y:100+.5*A,textanchor:"start",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.R4&&R.push({type:"text",text:L.R4,x:C.x2+T,y:100+1.5*A,textanchor:"start",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1}),L.R5&&R.push({type:"text",text:L.R5,x:C.x2+T,y:100+2.5*A,textanchor:"start",fontsize:A,fontfamily:S,fill:this.colors.frameColor[this.properties.affiliation],stroke:!1})}return MS.buildingBlock(E,R,N)}),MS.addMarkerParts(function(){var I=[],E=[],R=new MS.bbox,C=[],A=[],S=[],N=[];if(this.icon){var T=this.colors.fillColor[this.properties.affiliation],M=this.colors.fillColor.Neutral,t=this.colors.iconColor[this.properties.affiliation],L=this.colors.iconFillColor[this.properties.affiliation],O=this.colors.none[this.properties.affiliation],G=this.colors.black[this.properties.affiliation],e=this.colors.white[this.properties.affiliation],l=(MS._STD2525?"2525":"APP6")+","+this.properties.dimension+this.properties.affiliation+",frame:"+this.frame+",alternateMedal:"+this.alternateMedal+",colors:{fillcolor:"+T+",neutralColor"+M+",iconColor:"+t+",iconFillColor:"+L+",none:"+O+",black:"+G+",white:"+e+"}";if(MS._iconCache.hasOwnProperty(l)?C=MS._iconCache[l].iconParts:(MS._iconCache[l]={},C=MS._iconCache[l].iconParts=MS._geticnParts(this.properties,this.colors,MS._STD2525,this.monoColor,this.alternateMedal)),this.properties.numberSIDC||(["WMGX--","WMMX--","WMFX--","WMX---","WMSX--"].indexOf(this.properties.functionid)!=-1&&(R.y1=10,"Unknown"!=this.properties.affiliation&&(R.x2=this.properties.baseGeometry.bbox.x2+20)),MS._iconCache[l].hasOwnProperty("letterSIDC")?A=MS._iconCache[l].letterSIDC:"function"==typeof MS._getLetterSIDCicn?(MS._iconCache[l].letterSIDC=MS._getLetterSIDCicn(C,MS._STD2525),A=MS._iconCache[l].letterSIDC):console.warn("MS._getLetterSIDCicn() is not present, you will need to load functionality for letter based SIDCs")),this.properties.numberSIDC){var U=String(this.SIDC).substr(4,2);MS._iconCache[l].hasOwnProperty("numberSIDC")?MS._iconCache[l].numberSIDC.symbolSet.hasOwnProperty(U)?(A=MS._iconCache[l].numberSIDC.symbolSet[U].icn,S=MS._iconCache[l].numberSIDC.symbolSet[U].m1,N=MS._iconCache[l].numberSIDC.symbolSet[U].m2):"function"==typeof MS._getNumberSIDCicn?(MS._iconCache[l].numberSIDC.symbolSet[U]=MS._getNumberSIDCicn(U,C,MS._STD2525),A=MS._iconCache[l].numberSIDC.symbolSet[U].icn,S=MS._iconCache[l].numberSIDC.symbolSet[U].m1,N=MS._iconCache[l].numberSIDC.symbolSet[U].m2):console.warn("MS._getNumberSIDCicn() is not present, you will need to load functionality for number based SIDCs"):(MS._iconCache[l].numberSIDC={},MS._iconCache[l].numberSIDC.symbolSet={},"function"==typeof MS._getNumberSIDCicn?(MS._iconCache[l].numberSIDC.symbolSet[U]=MS._getNumberSIDCicn(U,C,MS._STD2525),A=MS._iconCache[l].numberSIDC.symbolSet[U].icn,S=MS._iconCache[l].numberSIDC.symbolSet[U].m1,N=MS._iconCache[l].numberSIDC.symbolSet[U].m2):console.warn("MS._getNumberSIDCicn() is not present, you will need to load functionality for number based SIDCs"))}var t=this.colors.iconColor[this.properties.affiliation];this.properties.numberSIDC?(E.push(A[this.properties.functionid.substr(0,6)]),A.hasOwnProperty(this.properties.functionid.substr(0,6))||E.push(A[this.properties.functionid.substr(0,4)+"00"]),"95"==this.properties.functionid.substr(4,2)&&E.push(C["GR.IC.FF.HEADQUARTERS OR HEADQUARTERS ELEMENT"]),"96"==this.properties.functionid.substr(4,2)&&E.push(C["GR.IC.FF.DIVISION AND BELOW SUPPORT"]),"97"==this.properties.functionid.substr(4,2)&&E.push(C["GR.IC.FF.CORPS SUPPORT"]),"98"==this.properties.functionid.substr(4,2)&&E.push(C["GR.IC.FF.THEATRE SUPPORT"]),E.push("00"!=this.properties.functionid.substr(6,2)?S[this.properties.functionid.substr(6,2)]:[]),E.push("00"!=this.properties.functionid.substr(8,2)?N[this.properties.functionid.substr(8,2)]:[])):A[this.SIDC.substr(0,1)+"-"+this.SIDC.substr(2,1)+"-"+this.SIDC.substr(4,6)]&&E.push(A[this.SIDC.substr(0,1)+"-"+this.SIDC.substr(2,1)+"-"+this.SIDC.substr(4,6)])}return MS.buildingBlock(I,E,R)}),MS._getLetterProperties=function(I,E){this.SIDC=this.SIDC.toUpperCase();var R=""!=this.SIDC.charAt(0)?this.SIDC.charAt(0):"-",C=""!=this.SIDC.charAt(1)?this.SIDC.charAt(1):"-",A=""!=this.SIDC.charAt(2)?this.SIDC.charAt(2):"-",S=""!=this.SIDC.charAt(3)?this.SIDC.charAt(3):"-",N=I.functionid=""!=this.SIDC.substr(4,6)?this.SIDC.substr(4,6):"------",T=""!=this.SIDC.charAt(10)?this.SIDC.charAt(10):"-",M=""!=this.SIDC.charAt(11)?this.SIDC.charAt(11):"-",t=(""!=this.SIDC.substr(12,2)?this.SIDC.substr(12,2):"--",""!=this.SIDC.charAt(14)?this.SIDC.charAt(14):"-",{"E-----":0,"EWM---":140,"EWMA--":140,"EWMAS-":140,EWMASR:140,EWMASE:140,"EWMAI-":140,EWMAIR:140,EWMAIE:140,"EWMAL-":140,EWMALR:140,EWMALE:140,"EWMAT-":153,EWMATR:153,EWMATE:153,"EWMS--":140,"EWMSS-":140,"EWMSI-":140,"EWMSL-":140,"EWMT--":140,"EWMTL-":140,"EWMTM-":140,"EWMTH-":140,"EWS---":140,"EWSL--":140,"EWSM--":140,"EWSH--":140,"EWX---":140,"EWXL--":140,"EWXM--":140,"EWXH--":140,"EWT---":140,"EWTL--":140,"EWTM--":140,"EWTH--":140,"EWR---":140,"EWRL--":140,"EWRM--":140,"EWRH--":140,"EWZ---":140,"EWZL--":140,"EWZM--":140,"EWZH--":140,"EWO---":140,"EWOL--":140,"EWOM--":140,"EWOH--":140,"EWH---":140,"EWHL--":140,"EWHLS-":130,"EWHM--":140,"EWHMS-":130,"EWHH--":140,"EWHHS-":130,"EWG---":140,"EWGL--":140,"EWGM--":140,"EWGH--":140,"EWGR--":140,"EWD---":140,"EWDL--":140,"EWDLS-":130,"EWDM--":140,"EWDMS-":130,"EWDH--":140,"EWDHS-":130,"EWA---":140,"EWAL--":140,"EWAM--":140,"EWAH--":140,"EV----":129,"EVA---":129,"EVAT--":130,"EVATL-":130,EVATLR:130,"EVATM-":130,EVATMR:130,"EVATH-":130,EVATHR:130,"EVAA--":130,"EVAAR-":130,"EVAI--":130,"EVAC--":130,"EVAS--":972.3621826171875,"EVAL--":140,"EVU---":130,"EVAB--":130,"EVUS--":140,"EVUSL-":140,"EVUSM-":140,"EVUSH-":140,"EVUL--":140,"EVUX--":140,"EVUR--":130,"EVUTL-":130,"EVUTH-":130,"EVUA--":130,"EVUAA-":130,"EVE---":129,"EVEB--":130,"EVEE--":130,"EVEC--":140,"EVEM--":130,"EVEMA-":130,"EVEMV-":130,"EVEMT-":130,"EVEML-":140,"EVEA--":120,"EVEAA-":130,"EVEAT-":130,EVEMSM:130,"EVED--":130,"EVEDA-":130,"EVES--":130,"EVER--":130,"EVEH--":140,"EVEF--":140,"EVD---":140,"EVT--":130,"EVC---":119,"EVCA--":132.5,"EVCAL-":132.5,"EVCAM-":132.5,"EVCAH-":132.5,"EVCO--":132.5,"EVCOL-":132.5,"EVCOM-":132.5,"EVCOH-":132.5,"EVCM--":132.5,"EVCML-":132.5,"EVCMM-":132.5,"EVCMH-":132.5,"EVCU--":132.5,"EVCUL-":132.5,"EVCUM-":132.5,"EVCUH-":132.5,"EVCJ--":132.5,"EVCJL-":132.5,"EVCJM-":132.5,"EVCJH-":132.5,"EVCT--":132.5,"EVCTL-":132.5,"EVCTM-":132.5,"EVCTH-":132.5,"EVCF--":132.5,"EVCFL-":132.5,"EVCFM-":132.5,"EVCFH-":132.5,"EVM---":125,"EVS---":129,"EVST--":129,"EVSR--":129,"EVSC--":129,"EVSP--":129,"EVSW--":129,"ES----":140,"ESR---":120,"ESE---":136,"EXI---":119,"EXL---":145,"EXN---":140,"EXF---":135,"EXM---":130,"EXMC--":122,"EXML--":122});return t.hasOwnProperty(N)&&(I.iconBottom=t[N]),["H","S","J","K"].indexOf(C)>-1&&(I.affiliation=E.affiliation[0]),["F","A","D","M"].indexOf(C)>-1&&(I.affiliation=E.affiliation[1]),["N","L"].indexOf(C)>-1&&(I.affiliation=E.affiliation[2]),["P","U","G","W","O"].indexOf(C)>-1&&(I.affiliation=E.affiliation[3]),["P","A"].indexOf(A)>-1&&(I.dimension=E.dimension[0]),["G","Z","F","X"].indexOf(A)>-1&&(I.dimension=E.dimension[1]),["S"].indexOf(A)>-1&&(I.dimension=E.dimension[2]),["U"].indexOf(A)>-1&&(I.dimension=E.dimension[3]),"P"==A&&"O"!=R&&(I.space=!0),"O"==R&&["V","O","R"].indexOf(A)>-1&&(I.activity=!0),"H"==T&&(I.installation=!0),this.frame&&"A"==S&&(I.notpresent=MS.dashArrays.anticipated),this.frame&&["P","A","S","G","M"].indexOf(C)>-1&&(I.notpresent=MS.dashArrays.pending),"C"==S&&(I.condition=E.status[2]),"D"==S&&(I.condition=E.status[3]),"X"==S&&(I.condition=E.status[4]),"F"==S&&(I.condition=E.status[5]),["G","W","D","L","M","J","K"].indexOf(C)>-1&&(I.context=E.context[1]),"O"==R&&(I.dimension=E.dimension[1]),"E"==R&&(I.dimension=E.dimension[1]),I.baseDimension=I.dimension,I.baseAffilation=I.affiliation,"J"==C&&(I.joker=!0),"K"==C&&(I.faker=!0),(I.joker||I.faker)&&(I.affiliation=E.affiliation[1]),"S"==R&&"G"==A&&"E"==N.charAt(0)&&(I.dimension=E.dimension[2]),"I"==R&&"G"==A&&(I.dimension=E.dimension[2]),"E"==R&&("O"==A&&["AB----","AE----","AF----","BB----","CB----","CC----","DB----","DDB---","DEB---","DFB---","DGB---","DHB---","DIB---","DJB---","DLB---","DMB---","DOB---","EA----","EB----","EC----","ED----","EE----"].indexOf(N)>-1||"F"==A&&["BA----","MA----","MC----"].indexOf(N)>-1)&&(I.dimension=E.dimension[2]),(["F","G","C","D"].indexOf(T)>-1||"H"==T&&"B"==M)&&(I.feintDummy=!0),["A","B","C","D"].indexOf(T)>-1&&(I.headquarters=!0),["E","B","G","D"].indexOf(T)>-1&&(I.taskForce=!0),"A"==M&&(I.echelon=E.echelonMobility[11]),"B"==M&&"H"!=T&&(I.echelon=E.echelonMobility[12]),"C"==M&&(I.echelon=E.echelonMobility[13]),"D"==M&&(I.echelon=E.echelonMobility[14]),"E"==M&&(I.echelon=E.echelonMobility[15]),"F"==M&&(I.echelon=E.echelonMobility[16]),"G"==M&&(I.echelon=E.echelonMobility[17]),"H"==M&&(I.echelon=E.echelonMobility[18]),"I"==M&&(I.echelon=E.echelonMobility[21]),"J"==M&&(I.echelon=E.echelonMobility[22]),"K"==M&&(I.echelon=E.echelonMobility[23]),"L"==M&&"N"!=T&&(I.echelon=E.echelonMobility[24]),"M"==M&&(I.echelon=E.echelonMobility[25]),"N"==M&&(I.echelon=E.echelonMobility[26]),"M"==T&&("O"==M&&(I.mobility=E.echelonMobility[31]),"P"==M&&(I.mobility=E.echelonMobility[32]),"Q"==M&&(I.mobility=E.echelonMobility[33]),"R"==M&&(I.mobility=E.echelonMobility[34]),"S"==M&&(I.mobility=E.echelonMobility[35]),"T"==M&&(I.mobility=E.echelonMobility[36]),"U"==M&&(I.mobility=E.echelonMobility[41]),"V"==M&&(I.mobility=E.echelonMobility[42]),"W"==M&&(I.mobility=E.echelonMobility[37]),"Y"==M&&(I.mobility=E.echelonMobility[51]),"Z"==M&&(I.mobility=E.echelonMobility[52])),"N"==T&&("S"==M&&(I.mobility=E.echelonMobility[61]),
"L"==M&&(I.mobility=E.echelonMobility[62])),("A"==A&&"C"==N.charAt(0)||"G"==A&&"EVC"==N.substring(0,3)||"S"==A&&"X"==N.charAt(0))&&(I.civilian=!0),"Z"!=A&&"X"!=A||(["P","U","F","N","H","A","S","G","W"].indexOf(C)>-1&&(I.dimensionUnknown=!0),["F","A"].indexOf(C)>-1&&(I.dimension="Sea"),["D","L","M","J","K"].indexOf(C)>-1&&(I.affiliation="none")),"S"==A&&["O-----","ED----","EP----","EV----","ZM----","ZN----","ZI----"].indexOf(N)>-1&&(I.frame=!1),"E"==R&&"N"==A&&["AA----","AB----","AC----","AD----","AE----","AG----","BB----","BC----","BF----","BM----","-C-----","CA----","CB----","CC----","CD----","CE----"].indexOf(N)>-1&&(I.frame=!1),"U"==A&&["WM----","WMD---","WMG---","WMGD--","WMGX--","WMGE--","WMGC--","WMGR--","WMGO--","WMM---","WMMD--","WMMX--","WMME--","WMMC--","WMMR--","WMMO--","WMF---","WMFD--","WMFX--","WMFE--","WMFC--","WMFR--","WMFO--","WMO---","WMOD--","WMX---","WME---","WMA---","WMC---","WMR---","WMB---","WMBD--","WMN---","WMS---","WMSX--","WMSD--","WD----","WDM---","WDMG--","WDMM--","ND----","E-----","V-----","X-----","NBS---","NBR---","NBW---","NM----","NA----"].indexOf(N)>-1&&(MS._STD2525?(I.fill=!1,"WD----"==I.functionid&&(I.fill=!0),["ND----","NBS---","NBR---","NBW---","NM----","NA----"].indexOf(N)>-1&&(I.fill=!0,I.frame=!1)):(I.frame=!1,["E-----","V-----","X-----"].indexOf(N)>-1&&(I.fill=!1,I.frame=!1))),"WAS"!=this.SIDC.substr(0,3)&&"G"!=this.SIDC.substr(0,1)&&"WOS"!=this.SIDC.substr(0,3)||(I.frame=!1),I},MS._getLetterSIDCicn=function(I,E){var R=[];R["S-P-------"]=[],R["S-P-S-----"]=[I["SP.I.FF.SATELLITE"]],R["S-P-V-----"]=[I["SP.I.FF.CREWED SPACE VEHICLE"]],R["S-P-T-----"]=[I["SP.I.FF.SPACE STATION"]],R["S-P-L-----"]=[I["SP.I.SPACE LAUNCH VEHICLE"]],R["S-A-------"]=[],R["S-A-M-----"]=[I["AR.I.MILITARY"]],R["S-A-MF----"]=[I["AR.I.FF.MILITARY FIXED WING"]],R["S-A-MFB---"]=[I["AR.I.BOMBER"]],R["S-A-MFF---"]=[I["AR.I.FIGHTER"]],R["S-A-MFFI--"]=[I["AR.I.FIGHTER INTERCEPTOR"]],R["S-A-MFT---"]=[I["AR.I.TRAINER"]],R["S-A-MFA---"]=[I["AR.I.ATTACK/STRIKE"]],R["S-A-MFL---"]=[I["AR.I.VSTOL"]],R["S-A-MFK---"]=[I["AR.I.TANKER"]],R["S-A-MFKB--"]=[I["AR.I.TANKER"],I["AIR.M1.BOOM-ONLY"]],R["S-A-MFKD--"]=[I["AR.I.TANKER"],I["AIR.M1.DROUGE-ONLY"]],R["S-A-MFC---"]=[I["AR.I.CARGO"]],R["S-A-MFCL--"]=[I["AR.I.CARGO"],I["AIR.M2.LIGHT"]],R["S-A-MFCM--"]=[I["AR.I.CARGO"],I["AIR.M2.MEDIUM"]],R["S-A-MFCH--"]=[I["AR.I.CARGO"],I["AIR.M2.HEAVY"]],R["S-A-MFJ---"]=[I["AR.I.JAMMER / ELECTRONIC COUNTER-MEASURES"]],R["S-A-MFO---"]=[I["AR.I.MEDICAL EVACUATION"]],R["S-A-MFR---"]=[I["AR.I.RECONNAISSANCE"]],R["S-A-MFRW--"]=[I["AR.I.AIRBORNE EARLY WARNING"]],R["S-A-MFRZ--"]=[I["AR.I.ELECTRONIC SUPPORT MEASURES"]],R["S-A-MFRX--"]=[(E?I["AR.I.2525 PHOTOGRAPHIC"]:I["AR.I.RECONNAISSANCE"],I["AIR.M2.PHOTOGRAPHIC"])],R["S-A-MFP---"]=[I["AR.I.PATROL"]],R["S-A-MFPN--"]=[I["AR.I.ANTISURFACE WARFARE"]],R["S-A-MFPM--"]=[I["AR.I.MINE COUNTERMEASURES"]],R["S-A-MFU---"]=[I["AR.I.UTILITY"]],R["S-A-MFUL--"]=[I["AR.I.UTILITY"],I["AIR.M2.LIGHT"]],R["S-A-MFUM--"]=[I["AR.I.UTILITY"],I["AIR.M2.MEDIUM"]],R["S-A-MFUH--"]=[I["AR.I.UTILITY"],I["AIR.M2.HEAVY"]],R["S-A-MFY---"]=[I["AR.I.COMMUNICATIONS"]],R["S-A-MFH---"]=[I["AR.I.PERSONNEL RECOVERY"]],R["S-A-MFD---"]=[I["AR.I.AIRBORNE COMMAND POST"]],R["S-A-MFQ---"]=[I["AR.I.UNMANNED AERIAL VEHICLE"]],R["S-A-MFQA--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.ATTACK"]],R["S-A-MFQB--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.BOMBER"]],R["S-A-MFQC--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.CARGO"]],R["S-A-MFQD--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.AIRBORNE COMMAND POST"]],R["S-A-MFQF--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.FIGHTER"]],R["S-A-MFQH--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.COMBAT SEARCH AND RESCUE"]],R["S-A-MFQJ--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.JAMMER / ELECTRONIC COUNTER-MEASURES"]],R["S-A-MFQK--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.TANKER"]],R["S-A-MFQL--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.VSTOL"]],R["S-A-MFQM--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-A-MFQI--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.MINE COUNTERMEASURES"]],R["S-A-MFQN--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.ANTISURFACE WARFARE"]],R["S-A-MFQP--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.PATROL"]],R["S-A-MFQR--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.RECONNAISSANCE"]],R["S-A-MFQRW-"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.AIRBORNE EARLY WARNING"]],R["S-A-MFQRZ-"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.ELECTRONIC SURVEILLANCE MEASURES"]],R["S-A-MFQRX-"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.PHOTOGRAPHIC"]],R["S-A-MFQS--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.ANTISUBMARINE WARFARE"]],R["S-A-MFQT--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.TRAINER"]],R["S-A-MFQU--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.UTILITY"]],R["S-A-MFQY--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.COMMUNICATIONS"]],R["S-A-MFQO--"]=[I["AR.I.UNMANNED AERIAL VEHICLE"],I["AIR.M1.MEDEVAC"]],R["S-A-MFS---"]=[I["AR.I.ANTISUBMARINE WARFARE"]],R["S-A-MFM---"]=[I["AR.I.SPECIAL OPERATIONS FORCES"]],R["S-A-MH----"]=[I["AR.I.MILITARY ROTARY WING"]],R["S-A-MHA---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.ATTACK"]],R["S-A-MHS---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.ANTISUBMARINE WARFARE"]],R["S-A-MHU---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.UTILITY"]],R["S-A-MHUL--"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.UTILITY"],I["AIR.M2.LIGHT"]],R["S-A-MHUM--"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.UTILITY"],I["AIR.M2.MEDIUM"]],R["S-A-MHUH--"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.UTILITY"],I["AIR.M2.HEAVY"]],R["S-A-MHI---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.MINE COUNTERMEASURES"]],R["S-A-MHH---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.COMBAT SEARCH AND RESCUE"]],R["S-A-MHR---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.RECONNAISSANCE"]],R["S-A-MHQ---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.UNMANNED AERIAL VEHICLE"]],R["S-A-MHC---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.CARGO"]],R["S-A-MHCL--"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.CARGO"],I["AIR.M2.LIGHT"]],R["S-A-MHCM--"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.CARGO"],I["AIR.M2.MEDIUM"]],R["S-A-MHCH--"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.CARGO"],I["AIR.M2.HEAVY"]],R["S-A-MHT---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.TRAINER"]],R["S-A-MHO---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.MEDEVAC"]],R["S-A-MHM---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-A-MHD---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.AIRBORNE COMMAND POST"]],R["S-A-MHK---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.TANKER"]],R["S-A-MHJ---"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.JAMMER / ELECTRONIC COUNTER-MEASURES"]],R["S-A-ML----"]=[I["AR.I.FF.MILITARY BALLOON"]],R["S-A-MV----"]=[I["AR.I.VIP"]],R["S-A-ME----"]=[I["AR.I.ESCORT"]],R["S-A-W-----"]=[I["AIR.MISSILE.ICON"]],R["S-A-WM----"]=[I["AIR.MISSILE.ICON"]],R["S-A-WMS---"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.SURFACE"],I["AIR.MISSILE.M2.LAUNCHED"]],R["S-A-WMSS--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.SURFACE"],I["AIR.MISSILE.M2.SURFACE"]],R["S-A-WMSA--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.SURFACE"],I["AIR.MISSILE.M2.AIR"]],R["S-A-WMSU--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.SURFACE"],I["AIR.MISSILE.M2.SUBSURFACE"]],R["S-A-WMSB--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.IC.ANTIBALLISTIC MISSILE"]],R["S-A-WMA---"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.AIR"],I["AIR.MISSILE.M2.LAUNCHED"]],R["S-A-WMAS--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.AIR"],I["AIR.MISSILE.M2.SURFACE"]],R["S-A-WMAA--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.AIR"],I["AIR.MISSILE.M2.AIR"]],R["S-A-WMAP--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.AIR"],I["AIR.MISSILE.M2.SPACE"]],R["S-A-WMU---"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.SUBSURFACE"],I["AIR.MISSILE.M2.SURFACE"]],R["S-A-WML---"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.LAND"],I["AIR.MISSILE.M2.AIR"]],R["S-A-WMCM--"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.CRUISE"],I["AIR.MISSILE.M2.MISSILE"]],R["S-A-WMB---"]=[I["AIR.MISSILE.ICON"],I["AIR.MISSILE.M1.BALLISTIC"],I["AIR.MISSILE.M2.MISSILE"]],R["S-A-WB----"]=[I["AIR.MISSILE.IC.BOMB"]],R["S-A-WD----"]=[I["AR.I.AIR DECOY"]],R["S-A-C-----"]=[I["AR.I.CIVILIAN"]],R["S-A-CF----"]=[I["AR.I.FF.CIVILIAN FIXED WING"]],R["S-A-CH----"]=[I["AR.I.FF.CIVILIAN ROTARY WING"]],R["S-A-CL----"]=[I["AR.I.FF.CIVILIAN BALLOON"]],R["S-G-------"]=[],R["S-G-U-----"]=[],R["S-G-UC----"]=[I["GR.IC.COMBAT"]],R["S-G-UCD---"]=[I["GR.IC.FF.AIR DEFENCE"]],R["S-G-UCDS--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE SHORT RANGE"]],R["S-G-UCDSC-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.AIR DEFENSE CHAPARRAL"]],R["S-G-UCDSS-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.AIR DEFENSE STINGER"]],R["S-G-UCDSV-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.FF.MAIN GUN SYSTEM"],I["GR.IC.AIR DEFENSE VULCAN"]],R["S-G-UCDM--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"]],R["S-G-UCDML-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.MISSILE.LIGHT"]],R["S-G-UCDMLA"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UCDMM-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.MISSILE.MEDIUM"]],R["S-G-UCDMH-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.MISSILE.HEAVY"]],R["S-G-UCDH--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE H/MAD"]],R["S-G-UCDHH-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.AIR DEFENSE H/MAD HAWK"]],R["S-G-UCDHP-"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE MISSILE"],I["GR.IC.AIR DEFENSE H/MAD PATRIOT"]],R["S-G-UCDG--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE GUN UNIT"]],R["S-G-UCDC--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE COMPOSITE"]],R["S-G-UCDT--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE TARGETING UNIT"]],R["S-G-UCDO--"]=[I["GR.IC.FF.AIR DEFENCE"],I["GR.IC.AIR DEFENSE THEATER MISSILE DEFENSE UNIT"]],R["S-G-UCA---"]=[I["GR.IC.ARMOUR"]],R["S-G-UCAT--"]=[I["GR.IC.ARMOUR"]],R["S-G-UCATA-"]=[I["GR.IC.ARMOUR"],I["GR.M2.AIRBORNE"]],R["S-G-UCATW-"]=[I["GR.IC.ARMOUR"],I["GR.IC.FF.AMPHIBIOUS"]],R["S-G-UCATWR"]=[I["GR.IC.ARMOUR"],I["GR.IC.FF.AMPHIBIOUS"],I["GR.M2.RECOVERY (MAINTENANCE)"]],R["S-G-UCATL-"]=[I["GR.IC.ARMOUR"],I["GR.M2.LIGHT"]],R["S-G-UCATM-"]=[I["GR.IC.ARMOUR"],I["GR.M2.MEDIUM"]],R["S-G-UCATH-"]=[I["GR.IC.ARMOUR"],I["GR.M2.HEAVY"]],R["S-G-UCATR-"]=[I["GR.IC.ARMOUR"],I["GR.M2.RECOVERY (MAINTENANCE)"]],R["S-G-UCAW--"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"]],R["S-G-UCAWS-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCAWA-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.M2.AIRBORNE"]],R["S-G-UCAWW-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.IC.FF.AMPHIBIOUS"]],R["S-G-UCAWWR"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.IC.FF.AMPHIBIOUS"],I["GR.M2.RECOVERY (MAINTENANCE)"]],R["S-G-UCAWL-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.M2.LIGHT"]],R["S-G-UCAWM-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.M2.MEDIUM"]],R["S-G-UCAWH-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.M2.HEAVY"]],R["S-G-UCAWR-"]=[I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],I["GR.M2.RECOVERY (MAINTENANCE)"]],R["S-G-UCAA--"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"]],R["S-G-UCAAD-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"]],R["S-G-UCAAL-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.M2.LIGHT"]],R["S-G-UCAAM-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.M2.AIRBORNE"]],R["S-G-UCAAS-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCAAU-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.M2.MOUNTAIN"]],R["S-G-UCAAC-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.M2.ARCTIC"]],R["S-G-UCAAA-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.IC.ARMOUR"]],R["S-G-UCAAAT"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.IC.ARMOUR"]],R["S-G-UCAAAW"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"]],R["S-G-UCAAAS"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.IC.ARMOUR"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCAAO-"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UCAAOS"]=[I["GR.IC.FF.ANTITANK/ANTIARMOUR"],I["GR.IC.FF.MOTORIZED"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCV---"]=[I["GR.IC.AVIATION ROTARY WING"]],R["S-G-UCVF--"]=[I["GR.IC.AVIATION FIXED WING"]],R["S-G-UCVFU-"]=[I["GR.IC.AVIATION FIXED WING"],I["GR.M1.UTILITY"]],R["S-G-UCVFA-"]=[I["GR.IC.AVIATION FIXED WING"],I["GR.M1.ATTACK"]],R["S-G-UCVUTP"]=[I["GR.IC.AVIATION TACTICAL AIR CONTROL PARTY"]],R["S-G-UCVUFC"]=[I["GR.IC.AVIATION FORWARD AIR CONTROLLER"]],R["S-G-UCVFR-"]=[I["GR.IC.AVIATION FIXED WING"],I["GR.M1.RECON"]],R["S-G-UCVR--"]=[I["GR.IC.AVIATION ROTARY WING"]],E&&R["S-G-UCVR--"].push({type:"path",d:"M100,100 L100,140"}),R["S-G-UCVRA-"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.ATTACK"]],R["S-G-UCVRS-"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.RECON"]],R["S-G-UCVRW-"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.ANTISUBMARINE WARFARE"]],R["S-G-UCVRU-"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.UTILITY"]],R["S-G-UCVRUL"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.UTILITY"],I["GR.M2.LIGHT"]],R["S-G-UCVRUM"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.UTILITY"],I["GR.M2.MEDIUM"]],R["S-G-UCVRUH"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.UTILITY"],I["GR.M2.HEAVY"]],R["S-G-UCVRUC"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.COMMAND AND CONTROL"]],R["S-G-UCVRUE"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.MEDEVAC"]],R["S-G-UCVRM-"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.MINE COUNTERMEASURE"]],R["S-G-UCVS--"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.PERSONNEL RECOVERY"]],R["S-G-UCVC--"]=[I["GR.IC.AVIATION COMPOSITE"]],R["S-G-UCVV--"]=[I["GR.IC.AVIATION FIXED WING"],I["GR.M2.VERTICAL OR SHORT TAKE-OFF AND LANDING "]],R["S-G-UCVU--"]=[I["GR.IC.UNMANNED SYSTEMS"]],R["S-G-UCVUF-"]=[I["GR.IC.AVIATION FIXED WING"],I["GR.M1.UNMANNED AERIAL VEHICLE"]],R["S-G-UCVUR-"]=[I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.UNMANNED AERIAL VEHICLE"]],R["S-G-UCI---"]=[I["GR.IC.FF.INFANTRY"]],R["S-G-UCIL--"]=[I["GR.IC.FF.INFANTRY"],I["GR.M2.LIGHT"]],R["S-G-UCIM--"]=[I["GR.IC.FF.INFANTRY"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UCIO--"]=[I["GR.IC.FF.INFANTRY"],I["GR.M2.MOUNTAIN"]],R["S-G-UCIA--"]=[I["GR.IC.FF.INFANTRY"],I["GR.M2.AIRBORNE"]],R["S-G-UCIS--"]=[I["GR.IC.FF.INFANTRY"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCIZ--"]=[I["GR.IC.FF.INFANTRY"],I["GR.IC.ARMOUR"]],R["S-G-UCIN--"]=[I["GR.IC.FF.INFANTRY"],I["GR.IC.FF.NAVAL"]],R["S-G-UCII--"]=[I["GR.IC.FF.INFANTRY"],I["GR.IC.ARMOUR"],I["GR.IC.FF.MAIN GUN SYSTEM"]],R["S-G-UCIC--"]=[I["GR.IC.FF.INFANTRY"],I["GR.M2.ARCTIC"]],R["S-G-UCE---"]=[I["GR.IC.ENGINEER"]],R["S-G-UCEC--"]=[I["GR.IC.ENGINEER"],I["GR.M1.COMBAT"]],R["S-G-UCECS-"]=[I["GR.IC.ENGINEER"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCECA-"]=[I["GR.IC.ENGINEER"],I["GR.M2.AIRBORNE"]],R["S-G-UCECC-"]=[I["GR.IC.ENGINEER"],I["GR.M2.ARCTIC"]],R["S-G-UCECL-"]=[I["GR.IC.ENGINEER"],I["GR.M1.COMBAT"],I["GR.M2.LIGHT"]],R["S-G-UCECM-"]=[I["GR.IC.ENGINEER"],I["GR.M1.COMBAT"],I["GR.M2.MEDIUM"]];R["S-G-UCECH-"]=[I["GR.IC.ENGINEER"],I["GR.M1.COMBAT"],I["GR.M2.HEAVY"]];return R["S-G-UCECT-"]=[MS.scale(.7,I["GR.IC.ENGINEER"]),I["GR.IC.ARMOUR"]],R["S-G-UCECW-"]=[I["GR.IC.ENGINEER"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UCECO-"]=[I["GR.IC.ENGINEER"],I["GR.M2.MOUNTAIN"]],R["S-G-UCECR-"]=[I["GR.IC.ENGINEER"],I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UCEN--"]=[I["GR.IC.ENGINEER"],I["GR.M1.CONSTRUCTION"]],R["S-G-UCENN-"]=[I["GR.IC.ENGINEER"],I["GR.M1.NAVAL"]],R["S-G-UCF---"]=[I["GR.IC.FIELD ARTILLERY"]],R["S-G-UCFH--"]=[I["GR.IC.FIELD ARTILLERY"]],R["S-G-UCFHE-"]=[MS.scale(.8,I["GR.IC.FIELD ARTILLERY"]),I["GR.IC.ARMOUR"]],R["S-G-UCFHS-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCFHA-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.AIRBORNE"]],R["S-G-UCFHC-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.ARCTIC"]],R["S-G-UCFHO-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.MOUNTAIN"]],R["S-G-UCFHL-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.LIGHT"]],R["S-G-UCFHM-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.MEDIUM"]],R["S-G-UCFHH-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.HEAVY"]],R["S-G-UCFHX-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.IC.FF.AMPHIBIOUS"]],R["S-G-UCFR--"]=[I["GR.IC.FF.FIELD ARTILLERY ROCKET"]],R["S-G-UCFRS-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.SINGLE ROCKET LAUNCHER"]],R["S-G-UCFRS-"]=[MS.scale(.8,I["GR.IC.FIELD ARTILLERY"]),I["GR.M1.SINGLE ROCKET LAUNCHER"],E?[]:I["GR.IC.ARMOUR"]],R["S-G-UCFRSS"]=[MS.scale(.8,I["GR.IC.FIELD ARTILLERY"]),I["GR.M1.SINGLE ROCKET LAUNCHER"],I["GR.IC.ARMOUR"]],R["S-G-UCFRSR"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.SINGLE ROCKET LAUNCHER"],I["GR.M2.TRUCK"]],R["S-G-UCFRST"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.SINGLE ROCKET LAUNCHER"],I["GR.M2.TOWED"]],R["S-G-UCFRM-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.MULTIPLE ROCKET LAUNCHER"],E?"":I["GR.M2.CROSS-COUNTRY TRUCK"]],R["S-G-UCFRMS"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.MULTIPLE ROCKET LAUNCHER"],I["GR.IC.ARMOUR"]],R["S-G-UCFRMR"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.MULTIPLE ROCKET LAUNCHER"],I["GR.M2.TRUCK"]],R["S-G-UCFRMT"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.MULTIPLE ROCKET LAUNCHER"],I["GR.M2.TOWED"]],R["S-G-UCFT--"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M2.TARGET ACQUISITION"]],R["S-G-UCFTR-"]=[MS.translate(-30,10,MS.scale(.6,I["GR.IC.FIELD ARTILLERY"])),I["GR.IC.RADAR"]],R["S-G-UCFTS-"]=[MS.translate(0,30,MS.scale(.7,I["GR.IC.FIELD ARTILLERY"])),I["GR.IC.FF.SOUND"]],R["S-G-UCFTF-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.M1.OPTICAL"],I["GR.M2.TARGET ACQUISITION"]],R["S-G-UCFTC-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.IC.FF.MOTORIZED"],I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UCFTCD"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UCFTCM"]=[MS.scale(.8,I["GR.IC.FIELD ARTILLERY"]),I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.ARMOUR"]],R["S-G-UCFTA-"]=[I["GR.IC.FIELD ARTILLERY"],I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.AVIATION ROTARY WING"],I["GR.M1.NAVAL"]],R["S-G-UCFM--"]=[I["GR.IC.MORTAR"]],R["S-G-UCFMS-"]=[I["GR.IC.MORTAR"],I["GR.M2.TRACKED"]],R["S-G-UCFMW-"]=R["S-G-UCFMSW"]=[I["GR.IC.MORTAR"],I["GR.M2.TRUCK"]],R["S-G-UCFMT-"]=[I["GR.IC.MORTAR"],I["GR.M2.TOWED"]],R["S-G-UCFMTA"]=[I["GR.IC.MORTAR"],I["GR.M2.TOWED"],I["GR.M2.AIRBORNE"]],R["S-G-UCFMTS"]=[I["GR.IC.MORTAR"],I["GR.M2.TOWED"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCFMTC"]=[I["GR.IC.MORTAR"],I["GR.M2.ARCTIC"]],R["S-G-UCFMTO"]=[I["GR.IC.MORTAR"],I["GR.M2.TOWED"],I["GR.M2.MOUNTAIN"]],R["S-G-UCFML-"]=[MS.translate(0,-20,I["GR.IC.MORTAR"]),I["GR.IC.FF.AMPHIBIOUS"]],R["S-G-UCFS--"]=[I["GR.IC.SURVEY"]],R["S-G-UCFSS-"]=[I["GR.IC.SURVEY"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCFSA-"]=[I["GR.IC.SURVEY"],I["GR.M2.AIRBORNE"]],R["S-G-UCFSL-"]=[I["GR.IC.SURVEY"],I["GR.M2.LIGHT"]],R["S-G-UCFSO-"]=[I["GR.IC.SURVEY"],I["GR.M2.MOUNTAIN"]],R["S-G-UCFO--"]=[I["GR.IC.METEOROLOGICAL"]],R["S-G-UCFOS-"]=[I["GR.IC.METEOROLOGICAL"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCFOA-"]=[I["GR.IC.METEOROLOGICAL"],I["GR.M2.AIRBORNE"]],R["S-G-UCFOL-"]=[I["GR.IC.METEOROLOGICAL"],I["GR.M2.LIGHT"]],R["S-G-UCFOO-"]=[I["GR.IC.METEOROLOGICAL"],I["GR.M2.MOUNTAIN"]],R["S-G-UCR---"]=[I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UCRH--"]=[I["GR.IC.FF.HORSE"]],R["S-G-UCRV--"]=[I["GR.IC.FF.RECONNAISSANCE"],E?I["GR.M2.CAVALRY"]:[]],R["S-G-UCRVA-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.ARMOUR"]],R["S-G-UCRVM-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UCRVG-"]=[I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UCRVO-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.AVIATION ROTARY WING"]],R["S-G-UCRC--"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.M2.ARCTIC"]],R["S-G-UCRS--"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.M1.AIRMOBILE/AIR ASSAULT"]],R["S-G-UCRA--"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.M2.AIRBORNE"]],R["S-G-UCRO--"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.M2.MOUNTAIN"]],R["S-G-UCRL--"]=R["S-G-UCRLL-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.M2.LIGHT"]],R["S-G-UCRR--"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.FF.AMPHIBIOUS"]],R["S-G-UCRRD-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.FF.AMPHIBIOUS"],E?I["GR.M1.DIVISION"]:[]],R["S-G-UCRRF-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.FF.AMPHIBIOUS"],I["GR.M1.FORCE"]],R["S-G-UCRRL-"]=[I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"]],R["S-G-UCRX--"]=[I["GR.IC.FF.RECONNAISSANCE"],E?I["GR.M2.LONG RANGE SURVEILLANCE"]:[MS.translate(0,-20,I["GR.M2.MOUNTAIN"]),I["GR.M2.LONG RANGE"]]],R["S-G-UCM---"]=[I["GR.IC.MISSILE"]],R["S-G-UCMT--"]=[I["GR.IC.MISSILE"],I["GR.M2.TACTICAL MISSILE"]],R["S-G-UCMS--"]=[I["GR.IC.MISSILE"],I["GR.M2.STRATEGIC MISSILE"]],R["S-G-UCS---"]=[I["GR.IC.SECURITY"]],R["S-G-UCSW--"]=[MS.translate(0,-20,I["GR.IC.SECURITY"]),I["GR.IC.FF.AMPHIBIOUS"]],R["S-G-UCSG--"]=[I["GR.IC.SECURITY"]],R["S-G-UCSGD-"]=[I["GR.IC.SECURITY"],I["GR.IC.FF.INFANTRY"]],R["S-G-UCSGM-"]=[I["GR.IC.SECURITY"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UCSGA-"]=[I["GR.IC.SECURITY"],I["GR.IC.ARMOUR"]],R["S-G-UCSM--"]=[I["GR.IC.SECURITY"],I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"]],R["S-G-UCSR--"]=[I["GR.IC.SECURITY"],I["GR.M2.RAILROAD"]],R["S-G-UCSA--"]=[MS.translate(0,-20,I["GR.IC.SECURITY"]),I["GR.IC.AVIATION ROTARY WING"]],R["S-G-UU----"]=[I["GR.IC.COMBAT SUPPORT"]],R["S-G-UUA---"]=[I["GR.IC.CBRN"]],R["S-G-UUAC--"]=[I["GR.IC.CBRN"],I["GR.M1.CHEMICAL"]],R["S-G-UUACC-"]=[I["GR.IC.CBRN"],I["GR.M1.SMOKE/DECON"]],R["S-G-UUACCK"]=[I["GR.IC.CBRN"],I["GR.M1.SMOKE/DECON"],I["GR.IC.ARMOUR"]],R["S-G-UUACCM"]=[I["GR.IC.CBRN"],I["GR.M1.SMOKE/DECON"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UUACS-"]=[I["GR.IC.CBRN"],I["GR.M1.SMOKE"]],R["S-G-UUACSM"]=[I["GR.IC.CBRN"],I["GR.M1.SMOKE"],I["GR.IC.FF.MOTORIZED"]],R["S-G-UUACSA"]=[I["GR.IC.CBRN"],I["GR.M1.SMOKE"],I["GR.IC.ARMOUR"]],R["S-G-UUACR-"]=[I["GR.IC.CBRN"],I["GR.M1.CHEMICAL"],I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UUACRW"]=[I["GR.IC.CBRN"],I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"]],R["S-G-UUACRS"]=[I["GR.IC.CBRN"],I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"],E?I["GR.M1.CHEMICAL SURVEILLANCE"]:[]],R["S-G-UUAN--"]=[I["GR.IC.CBRN"],I["GR.M1.NUCLEAR"]],R["S-G-UUAB--"]=[I["GR.IC.CBRN"],I["GR.M1.BIOLOGICAL"]],R["S-G-UUABR-"]=[I["GR.IC.CBRN"],I["GR.M1.BIOLOGICAL"],I["GR.IC.FF.MOTORIZED"],I["GR.IC.FF.RECONNAISSANCE"]],R["S-G-UUAD--"]=[I["GR.IC.CBRN"],I["GR.M1.DECONTAMINATION"]],R["S-G-UUADT-"]=[I["GR.IC.CBRN"],I["GR.M1.DECONTAMINATION"],I["GR.M2.TROOP"]],R["S-G-UUADE-"]=[I["GR.IC.CBRN"],I["GR.M1.DECONTAMINATION"],I["GR.M2.EQUIPMENT"]],R["S-G-UUADET"]=[I["GR.IC.CBRN"],I["GR.M1.DECONTAMINATION"],I["GR.M2.EQUIMENT/TROOP"]],R["S-G-UUAL--"]=[I["GR.IC.CBRN"],I["GR.M2.LABORATORY"]],R["S-G-UUM---"]=[I["GR.IC.MILITARY INTELLIGENCE"]],R["S-G-UUMA--"]=[I["GR.IC.MILITARY INTELLIGENCE"],I["GR.M1.UNMANNED AERIAL VEHICLE"]],R["S-G-UUMS--"]=[MS.translate(-25,0,I["GR.IC.MILITARY INTELLIGENCE"]),I["GR.IC.RADIO"]],R["S-G-UUMSE-"]=[I["GR.IC.ELECTRONIC WARFARE"]],R["S-G-UUMSEA"]=[I["GR.IC.ELECTRONIC WARFARE"],I["GR.IC.FF.RECONNAISSANCE"],I["GR.IC.ARMOUR"],I["GR.M2.WHEELED"]],R["S-G-UUMSED"]=[I["GR.IC.ELECTRONIC WARFARE"],I["GR.IC.FF.DIRECTION FINDING"]],R["S-G-UUMSEI"]=[I["GR.IC.ELECTRONIC WARFARE"],I["GR.IC.FF.INTERCEPT"]],R["S-G-UUMSEJ"]=[I["GR.IC.ELECTRONIC WARFARE"],I["GR.IC.FF.JAMMING"]],R["S-G-UUMSET"]=[I["GR.IC.ELECTRONIC WARFARE"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-UUMSEC"]=[I["GR.IC.ELECTRONIC WARFARE"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-UUMC--"]=[I["GR.IC.COUNTER-INTELLIGENCE"]],R["S-G-UUMR--"]=[I["GR.IC.MILITARY INTELLIGENCE"]],R["S-G-UUMRG-"]=[I["GR.IC.MILITARY INTELLIGENCE"],I["GR.M1.RADAR"]],R["S-G-UUMRS-"]=[MS.translate(0,30,MS.scale(.8,I["GR.IC.MILITARY INTELLIGENCE"])),I["GR.IC.FF.SENSOR"]],R["S-G-UUMRSS"]=[MS.translate(0,30,MS.scale(.8,I["GR.IC.MILITARY INTELLIGENCE"])),I["GR.IC.FF.SENSOR"],I["GR.M1.SENSOR CONTROL MODULE"]],R["S-G-UUMRX-"]=[I["GR.IC.MILITARY INTELLIGENCE"],I["GR.M1.GROUND STATION MODULE"]],R["S-G-UUMMO-"]=[I["GR.IC.MILITARY INTELLIGENCE"],I["GR.M1.METEOROLOGICAL"]],R["S-G-UUMO--"]=[I["GR.IC.MILITARY INTELLIGENCE"],I["GR.M1.OPERATIONS"]],R["S-G-UUMT--"]=[I["GR.IC.MILITARY INTELLIGENCE"],I["GR.M1.TACTICAL EXPLOITATION"]],R["S-G-UUMQ--"]=[I["GR.IC.INTERROGATION"]],R["S-G-UUMJ--"]=[I["GR.IC.JOINT INTELLIGENCE CENTRE"]],R["S-G-UUL---"]=[I["GR.IC.LAW ENFORCEMENT"],I["GR.IC.MILITARY POLICE"]],R["S-G-UULS--"]=[I["GR.IC.SHORE PATROL"]],R["S-G-UULM--"]=[I["GR.IC.MILITARY POLICE"]],R["S-G-UULC--"]=[I["GR.IC.LAW ENFORCEMENT"]],R["S-G-UULF--"]=[MS.translate(0,-20,I["GR.IC.SHORE PATROL"]),I["GR.IC.AVIATION FIXED WING"]],R["S-G-UULD--"]=[I["GR.IC.CRIMINAL INVESTIGATION DIVISION"]],R["S-G-UUS---"]=[I["GR.IC.FF.SIGNAL"]],R["S-G-UUSA--"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.AREA"]],R["S-G-UUSC--"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.COMMUNICATIONS CONTINGENCY PACKAGE"]],R["S-G-UUSCL-"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.LARGE COMMUNICATIONS CONTINGENCY PACKAGE"],I["GR.M2.AIRBORNE"]],R["S-G-UUSO--"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.OPERATIONS"]],R["S-G-UUSF--"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.FORWARD"]],R["S-G-UUSM--"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.MOBILE SUBSCRIBER EQUIPMENT"]],R["S-G-UUSMS-"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.SMALL EXTENSION NODE"]],R["S-G-UUSML-"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.LARGE EXTENSION NODE"]],R["S-G-UUSMN-"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.NODE CENTRE"]],R["S-G-UUSR--"]=[I["GR.IC.FF.SIGNAL"],I["GR.IC.RADIO"]],R["S-G-UUSRS-"]=[I["GR.IC.FF.SIGNAL"],I["SP.I.FF.SATELLITE"]],R["S-G-UUSRT-"]=[I["GR.IC.FF.SIGNAL"],I["GR.IC.RADIO TELETYPE CENTRE"]],R["S-G-UUSRW-"]=[I["GR.IC.FF.SIGNAL"],I["GR.IC.RADIO RELAY"]],R["S-G-UUSS--"]=[I["GR.IC.FF.SIGNAL"],I["GR.M1.SIGNAL SUPPORT"]],R["S-G-UUSW--"]=[I["GR.IC.FF.SIGNAL"],I["GR.IC.TELEPHONE SWITCH"]],R["S-G-UUSX--"]=[I["GR.IC.ELECTRONIC RANGING"]],R["S-G-UUI---"]=[I["GR.IC.INFORMATION OPERATIONS"]],R["S-G-UUP---"]=R["S-G-UUX---"]=[I["GR.IC.FF.AMPHIBIOUS"],I["GR.M1.LANDING SUPPORT"]],R["S-G-UUE---"]=[I["GR.IC.EXPLOSIVE ORDNANCE DISPOSAL"]],R["S-G-UUT---"]=[I["GR.IC.TOPOGRAPHIC"]],R["S-G-UUD---"]=[I["GR.IC.DRILLING"]],R["S-G-US----"]=[I["GR.IC.COMBAT SERVICE SUPPORT"]],R["S-G-USA---"]=[I["GR.IC.ADMINISTRATIVE"]],R["S-G-USAT--"]=[I["GR.IC.ADMINISTRATIVE"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAC--"]=[I["GR.IC.ADMINISTRATIVE"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAJ--"]=[I["GR.IC.JUDGE ADVOCATE GENERAL"]],R["S-G-USAJT-"]=[I["GR.IC.JUDGE ADVOCATE GENERAL"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAJC-"]=[I["GR.IC.JUDGE ADVOCATE GENERAL"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAO--"]=[I["GR.IC.POSTAL"]],R["S-G-USAOT-"]=[I["GR.IC.POSTAL"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAOC-"]=[I["GR.IC.POSTAL"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAF--"]=[I["GR.IC.FINANCE"]],R["S-G-USAFT-"]=[I["GR.IC.FINANCE"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAFC-"]=[I["GR.IC.FINANCE"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAS--"]=[I["GR.IC.PERSONNEL SERVICES"]],R["S-G-USAST-"]=[I["GR.IC.PERSONNEL SERVICES"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USASC-"]=[I["GR.IC.PERSONNEL SERVICES"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAM--"]=[I["GR.IC.MORTUARY AFFAIRS"]],R["S-G-USAMT-"]=[I["GR.IC.MORTUARY AFFAIRS"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAMC-"]=[I["GR.IC.MORTUARY AFFAIRS"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAR--"]=[I["GR.IC.RELIGIOUS SUPPORT"]],R["S-G-USART-"]=[I["GR.IC.RELIGIOUS SUPPORT"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USARC-"]=[I["GR.IC.RELIGIOUS SUPPORT"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAP--"]=[I["GR.IC.PUBLIC AFFAIRS"]],R["S-G-USAPT-"]=[I["GR.IC.PUBLIC AFFAIRS"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAPC-"]=[I["GR.IC.PUBLIC AFFAIRS"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAPB-"]=[I["GR.IC.PUBLIC AFFAIRS BROADCAST"]],R["S-G-USAPBT"]=[I["GR.IC.PUBLIC AFFAIRS BROADCAST"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAPBC"]=[I["GR.IC.PUBLIC AFFAIRS BROADCAST"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAPM-"]=[I["GR.IC.JOINT INFORMATION BUREAU"]],R["S-G-USAPMT"]=[I["GR.IC.JOINT INFORMATION BUREAU"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAPMC"]=[I["GR.IC.JOINT INFORMATION BUREAU"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAX--"]=[I["GR.IC.REPLACEMENT HOLDING UNIT"]],R["S-G-USAXT-"]=[I["GR.IC.REPLACEMENT HOLDING UNIT"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAXC-"]=[I["GR.IC.REPLACEMENT HOLDING UNIT"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAL--"]=[I["GR.IC.LABOUR"]],R["S-G-USALT-"]=[I["GR.IC.LABOUR"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USALC-"]=[I["GR.IC.LABOUR"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAW--"]=[I["GR.IC.MORALE, WELFARE, AND RECREATION"]],R["S-G-USAWT-"]=[I["GR.IC.MORALE, WELFARE, AND RECREATION"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAWC-"]=[I["GR.IC.MORALE, WELFARE, AND RECREATION"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USAQ--"]=[I["GR.IC.QUARTERMASTER"]],R["S-G-USAQT-"]=[I["GR.IC.QUARTERMASTER"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USAQC-"]=[I["GR.IC.QUARTERMASTER"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USM---"]=[I["GR.IC.FF.MEDICAL"]],R["S-G-USMT--"]=[I["GR.IC.FF.MEDICAL THEATER"]],R["S-G-USMC--"]=[I["GR.IC.FF.MEDICAL CORPS"]],R["S-G-USMM--"]=[I["GR.IC.FF.MEDICAL"],I["GR.IC.FF.MEDICAL TREATMENT FACILITY"]],R["S-G-USMMT-"]=[I["GR.IC.FF.MEDICAL THEATER"],I["GR.IC.FF.MEDICAL TREATMENT FACILITY"]],R["S-G-USMMC-"]=[I["GR.IC.FF.MEDICAL CORPS"],I["GR.IC.FF.MEDICAL TREATMENT FACILITY"]],R["S-G-USMV--"]=[I["GR.IC.FF.MEDICAL"],I["GR.M2.VETERINARY"]],R["S-G-USMVT-"]=[I["GR.IC.FF.MEDICAL THEATER"],I["GR.M2.VETERINARY"]],R["S-G-USMVC-"]=[I["GR.IC.FF.MEDICAL CORPS"],I["GR.M2.VETERINARY"]],R["S-G-USMD--"]=[I["GR.IC.FF.MEDICAL"],I["GR.M2.DENTAL"]],R["S-G-USMDT-"]=[I["GR.IC.FF.MEDICAL THEATER"],I["GR.M2.DENTAL"]],R["S-G-USMDC-"]=[I["GR.IC.FF.MEDICAL CORPS"],I["GR.M2.DENTAL"]],R["S-G-USMP--"]=[I["GR.IC.FF.MEDICAL"],I["GR.M2.PSYCHOLOGICAL"]],R["S-G-USMPT-"]=[I["GR.IC.FF.MEDICAL THEATER"],I["GR.M2.PSYCHOLOGICAL"]],R["S-G-USMPC-"]=[I["GR.IC.FF.MEDICAL CORPS"],I["GR.M2.PSYCHOLOGICAL"]],R["S-G-USS---"]=[I["GR.IC.FF.SUPPLY"]],R["S-G-USST--"]=[I["GR.IC.FF.SUPPLY THEATER"]],R["S-G-USSC--"]=[I["GR.IC.FF.SUPPLY CORPS"]],R["S-G-USS1--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS I"]],R["S-G-USS1T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS I"]],R["S-G-USS1C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS I"]],R["S-G-USS2--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS II"]],R["S-G-USS2T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS II"]],R["S-G-USS2C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS II"]],R["S-G-USS3--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS III"]],R["S-G-USS3T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS III"]],R["S-G-USS3C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS III"]],R["S-G-USS3A-"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS III"],MS.translate(25,5,MS.scale(.5,I["GR.IC.AVIATION ROTARY WING"]))],R["S-G-USS3AT"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS III"],MS.translate(25,5,MS.scale(.5,I["GR.IC.AVIATION ROTARY WING"]))],R["S-G-USS3AC"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS III"],MS.translate(25,5,MS.scale(.5,I["GR.IC.AVIATION ROTARY WING"]))],R["S-G-USS4--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS IV"]],R["S-G-USS4T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS IV"]],R["S-G-USS4C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS IV"]],R["S-G-USS5--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS V"]],R["S-G-USS5T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS V"]],R["S-G-USS5C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS V"]],R["S-G-USS6--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS VI"]],R["S-G-USS6T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS VI"]],R["S-G-USS6C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS VI"]],R["S-G-USS7--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS VII"]],R["S-G-USS7T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS VII"]],R["S-G-USS7C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS VII"]],R["S-G-USS8--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS VIII"]],R["S-G-USS8T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS VIII"]],R["S-G-USS8C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS VIII"]],R["S-G-USS9--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS IX"]],R["S-G-USS9T-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS IX"]],R["S-G-USS9C-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS IX"]],
R["S-G-USSX--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.CLASS X"]],R["S-G-USSXT-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.FF.CLASS X"]],R["S-G-USSXC-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.FF.CLASS X"]],R["S-G-USSL--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.LAUNDRY/BATH"]],R["S-G-USSLT-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.LAUNDRY/BATH"]],R["S-G-USSLC-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.LAUNDRY/BATH"]],R["S-G-USSW--"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.WATER"]],R["S-G-USSWT-"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.WATER"]],R["S-G-USSWC-"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.WATER"]],R["S-G-USSWP-"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.WATER PURIFICATION"]],R["S-G-USSWPT"]=[I["GR.IC.FF.SUPPLY THEATER"],I["GR.IC.WATER PURIFICATION"]],R["S-G-USSWPC"]=[I["GR.IC.FF.SUPPLY CORPS"],I["GR.IC.WATER PURIFICATION"]],R["S-G-UST---"]=[I["GR.IC.TRANSPORTATION"]],R["S-G-USTT--"]=[I["GR.IC.FF.THEATRE SUPPORT"],I["GR.IC.TRANSPORTATION"]],R["S-G-USTC--"]=[I["GR.IC.FF.CORPS SUPPORT"],I["GR.IC.TRANSPORTATION"]],R["S-G-USTM--"]=[I["GR.IC.TRANSPORTATION"],I["GR.M1.MOVEMENT CONTROL CENTRE"]],R["S-G-USTMT-"]=[I["GR.IC.FF.THEATRE SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.MOVEMENT CONTROL CENTRE"]],R["S-G-USTMC-"]=[I["GR.IC.FF.CORPS SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.MOVEMENT CONTROL CENTRE"]],R["S-G-USTR--"]=[I["GR.IC.TRANSPORTATION"],I["GR.M1.RAILROAD"]],R["S-G-USTRT-"]=[I["GR.IC.FF.THEATRE SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.RAILROAD"]],R["S-G-USTRC-"]=[I["GR.IC.FF.CORPS SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.RAILROAD"]],R["S-G-USTS--"]=[I["GR.IC.TRANSPORTATION"],I["GR.M1.NAVAL"]],R["S-G-USTST-"]=[I["GR.IC.FF.THEATRE SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.NAVAL"]],R["S-G-USTSC-"]=[I["GR.IC.FF.CORPS SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.NAVAL"]],R["S-G-USTA--"]=[I["GR.IC.TRANSPORTATION"],I["GR.IC.AIRPORT OF DEBARKATION"]],R["S-G-USTAT-"]=[I["GR.IC.FF.THEATRE SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.IC.AIRPORT OF DEBARKATION"]],R["S-G-USTAC-"]=[I["GR.IC.FF.CORPS SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.IC.AIRPORT OF DEBARKATION"]],R["S-G-USTI--"]=[I["GR.IC.TRANSPORTATION"],I["GR.M1.MISSILE"]],R["S-G-USTIT-"]=[I["GR.IC.FF.THEATRE SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.MISSILE"]],R["S-G-USTIC-"]=[I["GR.IC.FF.CORPS SUPPORT"],I["GR.IC.TRANSPORTATION"],I["GR.M1.MISSILE"]],R["S-G-USX---"]=[I["GR.IC.MAINTENANCE"]],R["S-G-USXT--"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.THEATRE SUPPORT"]],R["S-G-USXC--"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.CORPS SUPPORT"]],R["S-G-USXH--"]=[I["GR.IC.MAINTENANCE"],I["GR.M2.HEAVY"]],R["S-G-USXHT-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.THEATRE SUPPORT"],I["GR.M2.HEAVY"]],R["S-G-USXHC-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.CORPS SUPPORT"],I["GR.M2.HEAVY"]],R["S-G-USXR--"]=[I["GR.IC.MAINTENANCE"],I["GR.M2.RAILROAD"]],R["S-G-USXRT-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.THEATRE SUPPORT"],I["GR.M2.RAILROAD"]],R["S-G-USXRC-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.CORPS SUPPORT"],I["GR.M2.RAILROAD"]],R["S-G-USXO--"]=[I["GR.IC.MAINTENANCE"],I["GR.M1.AMMUNITION"]],R["S-G-USXOT-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.THEATRE SUPPORT"],I["GR.M1.AMMUNITION"]],R["S-G-USXOC-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.CORPS SUPPORT"],I["GR.M1.AMMUNITION"]],R["S-G-USXOM-"]=[I["GR.IC.MAINTENANCE"],I["GR.M1.MISSILE"]],R["S-G-USXOMT"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.THEATRE SUPPORT"],I["GR.M1.MISSILE"]],R["S-G-USXOMC"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.CORPS SUPPORT"],I["GR.M1.MISSILE"]],R["S-G-USXE--"]=[I["GR.IC.MAINTENANCE"],I["GR.M1.ELECTRO-OPTICAL"]],R["S-G-USXET-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.THEATRE SUPPORT"],I["GR.M1.ELECTRO-OPTICAL"]],R["S-G-USXEC-"]=[I["GR.IC.MAINTENANCE"],I["GR.IC.FF.CORPS SUPPORT"],I["GR.M1.ELECTRO-OPTICAL"]],R["S-G-USXBDR"]=[I["GR.IC.MAINTENANCE"],I["GR.M2.BATTLE DAMAGE REPAIR"]],R["S-G-USXPM-"]=[I["GR.IC.MAINTENANCE"],I["GR.M2.PREVENTIVE MAINTENANCE"]],R["S-G-USXP--"]=[I["GR.IC.PIPELINE"]],R["S-G-USXEP-"]=[I["GR.IC.ENVIRONMENTAL PROTECTION"]],R["S-G-UH----"]=[],R["S-G-UH1---"]=[I["GR.IC.FF.HEADQUARTERS OR HEADQUARTERS ELEMENT"]],R["S-G-UH2---"]=[I["GR.IC.FF.SUPPLY"],I["GR.IC.FF.HEADQUARTERS OR HEADQUARTERS ELEMENT"]],R["S-G-UHGL--"]=R["S-G-GL----"]=[I["GR.IC.LIAISON"]],R["S-G-E-----"]=[],R["S-G-EWM---"]=[I["GR.EQ.MISSILE LAUNCHER"]],R["S-G-EWMA--"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"]],R["S-G-EWMAS-"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWMASR"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.SHORT RANGE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],R["S-G-EWMASE"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.SHORT RANGE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],R["S-G-EWMAI-"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWMAIR"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.INTERMEDIATE RANGE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],R["S-G-EWMAIE"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.INTERMEDIATE RANGE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],R["S-G-EWMAL-"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.LONG RANGE"]],R["S-G-EWMALR"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.LONG RANGE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],R["S-G-EWMALE"]=[I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],I["GR.EQ.LONG RANGE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],R["S-G-EWMAT-"]=[MS.translate(0,-15,MS.scale(.7,I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"])),I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR THEATRE"]],R["S-G-EWMATR"]=[MS.translate(0,-15,MS.scale(.7,I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"])),I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR THEATRE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],R["S-G-EWMATE"]=[MS.translate(0,-15,MS.scale(.7,I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"])),I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR THEATRE"],I["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],R["S-G-EWMS--"]=[I["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"]],R["S-G-EWMSS-"]=[I["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWMSI-"]=[I["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWMSL-"]=[I["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"],I["GR.EQ.LONG RANGE"]],R["S-G-EWMT--"]=[I["GR.EQ.ANTITANK MISSILE LAUNCHER"]],R["S-G-EWMTL-"]=[I["GR.EQ.ANTITANK MISSILE LAUNCHER"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWMTM-"]=[I["GR.EQ.ANTITANK MISSILE LAUNCHER"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWMTH-"]=[I["GR.EQ.ANTITANK MISSILE LAUNCHER"],I["GR.EQ.LONG RANGE"]],R["S-G-EWS---"]=[I["GR.EQ.SINGLE ROCKET LAUNCHER"]],R["S-G-EWSL--"]=[I["GR.EQ.SINGLE ROCKET LAUNCHER"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWSM--"]=[I["GR.EQ.SINGLE ROCKET LAUNCHER"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWSH--"]=[I["GR.EQ.SINGLE ROCKET LAUNCHER"],I["GR.EQ.LONG RANGE"]],R["S-G-EWX---"]=[I["GR.EQ.MULTIPLE ROCKET LAUNCHER"]],R["S-G-EWXL--"]=[I["GR.EQ.MULTIPLE ROCKET LAUNCHER"],MS.translate(0,10,I["GR.EQ.SHORT RANGE"])],R["S-G-EWXM--"]=[I["GR.EQ.MULTIPLE ROCKET LAUNCHER"],MS.translate(0,10,I["GR.EQ.INTERMEDIATE RANGE"])],R["S-G-EWXH--"]=[I["GR.EQ.MULTIPLE ROCKET LAUNCHER"],MS.translate(0,10,I["GR.EQ.LONG RANGE"])],R["S-G-EWT---"]=[I["GR.EQ.ANTITANK ROCKET LAUNCHER"]],R["S-G-EWTL--"]=[I["GR.EQ.ANTITANK ROCKET LAUNCHER"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWTM--"]=[I["GR.EQ.ANTITANK ROCKET LAUNCHER"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWTH--"]=[I["GR.EQ.ANTITANK ROCKET LAUNCHER"],I["GR.EQ.LONG RANGE"]],R["S-G-EWR---"]=[I["GR.EQ.RIFLE"]],R["S-G-EWRR--"]=[I["GR.EQ.RIFLE"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWRL--"]=[I["GR.EQ.RIFLE"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWRH--"]=[I["GR.EQ.RIFLE"],I["GR.EQ.LONG RANGE"]],R["S-G-EWZ---"]=[I["GR.EQ.GRENADE LAUNCHER"]],R["S-G-EWZL--"]=[I["GR.EQ.GRENADE LAUNCHER"],MS.translate(0,20,I["GR.EQ.SHORT RANGE"])],R["S-G-EWZM--"]=[I["GR.EQ.GRENADE LAUNCHER"],MS.translate(0,20,I["GR.EQ.INTERMEDIATE RANGE"])],R["S-G-EWZH--"]=[I["GR.EQ.GRENADE LAUNCHER"],MS.translate(0,20,I["GR.EQ.LONG RANGE"])],R["S-G-EWO---"]=[I["GR.EQ.MORTAR"]],R["S-G-EWOL--"]=[I["GR.EQ.MORTAR"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWOM--"]=[I["GR.EQ.MORTAR"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWOH--"]=[I["GR.EQ.MORTAR"],I["GR.EQ.LONG RANGE"]],R["S-G-EWH---"]=[I["GR.EQ.HOWITZER"]],R["S-G-EWHL--"]=[I["GR.EQ.HOWITZER"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWHLS-"]=[MS.translate(0,-15,MS.scale(.8,I["GR.EQ.HOWITZER"],I["GR.EQ.SHORT RANGE"])),I["GR.EQ.HOWITZER TRACKED"]],R["S-G-EWHM--"]=[I["GR.EQ.HOWITZER"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWHMS-"]=[MS.translate(0,-15,MS.scale(.8,I["GR.EQ.HOWITZER"],I["GR.EQ.INTERMEDIATE RANGE"])),I["GR.EQ.HOWITZER TRACKED"]],R["S-G-EWHH--"]=[I["GR.EQ.HOWITZER"],I["GR.EQ.LONG RANGE"]],R["S-G-EWHHS-"]=[MS.translate(0,-15,MS.scale(.8,I["GR.EQ.HOWITZER"],I["GR.EQ.LONG RANGE"])),I["GR.EQ.HOWITZER TRACKED"]],R["S-G-EWG---"]=[I["GR.EQ.ANTITANK GUN"]],R["S-G-EWGL--"]=[I["GR.EQ.ANTITANK GUN"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWGM--"]=[I["GR.EQ.ANTITANK GUN"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWGH--"]=[I["GR.EQ.ANTITANK GUN"],I["GR.EQ.LONG RANGE"]],R["S-G-EWGR--"]=[I["GR.EQ.RECOILLESS GUN"]],R["S-G-EWD---"]=[I["GR.EQ.DIRECT FIRE GUN"]],R["S-G-EWDL--"]=[I["GR.EQ.DIRECT FIRE GUN"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWDLS-"]=[MS.translate(0,-15,MS.scale(.8,I["GR.EQ.DIRECT FIRE GUN"],I["GR.EQ.SHORT RANGE"])),I["GR.EQ.HOWITZER TRACKED"]],R["S-G-EWDM--"]=[I["GR.EQ.DIRECT FIRE GUN"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWDMS-"]=[MS.translate(0,-15,MS.scale(.8,I["GR.EQ.DIRECT FIRE GUN"],I["GR.EQ.INTERMEDIATE RANGE"])),I["GR.EQ.HOWITZER TRACKED"]],R["S-G-EWDH--"]=[I["GR.EQ.DIRECT FIRE GUN"],I["GR.EQ.LONG RANGE"]],R["S-G-EWDHS-"]=[MS.translate(0,-15,MS.scale(.8,I["GR.EQ.DIRECT FIRE GUN"],I["GR.EQ.LONG RANGE"])),I["GR.EQ.HOWITZER TRACKED"]],R["S-G-EWA---"]=[I["GR.EQ.AIR DEFENCE GUN"]],R["S-G-EWAL--"]=[I["GR.EQ.AIR DEFENCE GUN"],I["GR.EQ.SHORT RANGE"]],R["S-G-EWAM--"]=[I["GR.EQ.AIR DEFENCE GUN"],I["GR.EQ.INTERMEDIATE RANGE"]],R["S-G-EWAH--"]=[I["GR.EQ.AIR DEFENCE GUN"],I["GR.EQ.LONG RANGE"]],R["S-G-EV----"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"]],R["S-G-EVA---"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.ARMOURED VEHICLE"]],R["S-G-EVAT--"]=[I["GR.EQ.TANK"]],R["S-G-EVATL-"]=[I["GR.EQ.TANK"],I["GR.EQ.LIGHT TANK"]],R["S-G-EVATLR"]=R["S-G-EVATW-"]=[I["GR.EQ.TANK"],I["GR.EQ.LIGHT TANK"],I["GR.EQ.TANK RECOVERY VEHICLE"]],R["S-G-EVATM-"]=[I["GR.EQ.TANK"],I["GR.EQ.MEDIUM TANK"]],R["S-G-EVATMR"]=R["S-G-EVATX-"]=[I["GR.EQ.TANK"],I["GR.EQ.MEDIUM TANK"],I["GR.EQ.TANK RECOVERY VEHICLE"]],R["S-G-EVATH-"]=[I["GR.EQ.TANK"],I["GR.EQ.HEAVY TANK"]],R["S-G-EVATHR"]=R["S-G-EVATY-"]=[I["GR.EQ.TANK"],I["GR.EQ.HEAVY TANK"],I["GR.EQ.TANK RECOVERY VEHICLE"]],R["S-G-EVAA--"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"]],R["S-G-EVAAR-"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"],I["GR.EQ.TANK RECOVERY VEHICLE"]],R["S-G-EVAI--"]=[I["GR.EQ.ARMOURED FIGHTING VEHICLE"]],R["S-G-EVAC--"]=[I["GR.EQ.ARMOURED FIGHTING VEHICLE (AFV) COMMAND AND CONTROL"]],R["S-G-EVAS--"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER COMBAT SERVICE SUPPORT VEHICLE"]],R["S-G-EVAL--"]=[I["GR.EQ.ARMOURED FIGHTING VEHICLE"],I["GR.EQ.CROSS-COUNTRY"]],R["S-G-EVU---"]=[I["GR.EQ.UTILITY VEHICLE"]],R["S-G-EVUB--"]=[I["GR.EQ.BUS"]],R["S-G-EVUS--"]=[I["GR.EQ.SEMI-TRAILER TRUCK"]],R["S-G-EVUSL-"]=[I["GR.EQ.SEMI-TRAILER TRUCK"],I["GR.EQ.UTILITY VEHICLE LIGHT"]],R["S-G-EVUSM-"]=[I["GR.EQ.SEMI-TRAILER TRUCK"],I["GR.EQ.UTILITY VEHICLE MEDIUM"]],R["S-G-EVUSH-"]=[I["GR.EQ.SEMI-TRAILER TRUCK"],I["GR.EQ.UTILITY VEHICLE HEAVY"]],R["S-G-EVUL--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.LIMITED CROSS-COUNTRY"]],R["S-G-EVUX--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.CROSS-COUNTRY"]],R["S-G-EVUR--"]=[I["GR.EQ.WATER VEHICLE"]],R["S-G-EVUT--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.UTILITY VEHICLE.TOW TRUCK"]],R["S-G-EVUTL-"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.UTILITY VEHICLE.TOW TRUCK"],I["GR.EQ.UTILITY VEHICLE.TOW TRUCK.LIGHT"]],R["S-G-EVUTH-"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.UTILITY VEHICLE.TOW TRUCK"],I["GR.EQ.UTILITY VEHICLE.TOW TRUCK.HEAVY"]],R["S-G-EVUA--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.MEDICAL EVACUATION"]],R["S-G-EVUAA-"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"],I["GR.EQ.MEDICAL EVACUATION"]],R["S-G-EVE---"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],MS.scale(.7,I["GR.IC.ENGINEER"])],R["S-G-EVEB--"]=[I["GR.EQ.BRIDGE"]],R["S-G-EVEE--"]=[I["GR.EQ.EARTHMOVER"]],R["S-G-EVEC--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.LIMITED CROSS-COUNTRY"],MS.scale(.6,I["GR.IC.ENGINEER"])],R["S-G-EVEM--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.MINE LAYING VEHICLE"]],R["S-G-EVEMA-"]=[I["GR.EQ.MINE CLEARING EQUIPMENT"],I["GR.EQ.TANK"]],R["S-G-EVEMV-"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"],I["GR.EQ.ARMORED CARRIER WITH VOLCANO"]],R["S-G-EVEMT-"]=[I["GR.EQ.MINE CLEARING EQUIPMENT"],MS.translate(0,-10,I["GR.EQ.LIMITED CROSS-COUNTRY"])],R["S-G-EVEML-"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.LIMITED CROSS-COUNTRY"],I["GR.EQ.ARMORED CARRIER WITH VOLCANO"]],R["S-G-EVEA--"]=[I["GR.EQ.MINE CLEARING EQUIPMENT"]],R["S-G-EVEAA-"]=[I["GR.EQ.MINE CLEARING EQUIPMENT"],I["GR.EQ.TANK"]],R["S-G-EVEAT-"]=[I["GR.EQ.MINE CLEARING EQUIPMENT"],MS.translate(0,-10,I["GR.EQ.LIMITED CROSS-COUNTRY"])],R["S-G-EVEMSM"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"],I["GR.EQ.MINE SCATTERABLE"]],R["S-G-EVED--"]=[I["GR.EQ.DOZER"]],R["S-G-EVEDA-"]=[I["GR.EQ.DOZER ARMORED"]],R["S-G-EVES--"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"],MS.scale(.6,I["GR.IC.ENGINEER"])],R["S-G-EVER--"]=[I["GR.EQ.ARMOURED PERSONNEL CARRIER"],MS.scale(.6,I["GR.IC.ENGINEER"]),I["GR.EQ.ARMOURED PERSONNEL CARRIER ENGINEER RECON VEHICLE"]],R["S-G-EVEH--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.LIMITED CROSS-COUNTRY"],I["GR.EQ.UTILITY VEHICLE BACKHOE"]],R["S-G-EVEF--"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.CROSS-COUNTRY"],I["GR.EQ.UTILITY VEHICLE FERRY TRANSPORTER"]],R["S-G-EVD---"]=[I["GR.EQ.UTILITY VEHICLE"],I["GR.EQ.CROSS-COUNTRY"],MS.scale(.7,I["GR.IC.DRILLING"])],R["S-G-EVT---"]=[I["GR.EQ.TRAIN LOCOMOTIVE"]],R["S-G-EVC---"]=[I["AR.I.CIVILIAN"]],R["S-G-EVCA--"]=[I["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"]],R["S-G-EVCAL-"]=[I["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],R["S-G-EVCAM-"]=[I["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],R["S-G-EVCAH-"]=[I["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],R["S-G-EVCO--"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"]],R["S-G-EVCOL-"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],R["S-G-EVCOM-"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],R["S-G-EVCOH-"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],R["S-G-EVCM--"]=[I["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"]],R["S-G-EVCML-"]=[I["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],R["S-G-EVCMM-"]=[I["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],R["S-G-EVCMH-"]=[I["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],R["S-G-EVCU--"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"]],R["S-G-EVCUL-"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],R["S-G-EVCUM-"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],R["S-G-EVCUH-"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],R["S-G-EVCJ--"]=[I["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"]],R["S-G-EVCJL-"]=[I["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],R["S-G-EVCJM-"]=[I["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],R["S-G-EVCJH-"]=[I["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],R["S-G-EVCT--"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCTL-"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCTM-"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCTH-"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCF--"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCFL-"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.LIGHT"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCFM-"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.MEDIUM"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVCFH-"]=[I["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],I["GR.EQ.CIVILIAN VEHICLE.HEAVY"],I["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],R["S-G-EVM---"]=[I["GR.EQ.PACK ANIMAL"]],R["S-G-EVS---"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.MISSILE SUPPORT"]],R["S-G-EVST--"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.MISSILE TRANSLOADER"]],R["S-G-EVSR--"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.MISSILE TRANSPORTER"]],R["S-G-EVSC--"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.MISSILE CRANE/LOADING DEVICE"]],R["S-G-EVSP--"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.MISSILE PROPELLANT TRANSPORTER"]],R["S-G-EVSW--"]=[I["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],I["GR.EQ.MISSILE WARHEAD TRANSPORTER"]],R["S-G-ES----"]=[I["GR.EQ.SENSOR"]],R["S-G-ESR---"]=[I["GR.EQ.RADAR"]],R["S-G-ESE---"]=[I["GR.EQ.SENSOR EMPLACED"]],R["S-G-EXI---"]=[I["GR.EQ.IMPROVISED EXPLOSIVE DEVICE"]],R["S-G-EXL---"]=[I["GR.EQ.LASER"]],R["S-G-EXN---"]=[I["GR.EQ.CBRN EQUIPMENT"]],R["S-G-EXF---"]=[I["GR.EQ.FLAME THROWER"]],R["S-G-EXM---"]=[I["GR.EQ.LAND MINES"]],R["S-G-EXMC--"]=[I["GR.EQ.ANTIPERSONNEL LAND MINE"]],R["S-G-EXML--"]=[I["GR.EQ.ANTIPERSONNEL LAND MINE LESS THAN LETHAL"]],R["S-G-I-----"]=[],R["S-G-IR----"]=[I["GR.IN.IC.RAW MATERIAL PRODUCTION/STORAGE"]],R["S-G-IRM---"]=[I["GR.IN.IC.MINE"]],R["S-G-IRP---"]=[I["GR.IC.FF.CLASS III"]],R["S-G-IRN---"]=[I["GR.IC.CBRN"]],R["S-G-IRNB--"]=[I["GR.IC.CBRN"],I["GR.M1.BIOLOGICAL"]],R["S-G-IRNC--"]=[I["GR.IC.CBRN"],I["GR.M1.CHEMICAL"]],R["S-G-IRNN--"]=[I["GR.IC.CBRN"],I["GR.M1.NUCLEAR"]],R["S-G-IP----"]=[I["GR.IN.IC.PROCESSING FACILITY"]],R["S-G-IPD---"]=[I["GR.IC.CBRN"],I["GR.M1.DECONTAMINATION"]],R["S-G-IE----"]=[I["GR.IC.FF.CLASS IX"]],R["S-G-IU----"]=[I["GR.IN.IC.UTILITY FACILITY"]],R["S-G-IUR---"]=[I["GR.IN.IC.RESEARCH"]],R["S-G-IUT---"]=[I["GR.IN.IC.TELECOMMUNICATIONS"]],R["S-G-IUE---"]=[I["GR.IN.IC.ELECTRIC POWER"]],R["S-G-IUEN--"]=[I["GR.IN.IC.ELECTRIC POWER"],I["GR.IN.IC.ELECTRIC POWER NUCLEAR"]],R["S-G-IUED--"]=[I["GR.IN.IC.ELECTRIC POWER"],I["GR.IN.IC.ELECTRIC POWER DAM"]],R["S-G-IUEF--"]=[I["GR.IN.IC.ELECTRIC POWER"],I["GR.IN.IC.ELECTRIC POWER FOSSIL"]],R["S-G-IUP---"]=[I["GR.IC.WATER"]],R["S-G-IMF---"]=[I["GR.IN.IC.ATOMIC ENERGY"]],R["S-G-IMFA--"]=[I["GR.IN.IC.ATOMIC ENERGY"],I["GR.IN.M2.ATOMIC ENERGY REACTOR"]],R["S-G-IMFP--"]=[I["GR.IN.IC.ATOMIC ENERGY"],I["GR.IN.M2.NUCLEAR MATERIAL PRODUCTION"]],R["S-G-IMFPW-"]=[I["GR.IN.IC.ATOMIC ENERGY WEAPONS GRADE"],I["GR.IN.M2.NUCLEAR MATERIAL PRODUCTION"]],R["S-G-IMFS--"]=[I["GR.IN.IC.ATOMIC ENERGY"],I["GR.IN.M2.NUCLEAR MATERIAL STORAGE"]],R["S-G-IMA---"]=[I["GR.IN.IC.AIRCRAFT PRODUCTION & ASSEMBLY"]],R["S-G-IME---"]=[I["GR.IC.FF.CLASS V"]],R["S-G-IMG---"]=[I["GR.EQ.TANK"]],R["S-G-IMV---"]=[I["GR.IC.MAINTENANCE"]],R["S-G-IMN---"]=[I["GR.EQ.DOZER"]],R["S-G-IMNB--"]=[I["GR.IN.IC.BRIDGE"]],R["S-G-IMC---"]=[I["GR.IC.CBRN"],I["GR.IN.M2.CHEMICAL & BIOLOGICAL WARFARE"]],R["S-G-IMS---"]=[I["GR.IC.NAVAL"],I["GR.IN.M2.SHIP CONSTRUCTION"]],R["S-G-IMM---"]=[I["GR.IC.MISSILE"]],R["S-G-IG----"]=[I["AR.I.GOVERNMENT"]],R["S-G-IB----"]=[I["GR.IN.IC.BASE"]],R["S-G-IBA---"]=[I["GR.IC.TRANSPORTATION"],I["GR.IC.AIRPORT OF DEBARKATION"]],R["S-G-IBN---"]=[I["GR.IC.NAVAL"]],R["S-G-IT----"]=[I["GR.IC.TRANSPORTATION"]],R["S-G-IX----"]=[I["GR.IC.FF.MEDICAL"]],R["S-G-IXH---"]=[I["GR.IC.FF.MEDICAL TREATMENT FACILITY"]],R["S-G-IRR---"]=R["S-G-IRSR--"]=[I["GR.IN.IC.SEA SURFACE INSTALLATION, OIL RIG/PLATFORM"]],R["S-S-------"]=[],R["S-S-C-----"]=[I["SE.IC.COMBATANT"]],R["S-S-CL----"]=[I["SE.IC.SURFACE COMBATANT, LINE"]],R["S-S-CLCV--"]=[I["SE.IC.CARRIER"]],R["S-S-CLBB--"]=[I["SE.IC.BATTLESHIP"]],R["S-S-CLCC--"]=[I["SE.IC.CRUISER"]],R["S-S-CLDD--"]=[I["SE.IC.DESTROYER"]],R["S-S-CLFF--"]=[I["SE.IC.FRIGATE"]],R["S-S-CLLL--"]=[I["SE.IC.LITTORAL COMBATANT SHIP"]],R["S-S-CLLLAS"]=[I["SE.IC.LITTORAL COMBATANT SHIP"],I["SE.M1.ANTISUBMARINE WARFARE"]],R["S-S-CLLLMI"]=[I["SE.IC.LITTORAL COMBATANT SHIP"],I["SE.M1.MINE WARFARE"]],R["S-S-CLLLSU"]=[I["SE.IC.LITTORAL COMBATANT SHIP"],I["SE.M1.SURFACE WARFARE"]],R["S-S-CA----"]=[I["SE.IC.AMPHIBIOUS WARFARE SHIP"]],R["S-S-CALA--"]=[E?I["SE.IC.AMPHIBIOUS ASSAULT"]:I["SE.IC.AMPHIBIOUS ASSAULT SHIP, GENERAL"]],R["S-S-CALS--"]=[I["SE.IC.LANDING SHIP"]],R["S-S-CALSM-"]=[I["SE.IC.LANDING SHIP"],I["SE.M2.MEDIUM"]],R["S-S-CALST-"]=[I["SE.IC.LANDING SHIP"],I["SE.M2.TANK"]],R["S-S-CALC--"]=[I["SE.IC.LANDING CRAFT"]],R["S-S-CM----"]=[I["SE.IC.MINE WARFARE VESSEL"]],R["S-S-CMML--"]=[I["SE.IC.MINELAYER"]],R["S-S-CMMS--"]=[I["SE.IC.MINESWEEPER"]],R["S-S-CMMH--"]=[I["SE.IC.MINEHUNTER"]],R["S-S-CMMA--"]=[I["SE.IC.MINE COUNTER MEASURE SUPPORT SHIP"]],R["S-S-CMMD--"]=[I["SE.IC.MINESWEEPER, DRONE"]],R["S-S-CP----"]=[I["SE.IC.PATROL"]],R["S-S-CPSB--"]=[I["SE.IC.PATROL CRAFT"]],R["S-S-CPSU--"]=[I["SE.IC.PATROL ANTI SUBMARINE WARFARE"]],R["S-S-CPSUM-"]=[I["SE.IC.PATROL ANTISHIP MISSILE"]],R["S-S-CPSUT-"]=[I["SE.IC.PATROL TORPEDO"]],R["S-S-CPSUG-"]=[I["SE.IC.PATROL GUN"]],R["S-S-CH----"]=[I["SE.IC.HOVERCRAFT"]],R["S-S-G-----"]=[I["SE.IC.NAVY TASK ORGANIZATION UNIT"]],R["S-S-GF----"]=R["S-S-GT----"]=[I["SE.IC.NAVY TASK FORCE"]],R["S-S-GG----"]=[I["SE.IC.NAVY TASK GROUP"]],R["S-S-GU----"]=[I["SE.IC.NAVY TASK UNIT"]],R["S-S-GE----"]=[I["SE.IC.NAVY TASK ELEMENT"]],R["S-S-GC----"]=[I["SE.IC.CONVOY"]],R["S-S-CD----"]=[I["SE.IC.SEA SURFACE DECOY"]],R["S-S-CU----"]=[I["SE.IC.UNMANNED SURFACE WATER VEHICLE"]],R["S-S-CUM---"]=[I["SE.IC.UNMANNED SURFACE WATER VEHICLE"],I["SE.M1.MINE COUNTERMEASURES"]],R["S-S-CUS---"]=[I["SE.IC.UNMANNED SURFACE WATER VEHICLE"],I["SE.M1.ANTISUBMARINE WARFARE"]],R["S-S-CUN---"]=[I["SE.IC.UNMANNED SURFACE WATER VEHICLE"],I["SE.M1.SURFACE WARFARE"]],R["S-S-CUR---"]=[I["SE.IC.UNMANNED SURFACE WATER VEHICLE"],I["SE.M1.REMOTE MULTI-MISSION VEHIHLE"]],R["S-S-N-----"]=[I["SE.IC.NONCOMBATANT"]],R["S-S-NR----"]=[I["SE.IC.AUXILIARY SHIP"]],R["S-S-NRA---"]=[I["SE.IC.AMMUNITION SHIP"]],R["S-S-NRO---"]=[I["SE.IC.OILER, REPLENISHMENT"]],R["S-S-NF----"]=R["S-S-NFT---"]=[I["SE.IC.TUG, OCEAN GOING"]],R["S-S-NI----"]=[I["SE.IC.INTELLIGENCE COLLECTOR"]],R["S-S-NM----"]=[I["SE.IC.HOSPITAL SHIP"]],R["S-S-NS----"]=[I["SE.IC.SERVICE CRAFT, YARD, GENERAL"]],R["S-S-NR----"]=[I["SE.IC.REPAIR SHIP"]],R["S-S-NTS---"]=[I["SE.IC.SUBMARINE TENDER"]],R["S-S-NH----"]=[I["SE.IC.HOVERCRAFT NONCOMBATANT"]],R["S-S-NS----"]=[I["SE.IC.TUG, HARBOUR"]],R["S-S-XM----"]=[I["SE.IC.MERCHANT SHIP, GENERAL"]],R["S-S-XMC---"]=[I["SE.IC.CARGO, GENERAL"]],R["S-S-XME---"]=R["S-S-XMR---"]=[I["SE.IC.ROLL ON-ROLL OFF"]],R["S-S-XMO---"]=[I["SE.IC.OILER/TANKER"]],R["S-S-XMT---"]=R["S-S-XMTU--"]=[I["SE.IC.TUG, OCEAN GOING CIVILIAN"]],R["S-S-XMF---"]=[I["SE.IC.FERRY"]],R["S-S-XMP---"]=[I["SE.IC.PASSENGER SHIP"]],R["S-S-XMH---"]=[I["SE.IC.TRANSPORT SHIP, HAZARDOUS MATERIAL"]],R["S-S-XMD---"]=[I["SE.IC.DREDGE"]],R["S-S-XMTO--"]=[I["SE.IC.TOW"]],R["S-S-XF----"]=[I["SE.IC.FISHING VESSEL"]],R["S-S-XFDF--"]=[I["SE.IC.DRIFTER"]],R["S-S-XFTR--"]=[I["SE.IC.TRAWLER"]],R["S-S-XFDR--"]=[I["SE.IC.FISHING VESSEL DREDGE"]],R["S-S-XR----"]=[I["SE.IC.LEISURE CRAFT, SAILING BOAT"]],R["S-S-XL----"]=[I["SE.IC.LAW ENFORCEMENT VESSEL"]],R["S-S-XH----"]=[I["SE.IC.HOVERCRAFT CIVILIAN"]],R["S-S-XA----"]=[I["SE.IC.LEISURE CRAFT, MOTORIZED"]],R["S-S-XAR---"]=[I["SE.IC.LEISURE CRAFT, MOTORIZED, RIGID-HULL INFLATABLE BOAT"]],R["S-S-XAS---"]=[I["SE.IC.LEISURE CRAFT, MOTORIZED, SPEEDBOAT"]],R["S-S-XP----"]=[I["SE.IC.LEISURE CRAFT, JETSKI"]],R["S-S-O-----"]=[I["SE.IC.OWN SHIP"]],R["S-S-ED----"]=[I["SE.IC.DITCHED AIRCRAFT"]],R["S-S-EP----"]=[I["SE.IC.PERSON IN WATER"]],R["S-S-EV----"]=[I["SE.IC.DISTRESSED VESSEL"]],R["S-S-ZM----"]=[I["SE.IC.SEA MINELIKE"]],R["S-S-ZN----"]=[I["SE.IC.NAVIGATIONAL"]],R["S-S-ZI----"]=[I["SE.IC.ICEBERG"]],R["S-U-------"]=[],R["S-U-S-----"]=[I["SU.IC.SUBMARINE"]],R["S-U-SF----"]=[I["SU.IC.SUBMARINE, SURFACED"]],R["S-U-SB----"]=[I["SU.IC.SUBMARINE, BOTTOMED"]],R["S-U-SR----"]=[I["SU.IC.SUBMARINE"],I["SU.M2.CERTSUB"]],R["S-U-SX----"]=[I["SU.IC.NON-SUBMARINE"]],R["S-U-SN----"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION"]],R["S-U-SNF---"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION, SURFACED"]],R["S-U-SNA---"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION"],I["SU.IC.SUBMARINE ATTACK (SSN)"]],R["S-U-SNM---"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION"],I["SU.IC.SUBMARINE MISSILE (TYPE UNKNOWN)"]],R["S-U-SNG---"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION"],I["SU.IC.SUBMARINE GUIDED MISSILE (SSGN)"]],R["S-U-SNB---"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION"],I["SU.IC.SUBMARINE BALLISTIC MISSILE (SSBN)"]],R["S-U-SC----"]=[I["SU.IC.SUBMARINE CONVENTIONAL PROPULSION"]],R["S-U-SCF---"]=[I["SU.IC.SUBMARINE CONVENTIONAL PROPULSION, SURFACED"]],R["S-U-SCA---"]=[I["SU.IC.SUBMARINE CONVENTIONAL PROPULSION"],I["SU.IC.SUBMARINE ATTACK (SSN)"]],R["S-U-SCM---"]=[I["SU.IC.SUBMARINE CONVENTIONAL PROPULSION"],I["SU.IC.SUBMARINE MISSILE (TYPE UNKNOWN)"]],R["S-U-SCG---"]=[I["SU.IC.SUBMARINE CONVENTIONAL PROPULSION"],I["SU.IC.SUBMARINE GUIDED MISSILE (SSGN)"]],R["S-U-SCB---"]=[I["SU.IC.SUBMARINE CONVENTIONAL PROPULSION"],I["SU.IC.SUBMARINE BALLISTIC MISSILE (SSBN)"]],R["S-U-SO----"]=[I["SU.IC.OTHER SUBMERSIBLE"]],R["S-U-SOF---"]=[I["SU.IC.OTHER SUBMERSIBLE, SURFACED"]],R["S-U-SU----"]=[I["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"]],R["S-U-SUM---"]=[I["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"],I["SU.M1.MINE COUNTERMEASURES"]],R["S-U-SUS---"]=[I["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"],I["SU.M1.ANTISUBMARINE WARFARE"]],R["S-U-SUN---"]=[I["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"],I["SU.M1.SURFACE WARFARE"]],R["S-U-S1----"]=[I["SU.IC.SUBMARINE"],I["SU.M1.POSSIBLE SUBMARINE - LOW 1"]],R["S-U-S2----"]=[I["SU.IC.SUBMARINE"],I["SU.M1.POSSIBLE SUBMARINE - LOW 2"]],R["S-U-S3----"]=[I["SU.IC.SUBMARINE"],I["SU.M1.POSSIBLE SUBMARINE - HIGH 3"]],R["S-U-S4----"]=[I["SU.IC.SUBMARINE"],I["SU.M1.POSSIBLE SUBMARINE - HIGH 4"]],R["S-U-SL----"]=[I["SU.IC.SUBMARINE"],I["SU.M1.PROBABLE SUBMARINE"]],R["S-U-SK----"]=[I["SU.IC.SUBMARINE, SNORKELING"]],R["S-U-W-----"]=[I["SU.IC.UNDERWATER WEAPON"]],R["S-U-WT----"]=[I["SU.IC.TORPEDO"]],R["S-U-WM----"]=[I["SU.IC.SEA MINE"]],R["S-U-WMD---"]=[I["SU.IC.SEA MINE NEUTRALIZED"]],R["S-U-WMG---"]=[I["SU.IC.SEA MINE - BOTTOM"]],R["S-U-WMGD--"]=[I["SU.IC.SEA MINE NEUTRALIZED - BOTTOM"]],R["S-U-WMGX--"]=[I["SU.IC.SEA MINE EXERCISE MINE - BOTTOM"]],R["S-U-WMGE--"]=[I["SU.IC.SEA MINE MILEC - BOTTOM"]],R["S-U-WMGC--"]=[I["SU.IC.SEA MINE MILCO - BOTTOM"]],R["S-U-WMGR--"]=[I["SU.IC.SEA MINE NEGATIVE REACQUISITION - BOTTOM"]],R["S-U-WMGO--"]=[I["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - BOTTOM"]],R["S-U-WMM---"]=[I["SU.IC.SEA MINE - MOORED"]],R["S-U-WMMD--"]=[I["SU.IC.SEA MINE NEUTRALIZED - MOORED"]],R["S-U-WMMX--"]=[I["SU.IC.SEA MINE EXERCISE MINE - MOORED"]],R["S-U-WMME--"]=[I["SU.IC.SEA MINE MILEC - MOORED"]],R["S-U-WMMC--"]=[I["SU.IC.SEA MINE MILCO - MOORED"]],R["S-U-WMMR--"]=[I["SU.IC.SEA MINE NEGATIVE REACQUISITION - MOORED"]],R["S-U-WMMO--"]=[I["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - MOORED"]],R["S-U-WMF---"]=[I["SU.IC.SEA MINE - FLOATING"]],R["S-U-WMFD--"]=[I["SU.IC.SEA MINE NEUTRALIZED - FLOATING"]],R["S-U-WMFX--"]=[I["SU.IC.SEA MINE EXERCISE MINE - FLOATING"]],R["S-U-WMFE--"]=[I["SU.IC.SEA MINE MILEC - FLOATING"]],R["S-U-WMFC--"]=[I["SU.IC.SEA MINE MILCO - FLOATING"]],R["S-U-WMFR--"]=[I["SU.IC.SEA MINE NEGATIVE REACQUISITION - FLOATING"]],R["S-U-WMFO--"]=[I["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - FLOATING"]],R["S-U-WMO---"]=[I["SU.IC.SEA MINE (IN OTHER POSITION)"]],R["S-U-WMOD--"]=[I["SU.IC.SEA MINE (IN OTHER POSITION) NEUTRALIZED"]],R["S-U-WMX---"]=[I["SU.IC.SEA MINE EXERCISE MINE"]],R["S-U-WME---"]=[I["SU.IC.SEA MINE MILEC"]],R["S-U-WMA---"]=[I["SU.IC.SEA MINE MINE ANCHOR"]],R["S-U-WMC---"]=[I["SU.IC.SEA MINE MILCO"]],R["S-U-WMR---"]=[I["SU.IC.SEA MINE NEGATIVE REACQUISITION"]],R["S-U-WMB---"]=[I["SU.IC.SEA MINE GENERAL OBSTRUCTOR"]],R["S-U-WMBD--"]=[I["SU.IC.SEA MINE GENERAL OBSTRUCTOR NEUTRALIZED"]],R["S-U-WMN---"]=[I["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT"]],R["S-U-WMS---"]=[I["SU.IC.SEA MINE - RISING"]],R["S-U-WMSX--"]=[I["SU.IC.SEA MINE EXERCISE MINE - RISING"]],R["S-U-WMSD--"]=[I["SU.IC.SEA MINE NEUTRALIZED - RISING"]],R["S-U-WV----"]=[I["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"]],R["S-U-WD----"]=[I["SU.IC.UNDERWATER DECOY"]],R["S-U-WDM---"]=[I["SU.IC.SEA MINE DECOY"]],R["S-U-WDMG--"]=[I["SU.IC.SEA MINE DECOY, BOTTOM/GROUND"]],R["S-U-WDMM--"]=[I["SU.IC.SEA MINE DECOY, MOORED"]],R["S-U-N-----"]=[I["SU.IC.NON-SUBMARINE"]],R["S-U-ND----"]=[I["SU.IC.DIVER, CIVILIAN"]],R["S-U-E-----"]=[I["SU.IC.ENVIRONMENTAL REPORT LOCATION"]],R["S-U-V-----"]=[I["SU.IC.DIVE REPORT LOCATION"]],R["S-U-X-----"]=[I["SU.IC.UNEXPLODED EXPLOSIVE ORDNANCE"]],R["S-U-NBS---"]=[I["SU.IC.SEABED INSTALLATION/MANMADE"]],R["S-U-NBR---"]=[I["SU.IC.SEABED ROCK/STONE, OBSTACLE, OTHER"]],R["S-U-NBW---"]=[I["SU.IC.WRECK"]],R["S-U-NM----"]=[I["SU.IC.MARINE LIFE"]],R["S-U-NA----"]=[I["SU.IC.SEA ANOMALY"]],R["S-F-------"]=[I["AR.I.SPECIAL OPERATIONS FORCES"]],R["S-F-A-----"]=[I["AR.I.MILITARY ROTARY WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-F-AF----"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-F-AFA---"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.ATTACK"]],R["S-F-AFK---"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.REFUEL"]],R["S-F-AFU---"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.UTILITY"]],R["S-F-AFUL--"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["AIR.M2.LIGHT"]],R["S-F-AFUM--"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["AIR.M2.MEDIUM"]],R["S-F-AFUH--"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["AIR.M2.HEAVY"]],R["S-F-AV----"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.VSTOL"]],R["S-F-AH----"]=[I["GR.IC.AVIATION ROTARY WING"],E?'<line x1="100" y1="100" x2="100" y2="140" />':"",I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-F-AHH---"]=[I["GR.IC.AVIATION ROTARY WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.COMBAT SEARCH AND RESCUE"]],R["S-F-AHA---"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.ATTACK"]],R["S-F-AHU---"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["SOF.M2.UTILITY"]],R["S-F-AHUL--"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["AIR.M2.LIGHT"]],R["S-F-AHUM--"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["AIR.M2.MEDIUM"]],R["S-F-AHUH--"]=[I["AR.I.MILITARY FIXED WING"],I["AIR.M1.SPECIAL OPERATIONS FORCES"],I["AIR.M2.HEAVY"]],R["S-F-SN----"]=R["S-F-N-----"]=[I["GR.IC.NAVAL"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],
R["S-F-SNS---"]=R["S-F-NS----"]=[I["GR.IC.SEA-AIR-LAND"]],R["S-F-SNU---"]=R["S-F-NU----"]=[I["SOF.IC.UNDERWATER DEMOLITION TEAM"]],R["S-F-SNB---"]=R["S-F-NB----"]=[I["SE.IC.COMBATANT"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-F-SNN---"]=R["S-F-NN----"]=[I["SU.IC.SUBMARINE NUCLEAR PROPULSION"],I["AIR.M1.SPECIAL OPERATIONS FORCES"]],R["S-F-G-----"]=[I["GR.IC.FF.INFANTRY"],I["AR.I.SPECIAL OPERATIONS FORCES"]],R["S-F-GS----"]=[I["GR.IC.SPECIAL FORCES"]],R["S-F-GR----"]=R["S-F-GSR---"]=[I["GR.IC.FF.INFANTRY"],I["AIR.M1.RECONNAISSANCE"],I["GR.M2.AIRBORNE"]],R["S-F-GP----"]=R["S-F-GSP---"]=[I["GR.EQ.PSYCHOLOGICAL OPERATIONS EQUIPMENT"]],R["S-F-GPA---"]=R["S-F-GSPA--"]=[I["GR.EQ.PSYCHOLOGICAL OPERATIONS EQUIPMENT"],MS.translate(0,-30,MS.scale(.7,I["AR.I.MILITARY FIXED WING"]))],R["S-F-GC----"]=R["S-F-GCA---"]=[I["GR.IC.CIVIL AFFAIRS"]],R["S-F-GB----"]=R["S-F-B-----"]=[I["AR.I.SPECIAL OPERATIONS FORCES"],I["GR.M2.SUPPORT"]],R["I-P-SCD---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.SIERRA"],I["SI.M2.DELTA"],I["SI.M3.SPACE"]],R["I-P-SRD---"]=[I["SI.IC.RADAR"],I["SI.M1.DELTA"],I["SI.M2.TANGO"],I["SI.M3.SPACE"]],R["I-P-SRE---"]=[I["SI.IC.RADAR"],I["SI.M1.ECHO"],I["SI.M2.SIERRA"],I["SI.M3.SPACE"]],R["I-P-SRI---"]=[I["SI.IC.RADAR"],I["SI.M1.INDY"],I["SI.M2.FOXTROT"],I["SI.M3.SPACE"]],R["I-P-SRM---"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.FOXTROT"],I["SI.M3.SPACE"]],R["I-P-SRT---"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.ALPHA"],I["SI.M3.SPACE"]],R["I-P-SRS---"]=[I["SI.IC.RADAR"],I["SI.M1.SIERRA"],I["SI.M2.PAPA"],I["SI.M3.SPACE"]],R["I-P-SRU---"]=[I["SI.IC.RADAR"],I["SI.M1.UNIFORM"],I["SI.M2.NOVEMBER"],I["SI.M3.SPACE"]],R["I-A-SCC---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.CHARLIE"],I["SI.M2.MIKE"]],R["I-A-SCO---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.OSCAR"],I["SI.M2.LIMA"]],R["I-A-SCP---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.PAPA"],I["SI.M2.PAPA"]],R["I-A-SCS---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.SIERRA"],I["SI.M2.UNIFORM"]],R["I-A-SRAI--"]=[I["SI.IC.RADAR"],I["SI.M1.ALPHA"],I["SI.M2.INDY"]],R["I-A-SRAS--"]=[I["SI.IC.RADAR"],I["SI.M1.ALPHA"],I["SI.M2.BRAVO"]],R["I-A-SRC---"]=[I["SI.IC.RADAR"],I["SI.M1.CHARLIE"],I["SI.M2.INDY"]],R["I-A-SRD---"]=[I["SI.IC.RADAR"],I["SI.M1.DELTA"],I["SI.M2.TANGO"]],R["I-A-SRE---"]=[I["SI.IC.RADAR"],I["SI.M1.ECHO"],I["SI.M2.WHISKEY"]],R["I-A-SRF---"]=[I["SI.IC.RADAR"],I["SI.M1.FOXTROT"],I["SI.M2.CHARLIE"]],R["I-A-SRI---"]=[I["SI.IC.RADAR"],I["SI.M1.INDY"],I["SI.M2.FOXTROT"]],R["I-A-SRMA--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.ALPHA"]],R["I-A-SRMD--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.DELTA"]],R["I-A-SRMG--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.GOLF"]],R["I-A-SRMT--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.TANGO"]],R["I-A-SRMF--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.FOXTROT"]],R["I-A-SRTI--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.INDY"]],R["I-A-SRTA--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.ALPHA"]],R["I-A-SRTT--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.TANGO"]],R["I-A-SRU---"]=[I["SI.IC.RADAR"],I["SI.M1.UNIFORM"],I["SI.M2.NOVEMBER"]],R["I-G-SCC---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.CHARLIE"],I["SI.M2.MIKE"],I["SI.M3.GROUND"]],R["I-G-SCO---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.OSCAR"],I["SI.M2.LIMA"],I["SI.M3.GROUND"]],R["I-G-SCP---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.PAPA"],I["SI.M2.PAPA"],I["SI.M3.GROUND"]],R["I-G-SCS---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.SIERRA"],I["SI.M2.UNIFORM"],I["SI.M3.GROUND"]],R["I-G-SCT---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.TANGO"],I["SI.M2.SIERRA"],I["SI.M3.GROUND"]],R["I-G-SRAT--"]=[I["SI.IC.RADAR"],I["SI.M1.ALPHA"],I["SI.M2.TANGO"],I["SI.M3.GROUND"]],R["I-G-SRAA--"]=[I["SI.IC.RADAR"],I["SI.M1.ALPHA"],I["SI.M2.ALPHA"],I["SI.M3.GROUND"]],R["I-G-SRB---"]=[I["SI.IC.RADAR"],I["SI.M1.BRAVO"],I["SI.M2.SIERRA"],I["SI.M3.GROUND"]],R["I-G-SRCS--"]=[I["SI.IC.RADAR"],I["SI.M1.CHARLIE"],I["SI.M2.SIERRA"],I["SI.M3.GROUND"]],R["I-G-SRCA--"]=[I["SI.IC.RADAR"],I["SI.M1.CHARLIE"],I["SI.M2.ALPHA"],I["SI.M3.GROUND"]],R["I-G-SRD---"]=[I["SI.IC.RADAR"],I["SI.M1.DELTA"],I["SI.M2.TANGO"],I["SI.M3.GROUND"]],R["I-G-SRE---"]=[I["SI.IC.RADAR"],I["SI.M1.ECHO"],I["SI.M2.WHISKEY"],I["SI.M3.GROUND"]],R["I-G-SRF---"]=[I["SI.IC.RADAR"],I["SI.M1.FOXTROT"],I["SI.M2.CHARLIE"],I["SI.M3.GROUND"]],R["I-G-SRH---"]=[I["SI.IC.RADAR"],I["SI.M1.HOTEL"],I["SI.M2.FOXTROT"],I["SI.M3.GROUND"]],R["I-G-SRI---"]=[I["SI.IC.RADAR"],I["SI.M1.INDY"],I["SI.M2.FOXTROT"],I["SI.M3.GROUND"]],R["I-G-SRMM--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.ECHO"],I["SI.M3.GROUND"]],R["I-G-SRMA--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.ALPHA"],I["SI.M3.GROUND"]],R["I-G-SRMG--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.GOLF"],I["SI.M3.GROUND"]],R["I-G-SRMT--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.TANGO"],I["SI.M3.GROUND"]],R["I-G-SRMF--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.FOXTROT"],I["SI.M3.GROUND"]],R["I-G-SRS---"]=[I["SI.IC.RADAR"],I["SI.M1.SIERRA"],I["SI.M2.TANGO"],I["SI.M3.GROUND"]],R["I-G-SRTA--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.ALPHA"],I["SI.M3.GROUND"]],R["I-G-SRTI--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.INDY"],I["SI.M3.GROUND"]],R["I-G-SRTT--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.TANGO"],I["SI.M3.GROUND"]],R["I-G-SRU---"]=[I["SI.IC.RADAR"],I["SI.M1.UNIFORM"],I["SI.M2.NOVEMBER"],I["SI.M3.GROUND"]],R["I-S-SCC---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.CHARLIE"],I["SI.M2.MIKE"]],R["I-S-SCO---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.OSCAR"],I["SI.M2.LIMA"]],R["I-S-SCP---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.PAPA"],I["SI.M2.PAPA"]],R["I-S-SCS---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.SIERRA"],I["SI.M2.UNIFORM"]],R["I-S-SRAT--"]=[I["SI.IC.RADAR"],I["SI.M1.ALPHA"],I["SI.M2.TANGO"]],R["I-S-SRAA--"]=[I["SI.IC.RADAR"],I["SI.M1.ALPHA"],I["SI.M2.ALPHA"]],R["I-S-SRCA--"]=[I["SI.IC.RADAR"],I["SI.M1.CHARLIE"],I["SI.M2.ALPHA"]],R["I-S-SRCI--"]=[I["SI.IC.RADAR"],I["SI.M1.CHARLIE"],I["SI.M2.INDY"]],R["I-S-SRD---"]=[I["SI.IC.RADAR"],I["SI.M1.DELTA"],I["SI.M2.TANGO"]],R["I-S-SRE---"]=[I["SI.IC.RADAR"],I["SI.M1.ECHO"],I["SI.M2.WHISKEY"]],R["I-S-SRF---"]=[I["SI.IC.RADAR"],I["SI.M1.FOXTROT"],I["SI.M2.CHARLIE"]],R["I-S-SRH---"]=[I["SI.IC.RADAR"],I["SI.M1.HOTEL"],I["SI.M2.FOXTROT"]],R["I-S-SRI---"]=[I["SI.IC.RADAR"],I["SI.M1.INDY"],I["SI.M2.FOXTROT"]],R["I-S-SRMM--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.ECHO"]],R["I-S-SRMA--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.ALPHA"]],R["I-S-SRMG--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.GOLF"]],R["I-S-SRMT--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.TANGO"]],R["I-S-SRMF--"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.FOXTROT"]],R["I-S-SRS---"]=[I["SI.IC.RADAR"],I["SI.M1.SIERRA"],I["SI.M2.SIERRA"]],R["I-S-SRTA--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.ALPHA"]],R["I-S-SRTI--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.INDY"]],R["I-S-SRTT--"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.TANGO"]],R["I-S-SRU---"]=[I["SI.IC.RADAR"],I["SI.M1.UNIFORM"],I["SI.M2.NOVEMBER"]],R["I-U-SCO---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.OSCAR"],I["SI.M2.LIMA"]],R["I-U-SCP---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.PAPA"],I["SI.M2.PAPA"]],R["I-U-SCS---"]=[I["SI.IC.COMMUNICATIONS"],I["SI.M1.SIERRA"],I["SI.M2.UNIFORM"]],R["I-U-SRD---"]=[I["SI.IC.RADAR"],I["SI.M1.DELTA"],I["SI.M2.TANGO"]],R["I-U-SRE---"]=[I["SI.IC.RADAR"],I["SI.M1.ECHO"],I["SI.M2.WHISKY"]],R["I-U-SRM---"]=[I["SI.IC.RADAR"],I["SI.M1.MIKE"],I["SI.M2.FOXTROT"]],R["I-U-SRS---"]=[I["SI.IC.RADAR"],I["SI.M1.SIERRA"],I["SI.M2.SIERRA"]],R["I-U-SRT---"]=[I["SI.IC.RADAR"],I["SI.M1.TANGO"],I["SI.M2.ALPHA"]],R["I-U-SRU---"]=[I["SI.IC.RADAR"],I["SI.M1.UNIFORM"],I["SI.M2.NOVEMBER"]],R["O-V-A-----"]=[I["ST.IC.ARSON/FIRE"]],R["O-V-M-----"]=[I["ST.IC.KILLING VICTIM"]],R["O-V-MA----"]=[I["ST.IC.KILLING VICTIM"],I["ST.M1.MURDER"]],R["O-V-MB----"]=[I["ST.IC.KILLING VICTIM"],I["ST.M1.EXECUTION (WRONGFUL KILLING)"]],R["O-V-MC----"]=[I["ST.IC.KILLING VICTIM"],I["ST.M1.ASSASSINATION"]],R["O-V-B-----"]=[I["ST.IC.BOMB"]],R["O-V-Y-----"]=[I["ST.IC.BOOBY TRAP"]],R["O-V-D-----"]=[I["ST.IC.DRIVE-BY SHOOTING"]],R["O-V-S-----"]=[I["ST.IC.SNIPING"]],R["O-V-P-----"]=[I["ST.IC.POISONING"]],R["O-V-E-----"]=[I["ST.IC.EXPLOSION"]],R["O-V-EI----"]=[I["ST.IC.EXPLOSION"],I["ST.IC.IED"]],R["O-L-B-----"]=[I["ST.IC.BLACK LIST LOCATION"]],R["O-L-G-----"]=[I["ST.IC.GRAY LIST LOCATION"]],R["O-L-W-----"]=[I["ST.IC.WHITE LIST LOCATION"]],R["O-L-M-----"]=[I["ST.IC.MASS GRAVE LOCATION"]],R["O-O-P-----"]=[I["ST.IC.PATROLLING"]],R["O-O-RW----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.WILLING"]],R["O-O-RC----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.COERCED/IMPRESSED"]],R["O-O-D-----"]=[I["ST.IC.DEMONSTRATION"]],R["O-O-M-----"]=[I["ST.IC.MINE LAYING"]],R["O-O-Y-----"]=[I["ST.IC.PSYCHOLOGICAL OPERATIONS"]],R["O-O-YT----"]=[I["ST.IC.RADIO AND TELEVISION PSYCHOLOGICAL OPERATIONS"]],R["O-O-YW----"]=[I["ST.IC.PSYCHOLOGICAL OPERATIONS"],I["ST.M1.WRITTEN PSYCHOLOGICAL OPERATIONS"]],R["O-O-YH----"]=[I["ST.IC.PSYCHOLOGICAL OPERATIONS"],I["ST.M1.HOUSE-TO-HOUSE"]],R["O-O-F-----"]=[I["ST.IC.SEARCHING"]],R["O-O-S-----"]=[I["ST.IC.SPY"]],R["O-O-O-----"]=[I["ST.IC.FOOD DISTRIBUTION"]],R["O-O-E-----"]=[I["ST.IC.EXTORTION"]],R["O-O-HT----"]=[I["ST.IC.KNOWN INSURGENT VEHICLE"],I["ST.M1.HIJACKING/HIJACKED"]],R["O-O-HA----"]=[I["ST.IC.HIJACKING (AIRPLANE)"],I["ST.M1.HIJACKING/HIJACKED"]],R["O-O-HV----"]=[I["ST.IC.HIJACKING (BOAT)"],I["ST.M1.HIJACKING/HIJACKED"]],R["O-O-K-----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.KIDNAPPING"]],R["O-O-KA----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.KIDNAPPING"],I["ST.IC.ATTEMPTED CRIMINAL ACTIVITY"]],R["O-O-A-----"]=[I["ST.IC.ARREST"]],R["O-O-U-----"]=[I["ST.IC.DRUG RELATED ACTIVITIES"]],R["O-O-C-----"]=[I["ST.IC.COMPOSITE LOSS"]],R["O-O-CA----"]=[I["ST.IC.COMPOSITE LOSS"],I["ST.M1.COMBAT"]],R["O-O-CB----"]=[I["ST.IC.COMPOSITE LOSS"],I["ST.M1.ACCIDENT"]],R["O-O-CC----"]=[I["ST.IC.COMPOSITE LOSS"],I["ST.M1.OTHER"]],R["O-I-R-----"]=[I["ST.IC.GROUP"]],R["O-I-S-----"]=[I["ST.IC.SAFE HOUSE"]],R["O-I-G-----"]=[I["ST.IC.GRAFFITI"]],R["O-I-V-----"]=[I["ST.IC.VANDALISM/LOOT/RANSACK/PLUNDER/SACK"]],R["O-I-I-----"]=[I["ST.IC.KNOWN INSURGENT VEHICLE"]],R["O-I-D-----"]=[I["ST.IC.KNOWN INSURGENT VEHICLE"],I["ST.M1.DRUG"]],R["O-I-F-----"]=[I["ST.IC.INTERNAL SECURITY FORCE"]],R["O-P-------"]=[I["ST.IC.INDIVIDUAL"]],R["O-P-A-----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.LEADER"]],R["O-P-B-----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.TARGETED"]],R["O-P-C-----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.TERRORIST"]],R["O-G-------"]=[I["ST.IC.GROUP"]],R["O-G-A-----"]=[I["ST.IC.GROUP"],I["ST.M1.DISPLACED PERSONS, REFUGEES, AND EVACUEES"]],R["O-G-B-----"]=[I["ST.IC.GROUP"],I["ST.M1.NONGOVERNMENTAL ORGANIZATION (NGO)"]],R["O-G-C-----"]=[I["ST.IC.GROUP"],I["ST.M1.TERRORIST"]],R["O-G-D-----"]=[I["ST.IC.GROUP"],I["ST.M1.RELIGIOUS"]],R["O-G-E-----"]=[I["ST.IC.GROUP"],I["ST.M1.FOREIGN FIGHTERS"]],R["O-G-F-----"]=[I["ST.IC.GROUP"],I["ST.M1.GANG"]],R["O-R-------"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.RAPE"]],R["O-R-A-----"]=[I["ST.IC.INDIVIDUAL"],I["ST.M1.RAPE"],I["ST.IC.ATTEMPTED CRIMINAL ACTIVITY"]],R["E-I-A-----"]=[I["AC.IC.CRIMINAL.CIVIL DISTURBANCE"]],R["E-I-AC----"]=[I["ST.IC.GROUP"],I["AC.M1.RIOT"]],R["E-I-B-----"]=[I["AC.IC.CRIMINAL.ACTIVITY.INCIDENT"]],R["E-I-BA----"]=[I["ST.IC.BOMB"],I["AC.M1.THREAT"]],R["E-I-BC----"]=[I["ST.IC.EXPLOSION"],MS.scale(.6,I["ST.IC.BOMB"])],R["E-I-BD----"]=[I["ST.IC.GROUP"],I["ST.M1.LOOT"]],R["E-I-BF----"]=[I["AC.IC.SHOOTING"]],R["E-I-C-----"]=[I["AC.IC.FIRE EVENT"]],R["E-I-CA----"]=[I["AC.IC.HOT SPOT"]],R["E-I-CB----"]=[I["AC.IC.NON-REsIdENTIAL FIRE"]],R["E-I-CC----"]=[I["AC.IC.FIRE ORIGIN"]],R["E-I-CD----"]=[I["AC.IC.REsIdENTIAL FIRE"]],R["E-I-CE----"]=[I["AC.IC.SCHOOL FIRE"]],R["E-I-CF----"]=[I["AC.IC.SMOKE"]],R["E-I-CG----"]=[I["AC.IC.SPECIAL NEEDS FIRE"]],R["E-I-CH----"]=[I["AC.IC.WILD FIRE"]],R["E-I-D-----"]=[I["AC.IC.HAZARDOUS MATERIALS INCIDENT"]],R["E-I-DA----"]=[I["AC.IC.CHEMICAL AGENT"]],R["E-I-DB----"]=[I["AC.IC.CORROSIVE MATERIAL"]],R["E-I-DC----"]=[I["AC.IC.HAZARDOUS WHEN WET"]],R["E-I-DD----"]=[I["AC.IC.EXPLOSIVE MATERIAL"]],R["E-I-DE----"]=[I["AC.IC.FLAMMABLE GAS"]],R["E-I-DF----"]=[I["AC.IC.FLAMMABLE LIQUID"]],R["E-I-DG----"]=[I["AC.IC.FLAMMABLE SOLID"]],R["E-I-DH----"]=[I["AC.IC.NON-FLAMMABLE GAS"]],R["E-I-DI----"]=[I["AC.IC.ORGANIC PEROXIDE"]],R["E-I-DJ----"]=[I["AC.IC.OXIDIZER"]],R["E-I-DK----"]=[I["AC.IC.RADIOACTIVE MATERIAL"]],R["E-I-DL----"]=[I["AC.IC.SPONTANEOUSLY COMBUSTIBLE MATERIAL"]],R["E-I-DM----"]=[I["AC.IC.TOXIC GAS"]],R["E-I-DN----"]=[I["AC.IC.TOXIC INFECTIOUS MATERIAL"]],R["E-I-DO----"]=[I["AC.IC.UNEXPLODED ORDNANCE"]],R["E-I-E-----"]=[I["ST.M1.INCIDENT"],I["ST.IC.HIJACKING (AIRPLANE)"]],R["E-I-EA----"]=[I["ST.M1.ACCIDENT"],I["ST.IC.HIJACKING (AIRPLANE)"]],R["E-I-F-----"]=[I["ST.M1.INCIDENT"],I["ST.IC.HIJACKING (BOAT)"]],R["E-I-FA----"]=[I["ST.M1.ACCIDENT"],I["ST.IC.HIJACKING (BOAT)"]],R["E-I-G-----"]=[I["ST.M1.INCIDENT"],I["GR.EQ.TRAIN LOCOMOTIVE"]],R["E-I-GA----"]=[I["ST.M1.ACCIDENT"],I["GR.EQ.TRAIN LOCOMOTIVE"]],R["E-I-GB----"]=[I["GR.EQ.TRAIN LOCOMOTIVE"],I["ST.M1.HIJACKING/HIJACKED"]],R["E-I-H-----"]=[I["ST.M1.INCIDENT"],I["ST.IC.KNOWN INSURGENT VEHICLE"]],R["E-I-HA----"]=[I["ST.M1.ACCIDENT"],I["ST.IC.KNOWN INSURGENT VEHICLE"]],R["E-N-AA----"]=[I["AC.IC.AFTERSHOCK"]],R["E-N-AB----"]=[I["AC.IC.AVALANCHE"]],R["E-N-AC----"]=[I["AC.IC.EARTHQUAKE EPICENTER"]],R["E-N-AD----"]=[I["AC.IC.LANDSLIDE"]],R["E-N-AE----"]=[I["AC.IC.SUBSIDENCE"]],R["W-S-WSVE--"]=[I["AC.IC.VOLCANIC ERUPTION"]],R["E-N-AG----"]=[I["AC.IC.VOLCANIC THREAT"]],R["W-S-WSD-LI"]=[I["ATMOSPHERIC.IC.DRIZZLE.INTERMITTENT LIGHT"]],R["E-N-BB----"]=[I["AC.IC.DROUGHT"]],R["E-N-BC----"]=[I["AC.IC.FLOOD"]],R["W-S-WSFGSO"]=[I["ATMOSPHERIC.IC.FOG.SKY OBSCURED"]],R["W-S-WSGRL-"]=[I["ATMOSPHERIC.IC.HAIL.LIGHT NOT ASSOCIATED WITH THUNDER"]],R["E-N-BF----"]=[I["AC.IC.INVERSION"]],R["W-S-WSR-LI"]=[I["ATMOSPHERIC.IC.RAIN.INTERMITTENT LIGHT"]],R["W-S-WSDSLM"]=[I["ATMOSPHERIC.IC.DUST OR SAND.LIGHT TO MODERATE"]],R["W-S-WSS-LI"]=[I["ATMOSPHERIC.IC.SNOW.INTERMITTENT LIGHT"]],R["W-S-WSTMH-"]=[I["ATMOSPHERIC.IC.STORMS.THUNDERSTORM LIGHT TO MODERATE - WITH HAIL"]],R["W-S-WST-FC"]=[I["ATMOSPHERIC.IC.STORMS.FUNNEL CLOUD (TORNADO/WATERSPOUT)"]],R["W-S-WSTSS-"]=[I["ATMOSPHERIC.IC.TROPICAL STORM SYSTEMS.TROPICAL STORM"]],R["E-N-BM----"]=[I["AC.IC.TSUNAMI"]],R["E-N-CA----"]=[I["AC.IC.BIRD"]],R["E-N-CB----"]=[I["AC.IC.INSECT"]],R["E-N-CC----"]=[I["AC.IC.MICROBIAL"]],R["E-N-CD----"]=[I["AC.IC.REPTILE"]],R["E-N-CE----"]=[I["AC.IC.RODENT"]],R["E-O-A-----"]=R["E-O-AA----"]=R["E-O-AB----"]=R["E-O-AC----"]=R["E-O-AD----"]=[I["GR.IC.EMERGENCY MEDICAL OPERATION"]],R["E-O-AE----"]=[I["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],I["GR.M1.MEDEVAC"]],R["E-O-AF----"]=[MS.translate(0,10,MS.scale(.8,I["AR.I.FF.CIVILIAN ROTARY WING"])),I["GR.M1.MEDEVAC"]],R["E-O-AG----"]=[I["AC.IC.HEALTH DEPARTMENT FACILITY"]],R["E-O-AJ----"]=[I["AC.IC.MEDICAL FACILITIES OUTPATIENT"]],R["E-O-AK----"]=[I["AC.IC.OPERATION/EMERGENCY MEDICAL OPERATION"]],R["E-O-AL----"]=[I["AC.IC.PHARMACY"]],R["E-O-AM----"]=[I["AC.IC.TRIAGE"]],R["E-O-B-----"]=R["E-O-BA----"]=R["E-O-BB----"]=R["E-O-BC----"]=[I["GR.IC.FF.EMERGENCY OPERATION"]],R["E-O-BD----"]=[MS.scale(.7,I["GR.IC.FF.EMERGENCY OPERATION"]),I["AC.M1.EMERGENCY COLLECTION EVACUATION POINT"]],R["E-O-BE----"]=[MS.scale(.7,I["GR.IC.FF.EMERGENCY OPERATION"]),I["AC.M1.EMERGENCY INCIDENT COMMAND CENTER"]],R["E-O-BF----"]=[MS.scale(.7,I["GR.IC.FF.EMERGENCY OPERATION"]),I["AC.M1.EMERGENCY OPERATIONS CENTER"]],R["E-O-BG----"]=[I["AC.IC.EMERGENCY PUBLIC INFORMATION CENTER"]],R["E-O-BH----"]=[MS.scale(.7,I["GR.IC.FF.EMERGENCY OPERATION"]),I["AC.M1.EMERGENCY SHELTER"]],R["E-O-BI----"]=[MS.scale(.7,I["GR.IC.FF.EMERGENCY OPERATION"]),I["AC.M1.EMERGENCY STAGING AREA"]],R["E-O-BJ----"]=[I["GR.IC.FF.EMERGENCY OPERATION"]],R["E-O-BK----"]=R["S-G-USSW--"],R["E-O-BL----"]=[I["ST.IC.FOOD DISTRIBUTION"],I["AC.M1.EMERGENCY"]],R["E-O-C-----"]=R["E-O-CA----"]=R["E-O-CB----"]=R["E-O-CE----"]=[I["GR.IC.FIRE PROTECTION"]],R["E-O-CC----"]=[I["AC.IC.FIRE HYDRANT"]],R["E-O-CD----"]=[I["AC.IC.OTHER WATER SUPPLY LOCATION"]],R["E-O-D-----"]=R["E-O-DA----"]=R["E-O-DB----"]=R["E-O-DC----"]=[I["GR.IC.FF.LAW ENFORCEMENT"]],R["E-O-DD----"]=R["E-O-DDA---"]=R["E-O-DDB---"]=R["E-O-DDC---"]=[I["GR.IC.BUREAU OF ALCOHOL, TOBACCO, FIREARMS AND EXPLOSIVES (ATF) (DEPARTMENT OF JUSTICE)"]],R["E-O-DE----"]=R["E-O-DEA---"]=R["E-O-DEB---"]=R["E-O-DEC---"]=[I["GR.IC.FF.BORDER PATROL"]],R["E-O-DF----"]=R["E-O-DFA---"]=R["E-O-DFB---"]=R["E-O-DFC---"]=[I["GR.IC.FF.CUSTOMS SERVICE"]],R["E-O-DG----"]=R["E-O-DGA---"]=R["E-O-DGB---"]=R["E-O-DGC---"]=[I["GR.IC.DRUG ENFORCEMENT AGENCY (DEA)"]],R["E-O-DH----"]=R["E-O-DHA---"]=R["E-O-DHB---"]=R["E-O-DHC---"]=[I["GR.IC.FF.DEPARTMENT OF JUSTICE (DOJ)"]],R["E-O-DI----"]=R["E-O-DIA---"]=R["E-O-DIB---"]=R["E-O-DIC---"]=[I["GR.IC.FEDERAL BUREAU OF INVESTIGATION (FBI)"]],R["E-O-DJ----"]=R["E-O-DJB---"]=R["E-O-DJC---"]=[I["GR.IC.LAW ENFORCEMENT"]],R["E-O-DK----"]=[I["GR.IC.FF.PRISON"]],R["E-O-DL----"]=R["E-O-DLA---"]=R["E-O-DLB---"]=R["E-O-DLC---"]=[I["GR.IC.UNITED STATES SECRET SERVICE(TREAS) (USSS)"]],R["E-O-DM----"]=R["E-O-DMA---"]=R["E-O-DMB---"]=R["E-O-DMC---"]=[I["GR.IC.TRANSPORTATION SECURITY AGENCY (TSA)"]],R["E-O-DN----"]=R["E-O-DNA---"]=R["E-O-DNC---"]=[I["SE.IC.LAW ENFORCEMENT VESSEL"]],R["E-O-DO----"]=R["E-O-DOA---"]=R["E-O-DOB---"]=R["E-O-DOC---"]=[I["GR.IC.FF.US MARSHALS SERVICE"]],R["E-O-EA----"]=[MS.scale(.6,I["GR.EQ.SENSOR"]),I["GR.M1.BIOLOGICAL"]],R["E-O-EB----"]=[MS.scale(.6,I["GR.EQ.SENSOR"]),I["GR.M1.CHEMICAL"]],R["E-O-EC----"]=[MS.scale(.6,I["GR.EQ.SENSOR"]),I["GR.M1.INTRUSION"]],R["E-O-ED----"]=[MS.scale(.6,I["GR.EQ.SENSOR"]),I["GR.M1.NUCLEAR"]],R["E-O-EE----"]=[MS.scale(.6,I["GR.EQ.SENSOR"]),I["GR.M1.RADIOLOGICAL"]],R["E-F-A-----"]=[I["GR.IN.IC.AGRICULTURE AND FOOD INFRASTRUCTURE"]],R["E-F-AA----"]=[I["GR.IN.IC.AGRICULTURAL LABORATORY"]],R["E-F-AB----"]=[I["GR.IN.IC.ANIMAL FEEDLOT"]],R["E-F-AC----"]=[I["ST.IC.FOOD DISTRIBUTION"],I["AC.M1.COMMERCIAL"]],R["E-F-AD----"]=[I["GR.IN.IC.FARM/RANCH"]],R["E-F-AE----"]=[I["ST.IC.FOOD DISTRIBUTION"],I["AC.M1.PRODUCTION"]],R["E-F-AF----"]=[I["ST.IC.FOOD DISTRIBUTION"],I["AC.M1.RETAIL"]],R["E-F-AG----"]=[I["GR.IN.IC.GRAIN STORAGE"]],R["E-F-B-----"]=[I["AC.IC.BANKING FINANCE AND INSURANCE INFRASTRUCTURE"]],R["E-F-BA----"]=[I["GR.IN.IC.ATM"]],R["E-F-BB----"]=[I["GR.IN.IC.BANK"]],R["E-F-BC----"]=[I["GR.IN.IC.BULLION STORAGE"]],R["E-F-BD----"]=[I["GR.IN.IC.FEDERAL RESERVE BANK"]],R["E-F-BE----"]=[I["GR.IN.IC.FINANCIAL EXCHANGE"]],R["E-F-BF----"]=[I["GR.IN.IC.FINANCIAL SERVICES, OTHER"]],R["E-F-C-----"]=[I["GR.IN.IC.COMMERCIAL INFRASTRUCTURE"]],R["E-F-CA----"]=[I["GR.IN.IC.CHEMICAL PLANT"]],R["E-F-CB----"]=[I["GR.IN.IC.FIREARMS MANUFACTURER"]],R["E-F-CC----"]=[I["GR.IN.IC.FIREARMS RETAILER"]],R["E-F-CD----"]=[I["GR.IN.IC.HAZARDOUS MATERIAL PRODUCTION"]],R["E-F-CE----"]=[I["GR.IN.IC.HAZARDOUS MATERIAL STORAGE"]],R["E-F-CF----"]=[I["GR.IN.IC.INDUSTRIAL SITE"]],R["E-F-CG----"]=[I["GR.IN.IC.LANDFILL"]],R["E-F-CH----"]=[I["GR.IN.IC.PHARMACEUTICAL MANUFACTURER"]],R["E-F-CI----"]=[I["GR.IN.IC.CONTAMINATED HAZARDOUS WASTE SITE"]],R["E-F-CJ----"]=[I["GR.IN.IC.TOXIC RELEASE INVENTORY"]],R["E-F-D-----"]=[I["GR.IN.IC.EDUCATIONAL FACILITIES INFRASTRUCTURE"]],R["E-F-DA----"]=[I["GR.IN.IC.COLLEGE/UNIVERSITY"]],R["E-F-DB----"]=[I["GR.IN.IC.SCHOOL"]],R["E-F-EA----"]=[I["GR.IN.IC.ELECTRIC POWER"],I["AC.M1.GENERATION STATION"]],R["E-F-EB----"]=[I["GR.IN.IC.NATURAL GAS FACILITY"]],R["E-F-EE----"]=[I["GR.IN.IC.PROPANE FACILITY"]],R["E-F-F-----"]=[I["GR.IN.IC.GOVERNMENT SITE INFRASTRUCTURE"]],R["E-F-G-----"]=[I["GR.IN.IC.MILITARY INFRASTRUCTURE"]],R["E-F-GA----"]=[I["GR.IN.IC.BASE"],I["AC.M1.MILITARY ARMORY"]],R["E-F-H-----"]=[I["GR.IN.IC.POSTAL SERVICE INFRASTRUCTURE"]],R["E-F-HA----"]=[I["GR.IN.IC.POSTAL DISTRIBUTION CENTER"]],R["E-F-HB----"]=[I["GR.IN.IC.POST OFFICE"]],R["E-F-I-----"]=[I["GR.IN.IC.PUBLIC VENUES INFRASTRUCTURE"]],R["E-F-IA----"]=[I["GR.IN.IC.ENCLOSED FACITLITY (PUBLIC VENUE)"]],R["E-F-IB----"]=[I["GR.IN.IC.OPEN FACILITY (OPEN VENUE)"]],R["E-F-IC----"]=[I["GR.IN.IC.RECREATIONAL AREA"]],R["E-F-ID----"]=[I["GR.IN.IC.RELIGIOUS INSTITUTION"]],R["E-F-J-----"]=[I["GR.IN.IC.SPECIAL NEEDS INFRASTRUCTURE"]],R["E-F-JA----"]=[I["GR.IN.IC.ADULT DAY CARE"]],R["E-F-JB----"]=[I["GR.IN.IC.CHILD DAY CARE"]],R["E-F-JC----"]=[I["GR.IN.IC.ELDER CARE"]],R["E-F-K-----"]=[I["GR.IN.IC.TELECOMMUNICATIONS INFRASTRUCTURE"]],R["E-F-KB----"]=[I["GR.IN.IC.TELECOMMUNICATIONS TOWER"]],R["E-F-LA----"]=[I["GR.IN.IC.AIR TRAFFIC CONTROL FACILITY"]],R["G-M-BCB---"]=[I["GR.IN.IC.BRIDGE"]],R["E-F-LD----"]=[I["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"]],R["E-F-LE----"]=[I["SE.IC.FERRY"]],R["E-F-LF----"]=[I["GR.IN.IC.HELICOPTER LANDING SITE"]],R["W-S-ML----"]=[I["GR.IN.IC.TRANSPORTATION INFRASTRUCTURE LOCK"]],R["E-F-LH----"]=[I["GR.IC.MAINTENANCE"]],R["E-F-LJ----"]=[I["GR.IC.RAILHEAD"]],R["E-F-LK----"]=[I["GR.IN.IC.REST STOP"]],R["W-S-HPBA--"]=[I["GR.IN.IC.TRANSPORTATION INFRASTRUCTURE SHIP ANCHORAGE"]],R["E-F-LM----"]=[I["GR.IN.IC.TOLL FACILITY"]],R["G-S-PO----"]=[I["GR.IN.IC.TRANSPORTATION INFRASTRUCTURE.TRAFFIC CONTROL POINT"]],R["E-F-LO----"]=[I["GR.IN.IC.TRAFFIC INSPECTION FACILITY"]],R["E-F-LP----"]=[I["GR.IN.IC.TUNNEL"]],R["E-F-MA----"]=[I["GR.IN.IC.CONTROL VALVE"]],R["E-F-MB----"]=[I["GR.IN.IC.DAM"]],R["E-F-MC----"]=[I["GR.IN.IC.DISCHARGE OUTFALL"]],R["E-F-MD----"]=[I["GR.IN.IC.GROUND WATER WELL"]],R["E-F-ME----"]=[I["GR.IN.IC.PUMPING STATION"]],R["E-F-MF----"]=[I["GR.IN.IC.RESERVOIR"]],R["E-F-MG----"]=[I["GR.IN.IC.STORAGE TOWER"]],R["E-F-MH----"]=[I["GR.IN.IC.SURFACE WATER INTAKE"]],R["E-F-MI----"]=[I["GR.IN.IC.WASTEWATER TREATMENT FACILITY"]],R},MS._getNumberProperties=function(I,E){var R=(this.SIDC.substr(0,2),this.SIDC.substr(2,1)),C=this.SIDC.substr(3,1),A=this.SIDC.substr(4,2),S=this.SIDC.substr(6,1),N=this.SIDC.substr(7,1),T=this.SIDC.substr(8,2),M={0:"Unknown",1:"Unknown",2:"Friend",3:"Friend",4:"Neutral",5:"Hostile",6:"Hostile"},t={"00":"Sea","01":"Air","02":"Air","05":"Air","06":"Air",10:"Ground",11:"Ground",15:"Ground",20:"Ground",30:"Sea",35:"Subsurface",36:"Subsurface",40:"Ground",50:"Air",51:"Air",52:"Ground",53:"Sea",54:"Subsurface",60:"Ground"},L=I.functionid=this.SIDC.substr(10,10),O={11e4:140,110100:140,110101:140,110102:140,110103:140,110200:140,110201:140,110202:140,110203:140,110300:140,110301:140,110302:140,110303:140,110400:135,110500:140,110501:140,110502:140,110503:140,110600:140,110601:140,110602:140,110603:140,110700:140,110701:140,110702:140,110703:140,110800:140,110801:140,110802:140,110803:140,110900:140,110901:140,110902:140,110903:140,111e3:140,111001:140,111002:140,111003:140,111100:140,111101:140,111102:140,111103:140,111104:140,111105:140,111106:140,111107:140,111108:140,111109:140,111200:140,111201:140,111202:140,111203:140,111300:140,111301:140,111302:140,111303:140,111400:140,111401:140,111402:140,111403:140,111500:140,111501:140,111502:140,111503:140,111600:140,111601:140,111602:140,111603:140,111701:140,111702:140,111703:140,111800:140,111900:140,112e3:140,12e4:129,120100:129,120101:130,120102:130,120103:972.3621826171875,120104:130,120105:120,120106:120,120107:120,120108:130,120109:130,120110:140,120200:130,120201:130,120202:130,120203:130,120300:130,120301:130,120302:130,120303:130,13e4:129,130100:115,130200:130,130300:130,130400:135,130500:120,130600:120,130700:120,130701:130,130800:130,130801:130,130900:120,130901:130,130902:130,131e3:115,131001:130,131002:130,131003:140,131100:130,131101:130,131200:130,131300:130,131400:140,131500:140,131600:140,140100:130,140200:130,140300:130,140400:130,140500:130,140600:140,140601:140,140602:140,140603:140,140700:140,140800:140,140900:130,141e3:130,141100:140,141200:130,141201:130,141202:130,150100:130,150200:140,160100:132.5,160101:132.5,160102:132.5,160103:132.5,160200:132.5,160201:132.5,160202:132.5,160203:132.5,160300:132.5,160301:132.5,160302:132.5,160303:132.5,160400:132.5,160401:132.5,160402:132.5,160403:132.5,160500:132.5,160501:132.5,160502:132.5,160503:132.5,160600:132.5,160601:132.5,160602:132.5,160603:132.5,160700:132.5,160701:132.5,160702:132.5,160703:132.5,160800:115,160900:115,17e4:149.03125,170100:118.75,170200:133.21875,170300:135.21875,170400:118.75,170500:138.1875,170600:118.75,170700:118.75,170800:118,170900:118,171e3:135,171100:135,18e4:125,19e4:129,190100:129,190200:129,190300:129,190400:129,190500:129,200100:140,200200:118.75,200300:120,200400:140,200500:132,200600:118.75,200700:118.75,200800:118.75,200900:119.36222839355469,201e3:145,201100:120,201200:118,201300:124.36222076416016,201400:118.75,201500:140,201501:115,210100:122,210200:122,210300:122,210400:118.75,210500:122,220100:140,220200:136,220300:120,23e4:135,230100:132.5,230200:120,24e4:118.75};return 15==A&&O.hasOwnProperty(L.substr(0,6))&&(I.iconBottom=O[L.substr(0,6)]),I.context=E.context[parseInt(this.SIDC.substr(2,1))],I.affiliation=M[C],I.dimension=t[A],"05"!=A&&"06"!=A&&"50"!=A||(I.space=!0),"40"==A&&(I.activity=!0),"20"==A&&(I.installation=!0),"36"==A&&0==this.alternateMedal&&(I.fill=!1),"30"==A&&15e4==L.substr(0,6)&&(I.frame=!1),"1"==S&&(I.notpresent=MS.dashArrays.anticipated),"0"!=C&&"2"!=C&&"5"!=C||(I.notpresent=MS.dashArrays.pending),"30"==A&&16e4==L.substr(0,6)&&(I.notpresent=MS.dashArrays.pending),"35"==A&&14e4==L.substr(0,6)&&(I.notpresent=MS.dashArrays.pending),"35"==A&&15e4==L.substr(0,6)&&(I.notpresent=MS.dashArrays.pending),"2"!=S&&"3"!=S&&"4"!=S&&"5"!=S||(I.condition=E.status[parseInt(S)]),I.baseDimension=I.dimension,I.baseAffilation=I.affiliation,"5"==C&&"1"==R&&(I.joker=!0),"6"==C&&"1"==R&&(I.faker=!0),(I.joker||I.faker)&&(I.affiliation=E.affiliation[1]),"00"==A&&(I.dimensionUnknown=!0),"00"==A&&"1"==R&&"Unknown"!=I.affiliation&&(I.affiliation=""),"15"!=A&&"52"!=A||(I.dimension=E.dimension[2]),["1","3","5","7"].indexOf(N)>-1&&(I.feintDummy=!0),["2","3","6","7"].indexOf(N)>-1&&(I.headquarters=!0),["4","5","6","7"].indexOf(N)>-1&&(I.taskForce=!0),T<=30&&(I.echelon=E.echelonMobility[T]),T>=30&&(I.mobility=E.echelonMobility[T]),("01"==A&&"12"==L.substring(0,2)||"05"==A&&"12"==L.substring(0,2)||"11"==A||"15"==A&&"16"==L.substring(0,2)||"30"==A&&"14"==L.substring(0,2)||"35"==A&&"12"==L.substring(0,2))&&(I.civilian=!0),I},MS._getNumberSIDCicn=function(I,E,R){var C={},A={},S={};if("01"==I&&(C[11e4]=[E["AR.I.MILITARY"]],C[110100]=[E["AR.I.FIXED-WING DSymbol"]],C[110101]=[E["AR.I.MEDICAL EVACUATION"]],C[110102]=[E["AR.I.ATTACK/STRIKE"]],C[110103]=[E["AR.I.BOMBER"]],C[110104]=[E["AR.I.FIGHTER"]],C[110105]=[E["AR.I.FIGHTER/BOMBER"]],C[110107]=[E["AR.I.CARGO"]],C[110108]=[E["AR.I.JAMMER / ELECTRONIC COUNTER-MEASURES"]],C[110109]=[E["AR.I.TANKER"]],C[110110]=[E["AR.I.PATROL"]],C[110111]=[E["AR.I.RECONNAISSANCE"]],C[110112]=[E["AR.I.TRAINER"]],C[110113]=[E["AR.I.UTILITY"]],C[110114]=[E["AR.I.VSTOL"]],C[110115]=[E["AR.I.AIRBORNE COMMAND POST"]],C[110116]=[E["AR.I.AIRBORNE EARLY WARNING"]],C[110117]=[E["AR.I.ANTISURFACE WARFARE"]],C[110118]=[E["AR.I.ANTISUBMARINE WARFARE"]],C[110119]=[E["AR.I.COMMUNICATIONS"]],C[110120]=[E["AR.I.COMBAT SEARCH AND RESCUE"]],C[110121]=[E["AR.I.ELECTRONIC SUPPORT"]],C[110122]=[E["AR.I.GOVERNMENT"]],C[110123]=[E["AR.I.MINE COUNTERMEASURES"]],C[110124]=[E["AR.I.PERSONNEL RECOVERY DSymbol"]],C[110125]=[E["AR.I.SEARCH AND RESCUE"]],C[110126]=[E["AR.I.SPECIAL OPERATIONS FORCES"]],C[110127]=[E["AR.I.ULTRA LIGHT"]],C[110128]=[E["AR.I.PHOTOGRAPHIC RECONNAISSANCE"]],C[110129]=[E["AR.I.VIP"]],C[110130]=[E["AR.I.SUPRESSION OF ENEMY AIR DEFENCE"]],C[110131]=[E["AR.I.PASSENGER"]],C[110132]=[E["AR.I.ESCORT"]],C[110133]=[E["AR.I.ELECTRONIC ATTACK (EA)"]],C[110200]=[E["AR.I.MILITARY ROTARY WING"]],C[110300]=[E["AR.I.UNMANNED AERIAL VEHICLE"]],C[110400]=[E["AR.I.VERTICAL-TAKEOFF UAV (VT-UAV)"]],C[110500]=[E["AR.I.MILITARY BALLOON"]],C[110600]=[E["AR.I.MILITARY AIRSHIP"]],C[110700]=[E["AR.I.TETHERED LIGHTER THAN AIR"]],C[12e4]=[E["AR.I.CIVILIAN"]],C[120100]=[E["AR.I.CIVILIAN FIXED-WING DSymbol"]],C[120200]=[E["AR.I.CIVILIAN ROTARY WING"]],C[120300]=[E["AR.I.CIVILIAN UNMANNED AERIAL VEHICLE"]],C[120400]=[E["AR.I.CIVILIAN BALLOON"]],C[120500]=[E["AR.I.CIVILIAN AIRSHIP"]],C[120600]=[E["AR.I.CIVILIAN TETHERED LIGHTER THAN AIR"]],C[13e4]=[E["AR.I.WEAPON"]],C[130100]=[E["AR.I.BOMB"]],C[130200]=[E["AR.I.UNDERWATER DECOY DSymbol"]],C[14e4]=[E["AR.I.MANUAL TRACK"]],A["01"]=[E["AIR.M1.ATTACK"]],A["02"]=[E["AIR.M1.BOMBER"]],A["03"]=[E["AIR.M1.CARGO"]],A["04"]=[E["AIR.M1.FIGHTER"]],A["05"]=[E["AIR.M1.INTERCEPTOR"]],A["06"]=[E["AIR.M1.TANKER"]],A["07"]=[E["AIR.M1.UTILITY"]],A["08"]=[E["AIR.M1.VSTOL"]],A["09"]=[E["AIR.M1.PASSENGER"]],A[10]=[E["AIR.M1.ULTRA LIGHT"]],A[11]=[E["AIR.M1.AIRBORNE COMMAND POST"]],A[12]=[E["AIR.M1.AIRBORNE EARLY WARNING"]],A[13]=[E["AIR.M1.GOVERNMENT"]],A[14]=[E["AIR.M1.MEDEVAC"]],A[15]=[E["AIR.M1.ESCORT"]],A[16]=[E["AIR.M1.JAMMER / ELECTRONIC COUNTER-MEASURES"]],A[17]=[E["AIR.M1.PATROL"]],A[18]=[E["AIR.M1.RECONNAISSANCE"]],A[19]=[E["AIR.M1.TRAINER"]],A[20]=[E["AIR.M1.PHOTOGRAPHIC"]],A[21]=[E["AIR.M1.PERSONNEL RECOVERY"]],A[22]=[E["AIR.M1.ANTISUBMARINE WARFARE"]],A[23]=[E["AIR.M1.COMMUNICATIONS"]],A[24]=[E["AIR.M1.ELECTRONIC SUPPORT (ES)"]],A[25]=[E["AIR.M1.MINE COUNTERMEASURES"]],A[26]=[E["AIR.M1.SEARCH AND RESCUE"]],A[27]=[E["AIR.M1.SPECIAL OPERATIONS FORCES"]],A[28]=[E["AIR.M1.SURFACE WARFARE"]],A[29]=[E["AIR.M1.VIP"]],A[30]=[E["AIR.M1.COMBAT SEARCH AND RESCUE"]],A[31]=[E["AIR.M1.SUPRESSION OF ENEMY AIR DEFENCE"]],A[32]=[E["AIR.M1.ANTISURFACE WARFARE"]],A[33]=[E["AIR.M1.FIGHTER/BOMBER"]],A[34]=[E["AIR.M1.INTENSIVE CARE"]],A[35]=[E["AIR.M1.ELECTRONIC ATTACK (EA)"]],A[36]=[E["AIR.M1.MULTIMISSION"]],A[37]=[E["AIR.M1.HIJACKING"]],A[38]=[E["AIR.M1.ASW HELO-LAMPS"]],A[39]=[E["AIR.M1.ASW HELO - SH-60R"]],S["01"]=[E["AIR.M2.HEAVY"]],S["02"]=[E["AIR.M2.MEDIUM"]],S["03"]=[E["AIR.M2.LIGHT"]],S["04"]=[E["AIR.M2.BOOM-ONLY"]],S["05"]=[E["AIR.M2.DROUGE-ONLY"]],S["06"]=[E["AIR.M2.BOOM AND DROUGE"]],S["07"]=[E["AIR.M2.CLOSE RANGE"]],S["08"]=[E["AIR.M2.SHORT RANGE"]],S["09"]=[E["AIR.M2.MEDIUM RANGE"]],S[10]=[E["AIR.M2.LONG RANGE"]],S[11]=[E["AIR.M2.DOWNLINKED"]]),"02"==I&&(C[11e4]=[E["AIR.MISSILE.ICON"]],A["01"]=[E["AIR.MISSILE.M1.AIR"]],A["02"]=[E["AIR.MISSILE.M1.SURFACE"]],A["03"]=[E["AIR.MISSILE.M1.SUBSURFACE"]],A["04"]=[E["AIR.MISSILE.M1.SPACE"]],A["05"]=[E["AIR.MISSILE.M1.ANTI-BALLISTIC"]],A["06"]=[E["AIR.MISSILE.M1.BALLISTIC"]],A["07"]=[E["AIR.MISSILE.M1.CRUISE"]],A["08"]=[E["AIR.MISSILE.M1.INTERCEPTOR"]],S["01"]=[E["AIR.MISSILE.M2.AIR"]],S["02"]=[E["AIR.MISSILE.M2.SURFACE"]],S["03"]=[E["AIR.MISSILE.M2.SUBSURFACE"]],S["04"]=[E["AIR.MISSILE.M2.SPACE"]],S["05"]=[E["AIR.MISSILE.M2.LAUNCHED"]],S["06"]=[E["AIR.MISSILE.M2.MISSILE"]],S["07"]=[E["AIR.MISSILE.M2.PATRIOT"]],S["08"]=[E["AIR.MISSILE.M2.STANDARD MISSILE - 2 (SM-2)"]],S["09"]=[E["AIR.MISSILE.M2.STANDARD MISSILE - 6 (SM-6)"]],S[10]=[E["AIR.MISSILE.M2.EVOLVED SEA SPARROW MISSILE (ESSM)"]],S[11]=[E["AIR.MISSILE.M2.ROLLING AIRFRAME MISSILE (RAM)"]],S[12]=[E["AIR.MISSILE.M2.SHORT RANGE"]],S[13]=[E["AIR.MISSILE.M2.MEDIUM RANGE"]],S[14]=[E["AIR.MISSILE.M2.INTERMEDIATE RANGE"]],S[15]=[E["AIR.MISSILE.M2.LONG RANGE"]],S[16]=[E["SPACE.MISSILE.M2.SPACE"]]),"05"==I&&(C[11e4]=[E["SP.I.MILITARY"]],C[110100]=[E["SP.I.SPACE VEHICLE"]],C[110200]=[E["SP.I.RE-ENTRY VEHICLE"]],C[110300]=[E["SPACE.PLANET LANDER"]],C[110400]=[E["SP.I.ORBITER SHUTTLE"]],C[110500]=[E["SP.I.CAPSULE"]],C[110600]=[E["SP.I.SATELLITE, GENERAL"]],C[110700]=[E["SP.I.SATELLITE"]],C[110800]=[E["SP.I.ANTISATELLITE WEAPON"]],C[110900]=[E["SP.I.ASTRONOMICAL SATELLITE"]],C[111e3]=[E["SP.I.BIOSATELLITE"]],C[111100]=[E["SP.I.COMMUNICATIONS SATELLITE"]],C[111200]=[E["SP.I.EARTH OBSERVATION SATELLITE"]],C[111300]=[E["SP.I.MINIATURIZED SATELLITE"]],C[111400]=[E["SP.I.NAVIGATIONAL SATELLITE"]],C[111500]=[E["SP.I.RECONNAISSANCE SATELLITE"]],C[111600]=[E["SP.I.SPACE STATION"]],C[111700]=[E["SP.I.TETHERED SATELLITE"]],C[111800]=[E["SP.I.WEATHER SATELLITE"]],C[111900]=[E["SP.I.SPACE LAUNCH VEHICLE"]],C[12e4]=[E["AR.I.CIVILIAN"]],C[120100]=[E["SP.I.CIVILIAN ORBITER SHUTTLE"]],C[120200]=[E["SP.I.CIVILIAN CAPSULE"]],C[120300]=[E["SP.I.CIVILIAN SATELLITE"]],C[120400]=[E["SP.I.CIVILIAN ASTRONOMICAL SATELLITE"]],C[120500]=[E["SP.I.CIVILIAN BIOSATELLITE"]],
C[120600]=[E["SP.I.CIVILIAN COMMUNICATIONS SATELLITE"]],C[120700]=[E["SP.I.CIVILIAN EARTH OBSERVATION SATELLITE"]],C[120800]=[E["SP.I.CIVILIAN MINIATURIZED SATELLITE"]],C[120900]=[E["SP.I.CIVILIAN NAVIGATIONAL SATELLITE"]],C[121e3]=[E["SP.I.CIVILIAN SPACE STATION"]],C[121100]=[E["SP.I.CIVILIAN TETHERED SATELLITE"]],C[121200]=[E["SP.I.CIVILIAN WEATHER SATELLITE"]],C[13e4]=[E["SP.I.MANUAL TRACK"]],A["01"]=[E["SP.M1.LOW EARTH ORBIT (LEO)"]],A["02"]=[E["SP.M1.MEDIUM EARTH ORBIT (MEO)"]],A["03"]=[E["SP.M1.HIGH EARTH ORBIT (HEO)"]],A["04"]=[E["SP.M1.GEOSYNCHRONOUS ORBIT (GSO)"]],A["05"]=[E["SP.M1.GEOSTATIONARY ORBIT (GO)"]],A["06"]=[E["SP.M1.MOLNIYA ORBIT (MO)"]],S["01"]=[E["SP.M2.OPTICAL"]],S["02"]=[E["SP.M2.INFRARED"]],S["03"]=[E["SP.M2.RADAR"]],S["04"]=[E["SP.M2.SIGNALS INTELLIGENCE (SIGINT)"]]),"06"==I&&(C[11e4]=[E["AIR.MISSILE.ICON"]],A["01"]=[E["SPACE.MISSILE.M1.BALLISTIC"]],A["02"]=[E["SPACE.MISSILE.M1.SPACE"]],A["03"]=[E["SPACE.MISSILE.M1.INTERCEPTOR"]],S["01"]=[E["SPACE.MISSILE.M2.SHORT RANGE"]],S["02"]=[E["SPACE.MISSILE.M2.MEDIUM RANGE"]],S["03"]=[E["SPACE.MISSILE.M2.INTERMEDIATE RANGE"]],S["04"]=[E["SPACE.MISSILE.M2.LONG RANGE"]],S["05"]=[E["SPACE.MISSILE.M2.INTERCONTINENTAL"]],S["06"]=[E["SPACE.MISSILE.M2.ARROW"]],S["07"]=[E["SPACE.MISSILE.M2.GROUND-BASED INTERCEPTOR (GBI)"]],S["08"]=[E["SPACE.MISSILE.M2.PATRIOT"]],S["09"]=[E["SPACE.MISSILE.M2.STANDARD MISSILE - TERMINAL PHASE (SM-T)"]],S[10]=[E["SPACE.MISSILE.M2.STANDARD MISSILE - 3 (SM-3)"]],S[11]=[E["SPACE.MISSILE.M2.TERMINAL HIGH-ALTITUDE AREA DEFENSE (THAAD)"]],S[12]=[E["SPACE.MISSILE.M2.SPACE"]]),"10"==I){C[11e4]=[E["GR.IC.COMMAND AND CONTROL"]],C[110100]=[E["GR.IC.FF.BROADCAST TRANSMITTER ANTENNA"]],C[110200]=[E["GR.IC.CIVIL AFFAIRS"]],C[110300]=[E["GR.IC.CIVIL-MILITARY-COOPERATION"]],C[110400]=[E["GR.IC.INFORMATION OPERATIONS"]],C[110500]=[E["GR.IC.LIAISON"]],C[110600]=[E["GR.IC.MILITARY INFORMATION SUPPORT OPERATIONS (MISO)"]],C[110601]=[E["GR.IC.MILITARY INFORMATION SUPPORT OPERATIONS (MISO)"],E["GR.IC.FF.BROADCAST TRANSMITTER ANTENNA"]],C[110700]=[E["GR.IC.RADIO"]],C[110800]=[E["GR.IC.RADIO RELAY"]],C[110900]=[E["GR.IC.RADIO TELETYPE CENTRE"]],C[111e3]=[E["GR.IC.FF.SIGNAL"]],C[111001]=[E["GR.IC.FF.SIGNAL"],E["GR.IC.RADIO"]],C[111002]=[E["GR.IC.FF.SIGNAL"],E["GR.IC.RADIO RELAY"]],C[111003]=[E["GR.IC.FF.SIGNAL"],E["GR.IC.RADIO TELETYPE CENTRE"]],C[111004]=[E["GR.IC.FF.SIGNAL"],E["SP.I.FF.SATELLITE"]],C[111005]=[E["GR.IC.FF.SIGNAL"],E["GR.IC.VIDEO IMAGERY"]],C[111100]=[E["SP.I.FF.SATELLITE"]],C[111200]=[E["GR.IC.VIDEO IMAGERY"]],C[120100]=[E["GR.IC.FF.AIR ASSAULT WITH ORGANIC LIFT"]],C[120200]=[E["GR.IC.AIR TRAFFIC SERVICES"]],C[120300]=[E["GR.IC.FF.AMPHIBIOUS"]],C[120400]=[E["GR.IC.FF.ANTITANK/ANTIARMOUR"]],C[120401]=[E["GR.IC.FF.ANTITANK/ANTIARMOUR"],E["GR.IC.ARMOUR"]],C[120402]=[E["GR.IC.FF.ANTITANK/ANTIARMOUR"],E["GR.IC.FF.MOTORIZED"]],C[120500]=[E["GR.IC.ARMOUR"]],C[120501]=[E["GR.IC.ARMOUR"],E["GR.IC.FF.RECONNAISSANCE"]],C[120502]=[E["GR.IC.ARMOUR"],E["GR.IC.FF.AMPHIBIOUS"]],C[120600]=[E["GR.IC.AVIATION ROTARY WING"]],C[120601]=[E["GR.IC.AVIATION ROTARY WING"],E["GR.IC.FF.RECONNAISSANCE"]],C[120700]=[E["GR.IC.AVIATION COMPOSITE"]],C[120800]=[E["GR.IC.AVIATION FIXED WING"]],C[120801]=[E["GR.IC.AVIATION FIXED WING"],E["GR.IC.FF.RECONNAISSANCE"]],C[120900]=[E["GR.IC.COMBAT"]],C[121e3]=[E["GR.IC.COMBINED ARMS"]],C[121100]=[E["GR.IC.FF.INFANTRY"]],C[121101]=[E["GR.IC.FF.INFANTRY"],E["GR.IC.FF.AMPHIBIOUS"]],C[121102]=[E["GR.IC.FF.INFANTRY"],E["GR.IC.ARMOUR"]],C[121103]=[E["GR.IC.FF.INFANTRY"],E["GR.IC.FF.MAIN GUN SYSTEM"]],C[121104]=[E["GR.IC.FF.INFANTRY"],E["GR.IC.FF.MOTORIZED"]],C[121105]=[E["GR.IC.FF.INFANTRY"],E["GR.IC.ARMOUR"],E["GR.IC.FF.MAIN GUN SYSTEM"]],C[121200]=[E["GR.IC.OBSERVER/OBSERVATION"]],C[121300]=[E["GR.IC.FF.RECONNAISSANCE"]],C[121301]=[E["GR.IC.FF.RECONNAISSANCE"],E["GR.IC.SURVEILLANCE"]],C[121302]=[E["GR.IC.FF.RECONNAISSANCE"],E["GR.IC.FF.AMPHIBIOUS"]],C[121303]=[E["GR.IC.FF.RECONNAISSANCE"],E["GR.IC.FF.MOTORIZED"]],C[121400]=[E["GR.IC.SEA-AIR-LAND"]],C[121500]=[E["GR.IC.SNIPER"]],C[121600]=[E["GR.IC.SURVEILLANCE"]],C[121700]=[E["GR.IC.SPECIAL FORCES"]],C[121800]=[E["GR.IC.SPECIAL OPERATIONS FORCES"]],C[121801]=[E["GR.IC.FIXED WING MISO"]],C[121802]=[E["GR.IC.SPECIAL OPERATIONS FORCES"],E["GR.IC.FF.INFANTRY"]],C[121803]=[E["SE.IC.COMBATANT"],E["GR.M1.SPECIAL OPERATIONS FORCES (SOF)"]],C[121804]=[E["SU.IC.SUBMARINE NUCLEAR PROPULSION"],E["GR.M1.SPECIAL OPERATIONS FORCES (SOF)"]],C[121805]=[E["SOF.IC.UNDERWATER DEMOLITION TEAM"]],C[121900]=[E["GR.IC.UNMANNED SYSTEMS"]],C[130100]=[E["GR.IC.FF.AIR DEFENCE"]],C[130101]=[E["GR.IC.FF.AIR DEFENCE"],E["GR.IC.FF.MAIN GUN SYSTEM"]],C[130102]=[E["GR.IC.FF.AIR DEFENCE"],E["GR.IC.AIR DEFENSE MISSILE"]],C[130200]=[E["GR.IC.FIELD ARTILLERY"],E["GR.IC.FF.RECONNAISSANCE"],E["GR.IC.AVIATION ROTARY WING"],E["GR.M1.NAVAL"]],C[130300]=[E["GR.IC.FIELD ARTILLERY"]],C[130301]=[MS.scale(.8,E["GR.IC.FIELD ARTILLERY"]),E["GR.IC.ARMOUR"]],C[130302]=[MS.scale(.8,E["GR.IC.FIELD ARTILLERY"]),E["GR.IC.ARMOUR"],E["GR.IC.FF.RECONNAISSANCE"]],C[130400]=[E["GR.IC.FIELD ARTILLERY OBSERVER"]],C[130500]=[E["GR.IC.JOINT FIRE SUPPORT"]],C[130600]=[E["GR.IC.METEOROLOGICAL"]],C[130700]=[E["GR.IC.MISSILE"]],C[130800]=[E["GR.IC.MORTAR"]],C[130801]=[E["GR.IC.MORTAR"],E["GR.M2.TRACKED"]],C[130802]=[E["GR.IC.MORTAR"],E["GR.M2.TRUCK"]],C[130803]=[E["GR.IC.MORTAR"],E["GR.M2.TOWED"]],C[130900]=[E["GR.IC.SURVEY"]],C[140100]=[E["GR.IC.CBRN"]],C[140101]=[E["GR.IC.CBRN"],E["GR.IC.ARMOUR"]],C[140102]=[E["GR.IC.CBRN"],E["GR.IC.FF.MOTORIZED"]],C[140103]=[E["GR.IC.CBRN"],E["GR.IC.FF.RECONNAISSANCE"]],C[140104]=[E["GR.IC.CBRN"],E["GR.IC.FF.RECONNAISSANCE"],E["GR.IC.ARMOUR"]],C[140105]=[E["GR.IC.CBRN"],E["GR.IC.FF.RECONNAISSANCE"],E["GR.IC.FF.MOTORIZED"]],C[140200]=[E["GR.IC.COMBAT SUPPORT (MANOEUVRE ENHANCEMENT)"]],C[140300]=[E["GR.IC.CRIMINAL INVESTIGATION DIVISION"]],C[140400]=[E["SU.IC.DIVER, CIVILIAN"]],C[140500]=[E["GR.IC.DOG"]],C[140600]=[E["GR.IC.DRILLING"]],C[140700]=[E["GR.IC.ENGINEER"]],C[140701]=[MS.scale(.7,E["GR.IC.ENGINEER"]),E["GR.IC.ARMOUR"]],C[140702]=[E["GR.IC.ENGINEER"],E["GR.IC.FF.MOTORIZED"]],C[140703]=[E["GR.IC.ENGINEER"],E["GR.IC.FF.RECONNAISSANCE"]],C[140800]=[E["GR.IC.EXPLOSIVE ORDNANCE DISPOSAL"]],C[140900]=[E["GR.IC.FIELD CAMP CONSTRUCTION"]],C[141e3]=[E["GR.IC.FIRE PROTECTION"]],C[141100]=[E["GR.IC.GEOSPATIAL SUPPORT"]],C[141200]=[E["GR.IC.MILITARY POLICE"]],C[141300]=[E["GR.IC.MINE"]],C[141400]=[E["GR.IC.MINE CLEARING"]],C[141500]=[E["GR.IC.MINE LAUNCHING"]],C[141600]=[E["GR.IC.MINE LAYING"]],C[141700]=[E["GR.IC.SECURITY"]],C[141701]=[E["GR.IC.SECURITY"],E["GR.IC.ARMOUR"]],C[141702]=[E["GR.IC.SECURITY"],E["GR.IC.FF.MOTORIZED"]],C[141800]=[E["AR.I.SEARCH AND RESCUE"]],C[141900]=[E["GR.IC.SECURITY POLICE (AIR)"]],C[142e3]=[E["GR.IC.SHORE PATROL"]],C[142100]=[E["GR.IC.TOPOGRAPHIC"]],C[150100]=[E["GR.IC.FF.ANALYSIS"]],C[150200]=[E["GR.IC.COUNTER-INTELLIGENCE"]],C[150300]=[E["GR.IC.FF.DIRECTION FINDING"]],C[150400]=[E["GR.IC.ELECTRONIC RANGING"]],C[150500]=[E["GR.IC.ELECTRONIC WARFARE"]],C[150501]=[E["GR.IC.ELECTRONIC WARFARE"],E["GR.IC.FF.ANALYSIS"]],C[150502]=[E["GR.IC.ELECTRONIC WARFARE"],E["GR.IC.FF.DIRECTION FINDING"]],C[150503]=[E["GR.IC.ELECTRONIC WARFARE"],E["GR.IC.FF.INTERCEPT"]],C[150504]=[E["GR.IC.ELECTRONIC WARFARE"],E["GR.IC.FF.JAMMING"]],C[150505]=[E["GR.IC.ELECTRONIC WARFARE"],E["GR.IC.FF.SEARCH"]],C[150600]=[E["GR.IC.FF.INTERCEPT"]],C[150700]=[E["GR.IC.INTERROGATION"]],C[150800]=[E["GR.IC.FF.JAMMING"]],C[150900]=[E["GR.IC.JOINT INTELLIGENCE CENTRE"]],C[151e3]=[E["GR.IC.MILITARY INTELLIGENCE"]],C[151100]=[E["GR.IC.FF.SEARCH"]],C[151200]=[E["GR.IC.SENSOR"]],C[16e4]=[E["GR.IC.SUSTAINMENT"]],C[160100]=[E["GR.IC.ADMINISTRATIVE"]],C[160200]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS ALL"]],C[160300]=[E["GR.IC.TRANSPORTATION"],E["GR.IC.AIRPORT OF DEBARKATION"]],C[160400]=[E["GR.IC.AMMUNITION"]],C[160500]=[E["GR.IC.BAND"]],C[160600]=[E["GR.IC.COMBAT SERVICE SUPPORT"]],C[160700]=[E["GR.IC.FINANCE"]],C[160800]=[E["GR.IC.JUDGE ADVOCATE GENERAL"]],C[160900]=[E["GR.IC.LABOUR"]],C[161e3]=[E["GR.IC.LAUNDRY/BATH"]],C[161100]=[E["GR.IC.MAINTENANCE"]],C[161200]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.MATERIEL"]],C[161300]=[E["GR.IC.FF.MEDICAL"]],C[161400]=[E["GR.IC.FF.MEDICAL TREATMENT FACILITY"]],C[161500]=[E["GR.IC.MORALE, WELFARE, AND RECREATION"]],C[161600]=[E["GR.IC.MORTUARY AFFAIRS"]],C[161700]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS MULTIPLE"]],C[161800]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.NATO SUPPLY CLASS I"]],C[161900]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.NATO SUPPLY CLASS II"]],C[162e3]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS III"]],C[162100]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.NATO SUPPLY CLASS IV"]],C[162200]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS V"]],C[162300]=[E["GR.IC.ORDNANCE"]],C[162400]=[E["GR.IC.PERSONNEL SERVICES"]],C[162500]=[E["GR.IC.PETROLEUM OIL LUBRICANTS"]],C[162600]=[E["GR.IC.PIPELINE"]],C[162700]=[E["GR.IC.POSTAL"]],C[162800]=[E["GR.IC.PUBLIC AFFAIRS"]],C[162900]=[E["GR.IC.QUARTERMASTER"]],C[163e3]=[E["GR.IC.RAILHEAD"]],C[163100]=[E["GR.IC.RELIGIOUS SUPPORT"]],C[163200]=[E["GR.IC.REPLACEMENT HOLDING UNIT"]],C[163300]=[E["GR.IC.SEAPORT OF DEBARKATION"]],C[163400]=[E["GR.IC.FF.SUPPLY"]],C[163500]=[E["GR.IC.JOINT INFORMATION BUREAU"]],C[163600]=[E["GR.IC.TRANSPORTATION"]],C[163700]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS I"]],C[163800]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS II"]],C[163900]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS III"]],C[164e3]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS IV"]],C[164100]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS V"]],C[164200]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS VI"]],C[164300]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS VII"]],C[164400]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS VIII"]],C[164500]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS IX"]],C[164600]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.FF.CLASS X"]],C[164700]=[E["GR.IC.WATER"]],C[164800]=[E["GR.IC.WATER PURIFICATION"]],C[164900]=[E["GR.IC.PUBLIC AFFAIRS BROADCAST"]],C[170100]=[E["GR.IC.NAVAL"]],C[180100]=[E["GR.IC.ALLIED COMMAND EUROPE RAPID REACTION CORPS (ARRC)"]],C[180200]=[E["GR.IC.ALLIED COMMAND OPERATIONS"]],C[180300]=[E["GR.IC.INTERNATIONAL SECURITY ASSISTANCE FORCE (ISAF)"]],C[180400]=[E["GR.IC.MULTINATIONAL (MN)"]],C[19e4]=[E["GR.IC.FF.EMERGENCY OPERATION"]],C[2e5]=[E["GR.IC.FF.LAW ENFORCEMENT"]],C[200100]=[E["GR.IC.BUREAU OF ALCOHOL, TOBACCO, FIREARMS AND EXPLOSIVES (ATF) (DEPARTMENT OF JUSTICE)"]],C[200200]=[E["GR.IC.FF.BORDER PATROL"]],C[200300]=[E["GR.IC.FF.CUSTOMS SERVICE"]],C[200400]=[E["GR.IC.DRUG ENFORCEMENT AGENCY (DEA)"]],C[200500]=[E["GR.IC.FF.DEPARTMENT OF JUSTICE (DOJ)"]],C[200600]=[E["GR.IC.FEDERAL BUREAU OF INVESTIGATION (FBI)"]],C[200700]=[E["GR.IC.LAW ENFORCEMENT"]],C[200800]=[E["GR.IC.FF.PRISON"]],C[200900]=[E["GR.IC.UNITED STATES SECRET SERVICE(TREAS) (USSS)"]],C[201e3]=[E["GR.IC.TRANSPORTATION SECURITY AGENCY (TSA)"]],C[201100]=[E["SE.IC.LAW ENFORCEMENT VESSEL"]],C[201200]=[E["GR.IC.FF.US MARSHALS SERVICE"]],C[201300]=[E["ST.IC.INTERNAL SECURITY FORCE"]],A["01"]=[E["GR.M1.AIRMOBILE/AIR ASSAULT"]],A["02"]=[E["GR.M1.AREA"]],A["03"]=[E["GR.M1.ATTACK"]],A["04"]=[E["GR.M1.BIOLOGICAL"]],A["05"]=[E["GR.M1.BORDER"]],A["06"]=[E["GR.M1.BRIDGING"]],A["07"]=[E["GR.M1.CHEMICAL"]],A["08"]=[E["GR.M1.CLOSE PROTECTION"]],A["09"]=[E["GR.M1.COMBAT"]];A[10]=[E["GR.M1.COMMAND AND CONTROL"]];A[11]=[E["GR.M1.COMMUNICATIONS CONTINGENCY PACKAGE"]],A[12]=[E["GR.M1.CONSTRUCTION"]],A[13]=[E["GR.M1.CROSS CULTURAL COMMUNICATION"]],A[14]=[E["GR.M1.CROWD AND RIOT CONTROL"]],A[15]=[E["GR.M1.DECONTAMINATION"]],A[16]=[E["GR.M1.DETENTION"]],A[17]=[E["GR.M1.DIRECT COMMUNICATIONS"]],A[18]=[E["GR.M1.DIVING"]],A[19]=[E["GR.M1.DIVISION"]],A[20]=[E["GR.M1.DOG"]],A[21]=[E["GR.M1.DRILLING"]],A[22]=[E["GR.M1.ELECTRO-OPTICAL"]],A[23]=[E["GR.M1.ENHANCED"]],A[24]=[E["GR.M1.EXPLOSIVE ORDNANCE DISPOSAL"]],A[25]=[E["GR.M1.FIRE DIRECTION CENTRE"]],A[26]=[E["GR.M1.FORCE"]],A[27]=[E["GR.M1.FORWARD"]],A[28]=[E["GR.M1.GROUND STATION MODULE"]],A[29]=[E["GR.M1.LANDING SUPPORT"]],A[30]=[E["GR.M1.LARGE EXTENSION NODE"]],A[31]=[E["GR.M1.MAINTENANCE"]],A[32]=[E["GR.M1.METEOROLOGICAL"]],A[33]=[E["GR.M1.MINE COUNTERMEASURE"]],A[34]=[E["GR.M1.MISSILE"]],A[35]=[E["GR.M1.(MOBILE) ADVISOR AND SUPPORT"]],A[36]=[E["GR.M1.MOBILE SUBSCRIBER EQUIPMENT"]],A[37]=[E["GR.M1.MOBILITY SUPPORT"]],A[38]=[E["GR.M1.MOVEMENT CONTROL CENTRE"]],A[39]=[E["GR.M1.MULTINATIONAL"]],A[40]=[E["GR.M1.MULTINATIONAL SPECIALIZED UNIT"]],A[41]=[E["GR.M1.MULTIPLE ROCKET LAUNCHER"]],A[42]=[E["GR.M1.NATO MEDICAL ROLE 1"]],A[43]=[E["GR.M1.NATO MEDICAL ROLE 2"]],A[44]=[E["GR.M1.NATO MEDICAL ROLE 3"]],A[45]=[E["GR.M1.NATO MEDICAL ROLE 4"]],A[46]=[E["GR.M1.NAVAL"]],A[47]=[E["GR.M1.NODE CENTRE"]],A[48]=[E["GR.M1.NUCLEAR"]],A[49]=[E["GR.M1.OPERATIONS"]],A[50]=[E["GR.M1.RADAR"]],A[51]=[E["GR.M1.RADIO FREQUENCY IDENTIFICATION (RFID) INTERROGATOR/ SENSOR"]],A[52]=[E["GR.M1.RADIOLOGICAL"]],A[53]=[E["GR.M1.SEARCH AND RESCUE"]],A[54]=[E["GR.M1.SECURITY"]],A[55]=[E["GR.M1.SENSOR"]],A[56]=[E["GR.M1.SENSOR CONTROL MODULE"]],A[57]=[E["GR.M1.SIGNALS INTELLIGENCE"]],A[58]=[E["GR.M1.SINGLE SHELTER SWITCH"]],A[59]=[E["GR.M1.SINGLE ROCKET LAUNCHER"]],A[60]=[E["GR.M1.SMOKE"]],A[61]=[E["GR.M1.SNIPER"]],A[62]=[E["GR.M1.SOUND RANGING"]],A[63]=[E["GR.M1.SPECIAL OPERATIONS FORCES (SOF)"]],A[64]=[E["GR.M1.SPECIAL WEAPONS AND TACTICS"]],A[65]=[E["GR.M1.SURVEY"]],A[66]=[E["GR.M1.TACTICAL EXPLOITATION"]],A[67]=[E["GR.M1.TARGET ACQUISITION"]],A[68]=[E["GR.M1.TOPOGRAPHIC"]],A[69]=[E["GR.M1.UTILITY"]],A[70]=[E["GR.M1.VIDEO IMAGERY"]],A[71]=[E["GR.M1.ACCIDENT"]],A[72]=[E["GR.M1.OTHER"]],A[73]=[E["GR.M1.CIVILIAN"]],A[74]=[E["GR.M1.ANTISUBMARINE WARFARE"]],A[75]=[E["GR.M1.MEDEVAC"]],A[76]=[E["GR.M1.RANGER"]],A[77]=[E["GR.M1.SUPPORT"]],A[78]=[E["GR.M1.AVIATION"]],S["01"]=[E["GR.M2.AIRBORNE"]],S["02"]=[E["GR.M2.ARCTIC"]],S["03"]=[E["GR.M2.BATTLE DAMAGE REPAIR"]],S["04"]=[E["GR.M2.BICYCLE EQUIPPED"]],S["05"]=[E["GR.M2.CASUALTY STAGING"]],S["06"]=[E["GR.M2.CLEARING"]],S["07"]=[E["GR.M2.CLOSE RANGE"]],S["08"]=[E["GR.M2.CONTROL"]],S["09"]=[E["GR.M2.DECONTAMINATION"]],S[10]=[E["GR.M2.DEMOLITION"]],S[11]=[E["GR.M2.DENTAL"]],S[12]=[E["GR.M2.DIGITAL"]],S[13]=[E["GR.M2.ENHANCED POSITION LOCATION REPORTING SYSTEM"]],S[14]=[E["GR.M2.EQUIPMENT"]],S[15]=[E["GR.M2.HEAVY"]],S[16]=[E["GR.M2.HIGH ALTITUDE"]],S[17]=[E["GR.M2.INTERMODAL"]],S[18]=[E["GR.M2.INTENSIVE CARE"]],S[19]=[E["GR.M2.LIGHT"]],S[20]=[E["GR.M2.LABORATORY"]],S[21]=[E["GR.M2.LAUNCHER"]],S[22]=[E["GR.M2.LONG RANGE"]],S[23]=[E["GR.M2.LOW ALTITUDE"]],S[24]=[E["GR.M2.MEDIUM"]],S[25]=[E["GR.M2.MEDIUM ALTITUDE"]],S[26]=[E["GR.M2.MEDIUM RANGE"]],S[27]=[E["GR.M2.MOUNTAIN"]],S[28]=[E["GR.M2.HIGH TO MEDIUM ALTITUDE"]],S[29]=[E["GR.M2.MULTI-CHANNEL"]],S[30]=[E["GR.M2.OPTICAL"]],S[31]=[E["GR.M2.PACK ANIMAL"]],S[32]=[E["GR.M2.PATIENT EVACUATION COORDINATION"]],S[33]=[E["GR.M2.PREVENTIVE MAINTENANCE"]],S[34]=[E["GR.M2.PSYCHOLOGICAL"]],S[35]=[E["GR.M2.RADIO RELAY LINE OF SIGHT"]],S[36]=[E["GR.M2.RAILROAD"]],S[37]=[E["GR.M2.RECOVERY (UNMANNED SYSTEMS)"]],S[38]=[E["GR.M2.RECOVERY (MAINTENANCE)"]],S[39]=[E["GR.M2.RESCUE COORDINATION CENTRE"]],S[40]=[E["GR.M2.RIVERINE"]],S[41]=[E["GR.M2.SINGLE CHANNEL"]],S[42]=[E["GR.M2.SKI"]],S[43]=[E["GR.M2.SHORT RANGE"]],S[44]=[E["GR.M2.STRATEGIC"]],S[45]=[E["GR.M2.SUPPORT"]],S[46]=[E["GR.M2.TACTICAL"]],S[47]=[E["GR.M2.TOWED"]],S[48]=[E["GR.M2.TROOP"]],S[49]=[E["GR.M2.VERTICAL OR SHORT TAKE-OFF AND LANDING "]],S[50]=[E["GR.M2.VETERINARY"]],S[51]=[E["GR.M2.WHEELED"]],S[52]=[E["GR.M2.HIGH TO LOW ALTITUDE"]],S[53]=[E["GR.M2.MEDIUM TO LOW ALTITUDE"]],S[54]=[E["GR.M2.ATTACK"]],S[55]=[E["GR.M2.REFUEL"]],S[56]=[E["GR.M2.UTILITY"]],S[57]=[E["GR.M2.COMBAT SEARCH AND RESCUE"]]}if("11"==I&&(C[11e4]=[E["AR.I.CIVILIAN"]],C[110100]=[E["GR.IC.ENVIRONMENTAL PROTECTION"]],C[110200]=[E["GR.IC.GOVERNMENT ORGANIZATION"]],C[110300]=[E["ST.IC.INDIVIDUAL"]],C[110400]=[E["ST.IC.GROUP"]],C[110500]=[E["ST.IC.KILLING VICTIM"]],C[110600]=[E["ST.IC.KILLING VICTIMS"]],C[110700]=[E["ST.IC.INDIVIDUAL"],E["ST.IC.ATTEMPTED CRIMINAL ACTIVITY"]],C[110800]=[E["ST.IC.SPY"]],C[110900]=[E["ST.IC.COMPOSITE LOSS"]],C[111e3]=[E["GR.IC.EMERGENCY MEDICAL OPERATION"]],A["01"]=[E["ST.M1.ASSASSINATION"]],A["02"]=[E["ST.M1.EXECUTION (WRONGFUL KILLING)"]],A["03"]=[E["ST.M1.MURDER"]],A["04"]=[E["ST.M1.HIJACKING/HIJACKED"]],A["05"]=[E["ST.M1.KIDNAPPING"]],A["06"]=[E["ST.M1.PIRACY"]],A["07"]=[E["ST.M1.RAPE"]],A["08"]=[E["ST.M1.CIVILIAN"]],A["09"]=[E["ST.M1.DISPLACED PERSONS, REFUGEES, AND EVACUEES"]],A[10]=[E["ST.M1.FOREIGN FIGHTERS"]],A[11]=[E["ST.M1.GANG"]],A[12]=[E["ST.M1.GOVERNMENT ORGANIZATION"]],A[13]=[E["ST.M1.LEADER"]],A[14]=[E["ST.M1.NONGOVERNMENTAL ORGANIZATION (NGO)"]],A[15]=[E["ST.M1.COERCED/IMPRESSED"]],A[16]=[E["ST.M1.WILLING RECRUIT"]],A[17]=[E["ST.M1.RELIGIOUS"]],A[18]=[E["ST.M1.TARGETED"]],A[19]=[E["ST.M1.TERRORIST"]],A[20]=[E["ST.M1.SPEAKER"]],A[21]=[E["ST.M1.ACCIDENT"]],A[22]=[E["ST.M1.COMBAT"]],A[23]=[E["ST.M1.OTHER"]],A[24]=[E["ST.M1.LOOT"]],S["01"]=[E["ST.M2.LEADER OR LEADERSHIP"]]),"15"==I){C[11e4]=[E["GR.EQ.WEAPON"]],C[110100]=[E["GR.EQ.RIFLE"]],C[110101]=[E["GR.EQ.RIFLE"],E["GR.EQ.SHORT RANGE"]],C[110102]=[E["GR.EQ.RIFLE"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110103]=[E["GR.EQ.RIFLE"],E["GR.EQ.LONG RANGE"]],C[110200]=[E["GR.EQ.MACHINE GUN"]],C[110201]=[E["GR.EQ.MACHINE GUN"],E["GR.EQ.SHORT RANGE"]],C[110202]=[E["GR.EQ.MACHINE GUN"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110203]=[E["GR.EQ.MACHINE GUN"],E["GR.EQ.LONG RANGE"]],C[110300]=[E["GR.EQ.GRENADE LAUNCHER"]],C[110301]=[E["GR.EQ.GRENADE LAUNCHER"],MS.translate(0,20,E["GR.EQ.SHORT RANGE"])],C[110302]=[E["GR.EQ.GRENADE LAUNCHER"],MS.translate(0,20,E["GR.EQ.INTERMEDIATE RANGE"])],C[110303]=[E["GR.EQ.GRENADE LAUNCHER"],MS.translate(0,20,E["GR.EQ.LONG RANGE"])],C[110400]=[E["GR.EQ.FLAME THROWER"]],C[110500]=[E["GR.EQ.AIR DEFENCE GUN"]],C[110501]=[E["GR.EQ.AIR DEFENCE GUN"],E["GR.EQ.SHORT RANGE"]],C[110502]=[E["GR.EQ.AIR DEFENCE GUN"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110503]=[E["GR.EQ.AIR DEFENCE GUN"],E["GR.EQ.LONG RANGE"]],C[110600]=[E["GR.EQ.ANTITANK GUN"]],C[110601]=[E["GR.EQ.ANTITANK GUN"],E["GR.EQ.SHORT RANGE"]],C[110602]=[E["GR.EQ.ANTITANK GUN"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110603]=[E["GR.EQ.ANTITANK GUN"],E["GR.EQ.LONG RANGE"]],C[110700]=[E["GR.EQ.DIRECT FIRE GUN"]],C[110701]=[E["GR.EQ.DIRECT FIRE GUN"],E["GR.EQ.SHORT RANGE"]],C[110702]=[E["GR.EQ.DIRECT FIRE GUN"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110703]=[E["GR.EQ.DIRECT FIRE GUN"],E["GR.EQ.LONG RANGE"]],C[110800]=[E["GR.EQ.RECOILLESS GUN"]],C[110801]=[E["GR.EQ.RECOILLESS GUN"],E["GR.EQ.SHORT RANGE"]],C[110802]=[E["GR.EQ.RECOILLESS GUN"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110803]=[E["GR.EQ.RECOILLESS GUN"],E["GR.EQ.LONG RANGE"]],C[110900]=[E["GR.EQ.HOWITZER"]],C[110901]=[E["GR.EQ.HOWITZER"],E["GR.EQ.SHORT RANGE"]],C[110902]=[E["GR.EQ.HOWITZER"],E["GR.EQ.INTERMEDIATE RANGE"]],C[110903]=[E["GR.EQ.HOWITZER"],E["GR.EQ.LONG RANGE"]],C[111e3]=[E["GR.EQ.MISSILE LAUNCHER"]],C[111001]=[E["GR.EQ.MISSILE LAUNCHER"],E["GR.EQ.SHORT RANGE"]],C[111002]=[E["GR.EQ.MISSILE LAUNCHER"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111003]=[E["GR.EQ.MISSILE LAUNCHER"],E["GR.EQ.LONG RANGE"]],C[111100]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"]],C[111101]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.SHORT RANGE"]],C[111102]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.SHORT RANGE"],E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],C[111103]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.SHORT RANGE"],E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],C[111104]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111105]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.INTERMEDIATE RANGE"],E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],C[111106]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.INTERMEDIATE RANGE"],E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],C[111107]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.LONG RANGE"]],C[111108]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.LONG RANGE"],E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TLAR"]],C[111109]=[E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR"],E["GR.EQ.LONG RANGE"],E["GR.EQ.AIR DEFENCE MISSILE LAUNCHER SURFACE-TO-AIR TELAR"]],C[111200]=[E["GR.EQ.ANTITANK MISSILE LAUNCHER"]],C[111201]=[E["GR.EQ.ANTITANK MISSILE LAUNCHER"],E["GR.EQ.SHORT RANGE"]],C[111202]=[E["GR.EQ.ANTITANK MISSILE LAUNCHER"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111203]=[E["GR.EQ.ANTITANK MISSILE LAUNCHER"],E["GR.EQ.LONG RANGE"]],C[111300]=[E["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"]],C[111301]=[E["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"],E["GR.EQ.SHORT RANGE"]],C[111302]=[E["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111303]=[E["GR.EQ.SURFACE-TO-SURFACE MISSILE LAUNCHER"],E["GR.EQ.LONG RANGE"]],C[111400]=[E["GR.EQ.MORTAR"]],C[111401]=[E["GR.EQ.MORTAR"],E["GR.EQ.SHORT RANGE"]],C[111402]=[E["GR.EQ.MORTAR"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111403]=[E["GR.EQ.MORTAR"],E["GR.EQ.LONG RANGE"]],C[111500]=[E["GR.EQ.SINGLE ROCKET LAUNCHER"]],C[111501]=[E["GR.EQ.SINGLE ROCKET LAUNCHER"],E["GR.EQ.SHORT RANGE"]],C[111502]=[E["GR.EQ.SINGLE ROCKET LAUNCHER"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111503]=[E["GR.EQ.SINGLE ROCKET LAUNCHER"],E["GR.EQ.LONG RANGE"]],C[111600]=[E["GR.EQ.MULTIPLE ROCKET LAUNCHER"]],C[111601]=[E["GR.EQ.MULTIPLE ROCKET LAUNCHER"],MS.translate(0,10,E["GR.EQ.SHORT RANGE"])],C[111602]=[E["GR.EQ.MULTIPLE ROCKET LAUNCHER"],MS.translate(0,10,E["GR.EQ.INTERMEDIATE RANGE"])],C[111603]=[E["GR.EQ.MULTIPLE ROCKET LAUNCHER"],MS.translate(0,10,E["GR.EQ.LONG RANGE"])],C[111701]=[E["GR.EQ.ANTITANK ROCKET LAUNCHER"]],C[111701]=[E["GR.EQ.ANTITANK ROCKET LAUNCHER"],E["GR.EQ.SHORT RANGE"]],C[111702]=[E["GR.EQ.ANTITANK ROCKET LAUNCHER"],E["GR.EQ.INTERMEDIATE RANGE"]],C[111703]=[E["GR.EQ.ANTITANK ROCKET LAUNCHER"],E["GR.EQ.LONG RANGE"]],C[111800]=[E["GR.EQ.NON-LETHAL WEAPON"]],C[111900]=[E["GR.EQ.TASER"]],C[112e3]=[E["GR.EQ.WATER CANNON"]],C[12e4]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"]],C[120100]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.ARMOURED VEHICLE"]],C[120101]=[E["GR.EQ.ARMOURED FIGHTING VEHICLE"]],C[120102]=[E["GR.EQ.ARMOURED FIGHTING VEHICLE (AFV) COMMAND AND CONTROL"]],C[120103]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER COMBAT SERVICE SUPPORT VEHICLE"]],C[120104]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER"],E["GR.EQ.MEDICAL EVACUATION"]],C[120105]=[E["GR.IC.ARMOUR"]],C[120106]=[E["GR.IC.ARMOUR"],E["GR.EQ.TANK RECOVERY VEHICLE"]],C[120107]=[E["GR.IC.ARMOUR"],E["GR.EQ.MEDICAL EVACUATION"]],C[120108]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER"],E["GR.EQ.TANK RECOVERY VEHICLE"]],C[120109]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER"],E["GR.EQ.COMBAT SERVICE SUPPORT VEHICLE"]],C[120110]=[E["GR.EQ.ARMOURED FIGHTING VEHICLE"],E["GR.EQ.CROSS-COUNTRY"]],C[120200]=[E["GR.EQ.TANK"]],C[120201]=[E["GR.EQ.TANK"],E["GR.EQ.LIGHT TANK"]],C[120202]=[E["GR.EQ.TANK"],E["GR.EQ.MEDIUM TANK"]],C[120203]=[E["GR.EQ.TANK"],E["GR.EQ.HEAVY TANK"]],C[120300]=[E["GR.EQ.TANK"],E["GR.EQ.TANK RECOVERY VEHICLE"]],C[120301]=[E["GR.EQ.TANK"],E["GR.EQ.LIGHT TANK"],E["GR.EQ.TANK RECOVERY VEHICLE"]],C[120302]=[E["GR.EQ.TANK"],E["GR.EQ.MEDIUM TANK"],E["GR.EQ.TANK RECOVERY VEHICLE"]],C[120303]=[E["GR.EQ.TANK"],E["GR.EQ.HEAVY TANK"],E["GR.EQ.TANK RECOVERY VEHICLE"]],C[13e4]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],MS.scale(.7,E["GR.IC.ENGINEER"])],C[130100]=[E["GR.IN.IC.BRIDGE"]],C[130200]=[E["GR.EQ.UTILITY VEHICLE"],MS.scale(.8,E["GR.IN.IC.BRIDGE"])],C[130300]=[E["GR.IN.IC.BRIDGE"],E["GR.EQ.FIXED BRIDGE"]],C[130400]=[E["GR.IN.IC.BRIDGE"],E["GR.M2.RIVERINE"]],C[130500]=[E["GR.IN.IC.BRIDGE"],E["GR.EQ.FOLDING GIRDER BRIDGE"]],C[130600]=[E["GR.IN.IC.BRIDGE"],E["GR.EQ.HOLLOW DECK BRIDGE"]],C[130700]=[E["GR.IC.DRILLING"]],C[130701]=[MS.scale(.7,E["GR.IC.DRILLING"]),E["GR.EQ.UTILITY VEHICLE"]],C[130800]=[E["GR.EQ.EARTHMOVER"]],C[130801]=[E["GR.EQ.MULTIFUNCTIONAL EARTHMOVER/DIGGER"]],C[130900]=[E["GR.EQ.MINE CLEARING EQUIPMENT"]],C[130901]=[E["GR.EQ.MINE CLEARING EQUIPMENT"],MS.translate(0,-10,E["GR.EQ.LIMITED CROSS-COUNTRY"])],C[130902]=[E["GR.EQ.MINE CLEARING EQUIPMENT"],E["GR.EQ.TANK"]],C[131e3]=[E["GR.IC.MINE LAYING"]],C[131001]=[E["GR.EQ.UTILITY VEHICLE"],MS.translate(0,10,MS.scale(.7,E["GR.IC.MINE LAYING"]))],C[131002]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER"],E["GR.EQ.ARMORED CARRIER WITH VOLCANO"]],C[131003]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.LIMITED CROSS-COUNTRY"],E["GR.EQ.ARMORED CARRIER WITH VOLCANO"]],C[131100]=[E["GR.EQ.DOZER"]],C[131101]=[E["GR.EQ.DOZER ARMORED"]],C[131200]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER"],MS.scale(.6,E["GR.IC.ENGINEER"])],C[131300]=[E["GR.EQ.ARMOURED PERSONNEL CARRIER"],MS.scale(.6,E["GR.IC.ENGINEER"]),E["GR.EQ.ARMOURED PERSONNEL CARRIER ENGINEER RECON VEHICLE"]],C[131400]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.LIMITED CROSS-COUNTRY"],E["GR.EQ.UTILITY VEHICLE BACKHOE"]],C[131500]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.LIMITED CROSS-COUNTRY"],MS.scale(.6,E["GR.IC.ENGINEER"])],C[131600]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.CROSS-COUNTRY"],E["GR.EQ.UTILITY VEHICLE FERRY TRANSPORTER"]],C[140100]=[E["GR.EQ.UTILITY VEHICLE"]],C[140200]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.MEDICAL VEHICLE"]],C[140300]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.MEDICAL EVACUATION"]],C[140400]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.MOBILE EMERGENCY PHYSICIAN"]],C[140500]=[E["GR.EQ.BUS"]],C[140600]=[E["GR.EQ.SEMI-TRAILER TRUCK"]],C[140601]=[E["GR.EQ.SEMI-TRAILER TRUCK"],E["GR.EQ.UTILITY VEHICLE LIGHT"]],C[140602]=[E["GR.EQ.SEMI-TRAILER TRUCK"],E["GR.EQ.UTILITY VEHICLE MEDIUM"]],C[140603]=[E["GR.EQ.SEMI-TRAILER TRUCK"],E["GR.EQ.UTILITY VEHICLE HEAVY"]],C[140700]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.LIMITED CROSS-COUNTRY"]],C[140800]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.CROSS-COUNTRY"]],C[140900]=[E["GR.EQ.UTILITY VEHICLE"],MS.scale(.8,E["GR.IC.FF.CLASS III"])],C[141e3]=[E["GR.EQ.UTILITY VEHICLE"],MS.scale(.7,E["GR.IC.WATER"])],C[141100]=[E["GR.EQ.WATER VEHICLE"],E["GR.EQ.LIMITED CROSS-COUNTRY"]],C[141200]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.UTILITY VEHICLE.TOW TRUCK"]],C[141201]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.UTILITY VEHICLE.TOW TRUCK"],E["GR.EQ.UTILITY VEHICLE.TOW TRUCK.LIGHT"]],C[141202]=[E["GR.EQ.UTILITY VEHICLE"],E["GR.EQ.UTILITY VEHICLE.TOW TRUCK"],E["GR.EQ.UTILITY VEHICLE.TOW TRUCK.HEAVY"]],C[150100]=[E["GR.EQ.TRAIN LOCOMOTIVE"]],C[150200]=[E["GR.EQ.RAILCAR"]],C[160100]=[E["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"]],C[160101]=[E["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],C[160102]=[E["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],C[160103]=[E["GR.EQ.CIVILIAN VEHICLE.AUTOMOBILE"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],C[160200]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"]],C[160201]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],C[160202]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],C[160203]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],C[160300]=[E["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"]],C[160301]=[E["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],C[160302]=[E["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],C[160303]=[E["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],C[160400]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"]],C[160401]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],C[160402]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],C[160403]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],C[160500]=[E["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"]],C[160501]=[E["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"]],C[160502]=[E["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"]],C[160503]=[E["GR.EQ.CIVILIAN VEHICLE.JEEP TYPE VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"]],C[160600]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160601]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160602]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160603]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160700]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160701]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.LIGHT"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160702]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.MEDIUM"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160703]=[E["GR.EQ.CIVILIAN VEHICLE.OPEN-BED TRUCK"],E["GR.EQ.CIVILIAN VEHICLE.HEAVY"],E["GR.EQ.CIVILIAN VEHICLE.TRAILER"]],C[160800]=[E["ST.IC.KNOWN INSURGENT VEHICLE"]],C[160900]=[E["ST.IC.KNOWN INSURGENT VEHICLE"],E["ST.M1.DRUG"]],C[17e4]=[E["GR.IC.FF.LAW ENFORCEMENT"]],C[170100]=[E["GR.IC.BUREAU OF ALCOHOL, TOBACCO, FIREARMS AND EXPLOSIVES (ATF) (DEPARTMENT OF JUSTICE)"]],C[170200]=[E["GR.IC.FF.BORDER PATROL"]],C[170300]=[E["GR.IC.FF.CUSTOMS SERVICE"]],C[170400]=[E["GR.IC.DRUG ENFORCEMENT AGENCY (DEA)"]],C[170500]=[E["GR.IC.FF.DEPARTMENT OF JUSTICE (DOJ)"]],C[170600]=[E["GR.IC.FEDERAL BUREAU OF INVESTIGATION (FBI)"]],C[170700]=[E["GR.IC.MILITARY POLICE"]],C[170800]=[E["GR.IC.UNITED STATES SECRET SERVICE(TREAS) (USSS)"]],C[170900]=[E["GR.IC.TRANSPORTATION SECURITY AGENCY (TSA)"]],C[171e3]=[E["SE.IC.LAW ENFORCEMENT VESSEL"]],C[171100]=[E["GR.IC.FF.US MARSHALS SERVICE"]],C[18e4]=[E["GR.EQ.PACK ANIMAL"]],C[19e4]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.MISSILE SUPPORT"]],C[190100]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.MISSILE TRANSLOADER"]],C[190200]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.MISSILE TRANSPORTER"]],C[190300]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.MISSILE CRANE/LOADING DEVICE"]],C[190400]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.MISSILE PROPELLANT TRANSPORTER"]],C[190500]=[E["GR.EQ.ARMOURED PROTECTED VEHICLE WITH LIMITED CROSS COUNTRY MOBILITY"],E["GR.EQ.MISSILE WARHEAD TRANSPORTER"]],C[200100]=[E["GR.IC.FF.BROADCAST TRANSMITTER ANTENNA"]],C[200200]=[E["ST.IC.BOMB"]],C[200300]=[E["ST.IC.BOOBY TRAP"]],C[200400]=[E["GR.EQ.CBRN EQUIPMENT"]],C[200500]=[E["GR.EQ.COMPUTER SYSTEM"]],C[200600]=[E["GR.EQ.COMMAND LAUNCH EQUIPMENT (CLE)"]],C[200700]=[E["GR.EQ.GENERATOR SET"]],C[200800]=[E["GR.EQ.GROUND-BASED MIDCOURSE DEFENSE (GMD) FIRE CONTROL (GFC) CENTER"]],C[200900]=[E["GR.EQ.IN-FLIGHT INTERCEPTOR COMMUNICATIONS SYSTEM (IFICS) DATA TERMINAL (IDT)"]],C[201e3]=[E["GR.EQ.LASER"]],C[201100]=[E["GR.EQ.PSYCHOLOGICAL OPERATIONS EQUIPMENT"]],C[201200]=[E["GR.IC.SUSTAINMENT"]];C[201300]=[E["GR.EQ.TENT"]];C[201400]=[E["GR.EQ.UNIT DEPLOYMENT SHIPMENTS"]],C[201500]=[E["GR.IC.EMERGENCY MEDICAL OPERATION"]],C[201501]=[E["AR.I.MILITARY ROTARY WING"],E["AIR.M1.MEDEVAC"]],C[210100]=[E["GR.EQ.LAND MINE"]],C[210200]=[E["GR.EQ.ANTIPERSONNEL LAND MINE"]],C[210300]=[E["GR.EQ.ANTITANK MINE"]],C[210400]=[E["GR.EQ.IMPROVISED EXPLOSIVE DEVICE"]],C[210500]=[E["GR.EQ.ANTIPERSONNEL LAND MINE LESS THAN LETHAL"]],C[220100]=[E["GR.EQ.SENSOR"]],C[220200]=[E["GR.EQ.SENSOR EMPLACED"]],C[220300]=[E["GR.EQ.RADAR"]],C[23e4]=[E["GR.IC.FF.EMERGENCY OPERATION"]],C[230100]=[E["GR.EQ.CIVILIAN VEHICLE.UTILITY VEHICLE"],E["GR.M1.MEDEVAC"]],C[230200]=[E["GR.IC.FIRE PROTECTION"]],C[24e4]=[E["SP.I.MANUAL TRACK"]],A["01"]=[E["GR.M1.BIOLOGICAL"]],A["02"]=[E["GR.M1.CHEMICAL"]],A["03"]=[E["GR.M1.EARLY WARNING RADAR"]],
A["04"]=[E["GR.M1.INTRUSION"]],A["05"]=[E["GR.M1.NUCLEAR"]],A["06"]=[E["GR.M1.RADIOLOGICAL"]],A["07"]=[E["GR.M1.UPGRADED EARLY WARNING RADAR"]],A["08"]=[E["AIR.M1.HIJACKING"]],A["09"]=[E["GR.M1.CIVILIAN"]]}return"20"==I&&(C[11e4]=[E["AR.I.MILITARY"]],C[110100]=[E["GR.IN.IC.AIRCRAFT PRODUCTION & ASSEMBLY"]],C[110200]=[MS.scale(1.4,E["GR.IC.FF.CLASS V"])],C[110300]=[E["GR.IC.FF.CLASS V"],E["GR.IC.FF.SUPPLY"]],C[110400]=[E["GR.EQ.TANK"]],C[110500]=[E["ST.IC.BLACK LIST LOCATION"]],C[110600]=[E["GR.IC.CBRN"]],C[110700]=[E["GR.EQ.DOZER"]],C[110701]=[E["GR.IN.IC.BRIDGE"]],C[110800]=[MS.scale(1.4,E["GR.IC.FF.CLASS IX"])],C[110900]=[E["AR.I.GOVERNMENT"]],C[111e3]=[E["ST.IC.GRAY LIST LOCATION"]],C[111100]=[E["ST.IC.MASS GRAVE LOCATION"]],C[111200]=[E["GR.IN.IC.MILITARY/CIVILIAN.MATERIEL"],E["GR.IC.FF.SUPPLY"]],C[111300]=[E["GR.IN.IC.MINE"]],C[111400]=[E["GR.EQ.MISSILE LAUNCHER"]],C[111500]=[MS.scale(.8,E["AC.IC.RADIOACTIVE MATERIAL"])],C[111600]=[E["GR.IN.IC.MILITARY/CIVILIAN.PRINTED MEDIA"]],C[111700]=[E["ST.IC.SAFE HOUSE"]],C[111800]=[E["ST.IC.WHITE LIST LOCATION"]],C[111900]=[E["GR.EQ.TENT"]],C[111901]=[E["GR.EQ.TENT"],E["ST.M1.DISPLACED PERSONS, REFUGEES, AND EVACUEES"]],C[111902]=[E["GR.EQ.TENT"],E["GR.M1.TRAINING CAMP"]],C[112e3]=[E["GR.IN.IC.INDUSTRIAL SITE"],E["GR.IN.IC.WAREHOUSE/STORAGE FACILITY"]],C[112100]=[E["GR.IC.FF.LAW ENFORCEMENT"]],C[112101]=[E["GR.IC.BUREAU OF ALCOHOL, TOBACCO, FIREARMS AND EXPLOSIVES (ATF) (DEPARTMENT OF JUSTICE)"]],C[112102]=[E["GR.IC.FF.BORDER PATROL"]],C[112103]=[E["GR.IC.FF.CUSTOMS SERVICE"]],C[112104]=[E["GR.IC.DRUG ENFORCEMENT AGENCY (DEA)"]],C[112105]=[E["GR.IC.FF.DEPARTMENT OF JUSTICE (DOJ)"]],C[112106]=[E["GR.IC.FEDERAL BUREAU OF INVESTIGATION (FBI)"]],C[112107]=[E["GR.IC.LAW ENFORCEMENT"]],C[112108]=[E["GR.IC.FF.PRISON"]],C[112109]=[E["GR.IC.UNITED STATES SECRET SERVICE(TREAS) (USSS)"]],C[112110]=[E["GR.IC.TRANSPORTATION SECURITY AGENCY (TSA)"]],C[112111]=[E["SE.IC.LAW ENFORCEMENT VESSEL"]],C[112112]=[E["GR.IC.FF.US MARSHALS SERVICE"]],C[112200]=[E["GR.IC.FF.EMERGENCY OPERATION"]],C[112201]=[E["GR.IC.FIRE PROTECTION"]],C[112202]=[E["GR.IC.EMERGENCY MEDICAL OPERATION"]],C[120100]=[E["GR.IN.IC.AGRICULTURE AND FOOD INFRASTRUCTURE"]],C[120101]=[E["GR.IN.IC.AGRICULTURAL LABORATORY"]],C[120102]=[E["GR.IN.IC.ANIMAL FEEDLOT"]],C[120103]=[E["ST.IC.FOOD DISTRIBUTION"],E["AC.M1.COMMERCIAL"]],C[120104]=[E["GR.IN.IC.FARM/RANCH"]],C[120105]=[E["ST.IC.FOOD DISTRIBUTION"]],C[120106]=[E["ST.IC.FOOD DISTRIBUTION"],E["AC.M1.PRODUCTION"]],C[120107]=[E["ST.IC.FOOD DISTRIBUTION"],E["AC.M1.RETAIL"]],C[120108]=[E["GR.IN.IC.GRAIN STORAGE"]],C[120200]=[E["AC.IC.BANKING FINANCE AND INSURANCE INFRASTRUCTURE"]],C[120201]=[E["GR.IN.IC.ATM"]],C[120202]=[E["GR.IN.IC.BANK"]],C[120203]=[E["GR.IN.IC.BULLION STORAGE"]],C[120204]=[E["GR.IN.IC.INFRASTRUCTURE.BANKING FINANCE AND INSURANCE  INFRASTRUCTURE.ECONOMIC INFRASTRUCTURE ASSET"]],C[120205]=[E["GR.IN.IC.FEDERAL RESERVE BANK"]],C[120206]=[E["GR.IN.IC.FINANCIAL EXCHANGE"]],C[120207]=[E["GR.IN.IC.FINANCIAL SERVICES, OTHER"]],C[120300]=[E["GR.IN.IC.COMMERCIAL INFRASTRUCTURE"]],C[120301]=[E["GR.IN.IC.CHEMICAL PLANT"]],C[120302]=[E["GR.IN.IC.FIREARMS MANUFACTURER"]],C[120303]=[E["GR.IN.IC.FIREARMS RETAILER"]],C[120304]=[E["GR.IN.IC.HAZARDOUS MATERIAL PRODUCTION"]],C[120305]=[E["GR.IN.IC.HAZARDOUS MATERIAL STORAGE"]],C[120306]=[E["GR.IN.IC.INDUSTRIAL SITE"]],C[120307]=[E["GR.IN.IC.LANDFILL"]],C[120308]=[E["GR.IN.IC.PHARMACEUTICAL MANUFACTURER"]],C[120309]=[E["GR.IN.IC.CONTAMINATED HAZARDOUS WASTE SITE"]],C[120310]=[E["GR.IN.IC.TOXIC RELEASE INVENTORY"]],C[120400]=[E["GR.IN.IC.EDUCATIONAL FACILITIES INFRASTRUCTURE"]],C[120401]=[E["GR.IN.IC.COLLEGE/UNIVERSITY"]],C[120402]=[E["GR.IN.IC.SCHOOL"]],C[120500]=[MS.scale(1.5,E["GR.IN.IC.ELECTRIC POWER"])],C[120501]=[E["GR.IN.IC.ELECTRIC POWER"]],C[120502]=[E["GR.IN.IC.ELECTRIC POWER"],E["AC.M1.GENERATION STATION"]],C[120503]=[E["GR.IN.IC.NATURAL GAS FACILITY"]],C[120504]=[MS.scale(1.5,E["GR.IC.FF.CLASS III"])],C[120505]=[E["GR.IC.FF.CLASS III"]],C[120506]=[E["GR.IN.IC.PROPANE FACILITY"]],C[120600]=[E["GR.IN.IC.GOVERNMENT SITE INFRASTRUCTURE"]],C[120701]=[E["GR.IC.FF.MEDICAL"]],C[120702]=[E["GR.IC.FF.MEDICAL"],E["GR.IC.FF.MEDICAL TREATMENT FACILITY"]],C[120800]=[E["GR.IN.IC.MILITARY INFRASTRUCTURE"]],C[120801]=[E["GR.IN.IC.BASE"],E["AC.M1.MILITARY ARMORY"]],C[120802]=[E["GR.IN.IC.BASE"]],C[120900]=[E["GR.IN.IC.POSTAL SERVICE INFRASTRUCTURE"]],C[120901]=[E["GR.IN.IC.POSTAL DISTRIBUTION CENTER"]],C[120902]=[E["GR.IN.IC.POST OFFICE"]],C[121e3]=[E["GR.IN.IC.PUBLIC VENUES INFRASTRUCTURE"]],C[121001]=[E["GR.IN.IC.ENCLOSED FACITLITY (PUBLIC VENUE)"]],C[121002]=[E["GR.IN.IC.OPEN FACILITY (OPEN VENUE)"]],C[121003]=[E["GR.IN.IC.RECREATIONAL AREA"]],C[121004]=[E["GR.IN.IC.RELIGIOUS INSTITUTION"]],C[121100]=[E["GR.IN.IC.SPECIAL NEEDS INFRASTRUCTURE"]],C[121101]=[E["GR.IN.IC.ADULT DAY CARE"]],C[121102]=[E["GR.IN.IC.CHILD DAY CARE"]],C[121103]=[E["GR.IN.IC.ELDER CARE"]],C[121200]=[E["GR.IN.IC.TELECOMMUNICATIONS INFRASTRUCTURE"]],C[121201]=[E["GR.IC.FF.BROADCAST TRANSMITTER ANTENNA"]],C[121202]=[E["GR.IN.IC.INFRASTRUCTURE.TELECOMMUNICATIONS INFRASTRUCTURE.TELECOMMUNICATIONS"]],C[121203]=[E["GR.IN.IC.TELECOMMUNICATIONS TOWER"]],C[121300]=[MS.scale(1.5,E["GR.IC.TRANSPORTATION"])],C[121301]=[E["GR.IC.TRANSPORTATION"],E["GR.IC.AIRPORT OF DEBARKATION"]],C[121302]=[E["GR.IN.IC.AIR TRAFFIC CONTROL FACILITY"]],C[121303]=[E["GR.EQ.CIVILIAN VEHICLE.MULTIPLE PASSENGER VEHICLE"]],C[121304]=[E["SE.IC.FERRY"]],C[121305]=[E["GR.IN.IC.HELICOPTER LANDING SITE"]],C[121306]=[E["GR.IC.MAINTENANCE"]],C[121307]=[E["GR.IC.RAILHEAD"]],C[121308]=[E["GR.IN.IC.REST STOP"]],C[121309]=[E["GR.IC.TRANSPORTATION"],E["GR.M1.NAVAL"]],C[121310]=[E["GR.IC.NAVAL"],E["GR.M1.YARD"]],C[121311]=[E["GR.IN.IC.TOLL FACILITY"]],C[121312]=[E["GR.IN.IC.TRAFFIC INSPECTION FACILITY"]],C[121313]=[E["GR.IN.IC.TUNNEL"]],C[121400]=[E["GR.IC.WATER"]],C[121401]=[E["GR.IN.IC.CONTROL VALVE"]],C[121402]=[E["GR.IN.IC.DAM"]],C[121403]=[E["GR.IN.IC.DISCHARGE OUTFALL"]],C[121404]=[E["GR.IN.IC.GROUND WATER WELL"]],C[121405]=[E["GR.IN.IC.PUMPING STATION"]],C[121406]=[E["GR.IN.IC.RESERVOIR"]],C[121407]=[E["GR.IN.IC.STORAGE TOWER"]],C[121408]=[E["GR.IN.IC.SURFACE WATER INTAKE"]],C[121409]=[E["GR.IN.IC.WASTEWATER TREATMENT FACILITY"]],C[121410]=[E["GR.IC.WATER"]],C[121411]=[E["GR.IC.WATER PURIFICATION"]],A["01"]=[E["GR.M1.BIOLOGICAL"]],A["02"]=[E["GR.M1.CHEMICAL"]],A["03"]=[E["GR.M1.NUCLEAR"]],A["04"]=[E["GR.IN.M1.RADIOLOGICAL"]],A["05"]=[E["GR.M1.DECONTAMINATION"]],A["06"]=[E["GR.IN.M1.COAL"]],A["07"]=[E["GR.IN.M1.GEOTHERMAL"]],A["08"]=[E["GR.IN.M1.HYDROELECTRIC"]],A["09"]=[E["GR.IN.M1.NATURAL GAS"]],A[10]=[E["GR.IN.M1.PETROLEUM"]],A[11]=[E["GR.IN.M1.CIVILIAN"]],A[12]=[E["GR.IN.M1.CIVILIAN TELEPHONE"]],A[13]=[E["GR.IN.M1.CIVILIAN TELEVISION"]],S["01"]=[E["GR.IN.M2.CHEMICAL & BIOLOGICAL WARFARE"]],S["02"]=[E["GR.IN.M2.CHEMICAL WARFARE PRODUCTION"]],S["03"]=[E["GR.IN.M2.NUCLEAR WARFARE PRODUCTION"]],S["04"]=[E["GR.IN.M2.RADIOLOGICAL WARFARE PRODUCTION"]],S["05"]=[E["GR.IN.M2.ATOMIC ENERGY REACTOR"]],S["06"]=[E["GR.IN.M2.NUCLEAR MATERIAL PRODUCTION"]],S["07"]=[E["GR.IN.M2.NUCLEAR MATERIAL STORAGE"]],S["08"]=[E["GR.IN.M2.WEAPONS GRADE PRODUCTION"]]),"30"==I&&(C[11e4]=[E["SE.IC.MILITARY"]],C[12e4]=[E["SE.IC.COMBATANT"]],C[120100]=[E["SE.IC.CARRIER"]],C[120200]=[E["SE.IC.SURFACE COMBATANT, LINE"]],C[120201]=[E["SE.IC.BATTLESHIP"]],C[120202]=[E["SE.IC.CRUISER, GUIDED MISSILE"]],C[120203]=[E["SE.IC.DESTROYER"]],C[120204]=[E["SE.IC.FRIGATE"]],C[120205]=[E["SE.IC.CORVETTE"]],C[120206]=[E["SE.IC.LITTORAL COMBATANT SHIP"]],C[120300]=[E["SE.IC.AMPHIBIOUS WARFARE SHIP"]],C[120301]=[E["SE.IC.AMPHIBIOUS FORCE FLAGSHIP"]],C[120302]=[E["SE.IC.AMPHIBIOUS ASSAULT"]],C[120303]=[E["SE.IC.AMPHIBIOUS ASSAULT SHIP, GENERAL"]],C[120304]=[E["SE.IC.AMPHIBIOUS ASSAULT SHIP, MULTI-PURPOSE"]],C[120305]=[E["SE.IC.AMPHIBIOUS ASSAULT SHIP, HELICOPTER"]],C[120306]=[E["SE.IC.AMPHIBIOUS TRANSPORT, DOCK"]],C[120307]=[E["SE.IC.LANDING SHIP"]],C[120308]=[E["SE.IC.LANDING CRAFT"]],C[120400]=[E["SE.IC.MINE WARFARE VESSEL"]],C[120401]=[E["SE.IC.MINELAYER"]],C[120402]=[E["SE.IC.MINESWEEPER"]],C[120403]=[E["SE.IC.MINESWEEPER, DRONE"]],C[120404]=[E["SE.IC.MINEHUNTER"]],C[120405]=[E["SE.IC.MINE COUNTERMEASURES"]],C[120406]=[E["SE.IC.MINE COUNTER MEASURE SUPPORT SHIP"]],C[120500]=[E["SE.IC.PATROL"]],C[120501]=[E["SE.IC.PATROL CRAFT"]],C[120502]=[E["SE.IC.PATROL GUN"]],C[120600]=[E["SE.IC.SEA SURFACE DECOY"]],C[120700]=[E["SE.IC.UNMANNED SURFACE WATER VEHICLE"]],C[120800]=[E["SE.IC.MILITARY SPEEDBOAT"]],C[120801]=[E["SE.IC.MILITARY SPEEDBOAT, RIGID-HULL INFLATABLE BOAT"]],C[120900]=[E["SE.IC.MILITARY JETSKI"]],C[121e3]=[E["SE.IC.NAVY TASK ORGANIZATION UNIT"]],C[121001]=[E["SE.IC.NAVY TASK ELEMENT"]],C[121002]=[E["SE.IC.NAVY TASK FORCE"]],C[121003]=[E["SE.IC.NAVY TASK GROUP"]],C[121004]=[E["SE.IC.NAVY TASK UNIT"]],C[121005]=[E["SE.IC.CONVOY"]],C[121100]=[E["GR.IC.RADAR"]],C[13e4]=[E["SE.IC.NONCOMBATANT"]],C[130100]=[E["SE.IC.AUXILIARY SHIP"]],C[130101]=[E["SE.IC.AMMUNITION SHIP"]],C[130102]=[E["SE.IC.STORES SHIP"]],C[130103]=[E["SE.IC.AUXILIARY FLAG OR COMMAND SHIP"]],C[130104]=[E["SE.IC.INTELLIGENCE COLLECTOR"]],C[130105]=[E["SE.IC.OCEAN RESEARCH SHIP"]],C[130106]=[E["SE.IC.SURVEY SHIP"]],C[130107]=[E["SE.IC.HOSPITAL SHIP2"]],C[130108]=[E["SE.IC.CARGO SHIP"]],C[130109]=[E["SE.IC.COMBAT SUPPORT SHIP, FAST"]],C[130110]=[E["SE.IC.OILER, REPLENISHMENT"]],C[130111]=[E["SE.IC.REPAIR SHIP"]],C[130112]=[E["SE.IC.SUBMARINE TENDER"]],C[130113]=[E["SE.IC.TUG, OCEAN GOING"]],C[130200]=[E["SE.IC.SERVICE CRAFT, YARD, GENERAL"]],C[130201]=[E["SE.IC.BARGE, NOT SELF-PROPELLED"]],C[130202]=[E["SE.IC.BARGE, SELF-PROPELLED"]],C[130203]=[E["SE.IC.TUG, HARBOUR"]],C[130204]=[E["SE.IC.LAUNCH"]],C[14e4]=[E["AR.I.CIVILIAN"]],C[140100]=[E["SE.IC.MERCHANT SHIP, GENERAL"]],C[140101]=[E["SE.IC.CARGO, GENERAL"]],C[140102]=[E["SE.IC.CONTAINER SHIP"]],C[140103]=[E["SE.IC.DREDGE"]],C[140104]=[E["SE.IC.ROLL ON-ROLL OFF"]],C[140105]=[E["SE.IC.FERRY"]],C[140106]=[E["SE.IC.HEAVY LIFT"]],C[140107]=[E["SE.IC.HOVERCRAFT 2525D"]],C[140108]=[E["SE.IC.MERCHANT SHIP, LASH CARRIER (WITH BARGES)"]],C[140109]=[E["SE.IC.OILER/TANKER"]],C[140110]=[E["SE.IC.PASSENGER SHIP"]],C[140111]=[E["SE.IC.TUG, OCEAN GOING CIVILIAN"]],C[140112]=[E["SE.IC.TOW"]],C[140113]=[E["SE.IC.TRANSPORT SHIP, HAZARDOUS MATERIAL"]],C[140114]=[E["SE.IC.JUNK/DHOW"]],C[140115]=[E["SE.IC.BARGE, NOT SELF-PROPELLED"]],C[140116]=[E["SE.IC.HOSPITAL SHIP"]],C[140200]=[E["SE.IC.FISHING VESSEL"]],C[140201]=[E["SE.IC.DRIFTER"]],C[140202]=[E["SE.IC.TRAWLER"]],C[140203]=[E["SE.IC.FISHING VESSEL DREDGE"]],C[140300]=[E["SE.IC.LAW ENFORCEMENT VESSEL"]],C[140400]=[E["SE.IC.LEISURE CRAFT, SAILING BOAT"]],C[140500]=[E["SE.IC.LEISURE CRAFT, MOTORIZED"]],C[140501]=[E["SE.IC.LEISURE CRAFT, MOTORIZED, RIGID-HULL INFLATABLE BOAT"]],C[140502]=[E["SE.IC.LEISURE CRAFT, MOTORIZED, SPEEDBOAT"]],C[140600]=[E["SE.IC.LEISURE CRAFT, JETSKI"]],C[140700]=[E["SE.IC.UNMANNED SURFACE WATER VEHICLE (USV)"]],C[15e4]=[E["SE.IC.OWN SHIP"]],C[16e4]=[E["SE.IC.FUSED TRACK"]],C[17e4]=[E["SP.I.MANUAL TRACK"]],A["01"]=[E["SE.M1.OWN SHIP"]],A["02"]=[E["SE.M1.ANTIAIR WARFARE"]],A["03"]=[E["SE.M1.ANTISUBMARINE WARFARE"]],A["04"]=[E["SE.M1.ESCORT"]],A["05"]=[E["SE.M1.ELECTRONIC WARFARE"]],A["06"]=[E["SE.M1.INTELLIGENCE, SURVEILLANCE, RECONNAISSANCE"]],A["07"]=[E["SE.M1.MINE COUNTER MEASURES"]],A["08"]=[E["SE.M1.MISSILE DEFENSE"]],A["09"]=[E["SE.M1.MEDICAL"]],A[10]=[E["SE.M1.MINE WARFARE"]],A[11]=[E["SE.M1.REMOTE MULTI-MISSION VEHIHLE"]],A[12]=[E["SE.M1.SPECIAL OPERATIONS FORCE"]],A[13]=[E["SE.M1.SURFACE WARFARE"]],A[14]=[E["SE.M1.BALLISTIC MISSILE"]],A[15]=[E["SE.M1.GUIDED MISSILE"]],A[16]=[E["SE.M1.OTHER GUIDED MISSILE"]],A[17]=[E["SE.M1.TORPEDO"]],A[18]=[E["SE.M1.DRONE-EQUIPPED"]],A[19]=[E["SE.M1.HELICOPTER-EQUIPPED"]],A[20]=[E["SE.M1.BALLISTIC MISSILE DEFENSE, SHOOTER"]],A[21]=[E["SE.M1.BALLISTIC MISSILE DEFENSE, LONG- RANGE SURVEILLANCE AND TRACK (LRS&T)"]],A[22]=[E["SE.M1.SEA-BASE X-BAND"]],A[23]=[E["SE.M1.HIJACKING/HIJACKED"]],S["01"]=[E["SE.M2.NUCLEAR POWERED"]],S["02"]=[E["SE.M2.HEAVY"]],S["03"]=[E["SE.M2.LIGHT"]],S["04"]=[E["SE.M2.MEDIUM"]],S["05"]=[E["SE.M2.DOCK"]],S["06"]=[E["SE.M2.LOGISTICS"]],S["07"]=[E["SE.M2.TANK"]],S["08"]=[E["SE.M2.VEHICLE"]],S["09"]=[E["SE.M2.FAST"]],S[10]=[E["SE.M2.AIR-CUSHIONED (USA ONLY)"]],S[11]=[E["SE.M2.AIR-CUSHIONED"]],S[12]=[E["SE.M2.HYDROFOIL"]],S[13]=[E["SE.M2.AUTONOMOUS CONTROL"]],S[14]=[E["SE.M2.REMOTELY PILOTED"]],S[15]=[E["SE.M2.EXPENDABLE"]]),"35"==I&&(C[11e4]=[E["SU.IC.MILITARY"]],C[110100]=[E["SU.IC.SUBMARINE"]],C[110101]=[E["SU.IC.SUBMARINE, SURFACED"]],C[110102]=[E["SU.IC.SUBMARINE, SNORKELING"]],C[110103]=[E["SU.IC.SUBMARINE, BOTTOMED"]],C[110200]=[E["SU.IC.OTHER SUBMERSIBLE"]],C[110300]=[E["SU.IC.NON-SUBMARINE"]],C[110400]=[E["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV)"]],C[110500]=[E["SU.IC.DIVER, MILITARY"]],C[12e4]=[E["AR.I.CIVILIAN"]],C[120100]=[E["SU.IC.SUBMERSIBLE, CIVILIAN"]],C[120200]=[E["SU.IC.AUTONOMOUS UNDERWATER VEHICLE/ UNMANNED UNDERWATER VEHICLE (AUV/UUV), CIVILIAN"]],C[120300]=[E["SU.IC.DIVER, CIVILIAN"]],C[13e4]=[E["SU.IC.UNDERWATER WEAPON"]],C[130100]=[E["SU.IC.TORPEDO"]],C[130200]=[E["SU.IC.IMPROVISED EXPLOSIVE DEVICE (IED)"]],C[130300]=[E["SU.IC.UNDERWATER DECOY DSymbol"]],C[14e4]=[E["SU.IC.ECHO TRACKER CLASSIFIER (ETC)/POSSIBLE CONTACT (POSCON)"]],C[15e4]=[E["SU.IC.FUSED TRACK"]],C[16e4]=[E["SP.I.MANUAL TRACK"]],A["01"]=[E["SU.M1.ANTISUBMARINE WARFARE"]],A["02"]=[E["SU.M1.AUXILIARY"]],A["03"]=[E["SU.M1.COMMAND AND CONTROL"]],A["04"]=[E["SU.M1.INTELLIGENCE, SURVEILLANCE, RECONNAISSANCE"]],A["05"]=[E["SU.M1.MINE COUNTERMEASURES"]],A["06"]=[E["SU.M1.MINE WARFARE"]],A["07"]=[E["SU.M1.SURFACE WARFARE"]],A["08"]=[E["SU.M1.ATTACK"]],A["09"]=[E["SU.M1.BALLISTIC MISSILE"]],A[10]=[E["SU.M1.GUIDED MISSILE"]],A[11]=[E["SU.M1.OTHER GUIDED MISSILES (POINT DEFENCE)"]],A[12]=[E["SU.M1.SPECIAL OPERATIONS FORCE"]],A[13]=[E["SU.M1.POSSIBLE SUBMARINE - LOW 1"]],A[14]=[E["SU.M1.POSSIBLE SUBMARINE - LOW 2"]],A[15]=[E["SU.M1.POSSIBLE SUBMARINE - HIGH 3"]],A[16]=[E["SU.M1.POSSIBLE SUBMARINE - HIGH 4"]],A[17]=[E["SU.M1.PROBABLE SUBMARINE"]],A[18]=[E["SU.M1.CERTAIN SUBMARINE"]],A[19]=[E["SU.M1.ANTI-TORPEDO TORPEDO"]],A[20]=[E["SU.M1.HIJACKING/HIJACKED"]],S["01"]=[E["SU.M2.AIR INDEPENDENT PROPULSION"]],S["02"]=[E["SU.M2.DIESEL PROPULSION"]],S["03"]=[E["SU.M2.DIESEL - TYPE 1"]],S["04"]=[E["SU.M2.DIESEL - TYPE 2"]],S["05"]=[E["SU.M2.DIESEL - TYPE 3"]],S["06"]=[E["SU.M2.NUCLEAR POWERED"]],S["07"]=[E["SU.M2.NUCLEAR - TYPE 1"]],S["08"]=[E["SU.M2.NUCLEAR - TYPE 2"]],S["09"]=[E["SU.M2.NUCLEAR - TYPE 3"]],S[10]=[E["SU.M2.NUCLEAR - TYPE 4"]],S[11]=[E["SU.M2.NUCLEAR - TYPE 5"]],S[12]=[E["SU.M2.NUCLEAR - TYPE 6"]],S[13]=[E["SU.M2.NUCLEAR - TYPE 7"]],S[14]=[E["SU.M2.AUTONOMOUS CONTROL"]],S[15]=[E["SU.M2.REMOTELY PILOTED"]],S[16]=[E["SU.M2.EXPENDABLE"]]),"36"==I&&(C[11e4]=[E["SU.IC.SEA MINE"]],C[110100]=[E["SU.IC.SEA MINE - BOTTOM"]],C[110200]=[E["SU.IC.SEA MINE - MOORED"]],C[110300]=[E["SU.IC.SEA MINE - FLOATING"]],C[110400]=[E["SU.IC.SEA MINE - RISING"]],C[110500]=[E["SU.IC.SEA MINE (IN OTHER POSITION)"]],C[110600]=[E["SU.IC.SEA MINE - KINGFISHER"]],C[110700]=[E["SU.IC.SEA MINE - SMALL OBJECT"]],C[110800]=[E["SU.IC.SEA MINE EXERCISE MINE"]],C[110801]=[E["SU.IC.SEA MINE EXERCISE MINE - BOTTOM"]],C[110802]=[E["SU.IC.SEA MINE EXERCISE MINE - MOORED"]],C[110803]=[E["SU.IC.SEA MINE EXERCISE MINE - FLOATING"]],C[110804]=[E["SU.IC.SEA MINE EXERCISE MINE - RISING"]],C[110900]=[E["SU.IC.SEA MINE NEUTRALIZED"]],C[110901]=[E["SU.IC.SEA MINE NEUTRALIZED - BOTTOM"]],C[110902]=[E["SU.IC.SEA MINE NEUTRALIZED - MOORED"]],C[110903]=[E["SU.IC.SEA MINE NEUTRALIZED - FLOATING"]],C[110904]=[E["SU.IC.SEA MINE NEUTRALIZED - RISING"]],C[110905]=[E["SU.IC.SEA MINE (IN OTHER POSITION) NEUTRALIZED"]],C[12e4]=[E["SU.IC.UNEXPLODED EXPLOSIVE ORDNANCE"]],C[13e4]=[E["SU.IC.SEA MINE DECOY"]],C[130100]=[E["SU.IC.SEA MINE DECOY, BOTTOM/GROUND"]],C[130200]=[E["SU.IC.SEA MINE DECOY, MOORED"]],C[140100]=[MS.scale(1.3,E["SU.IC.SEA MINE MILCO"])],C[140101]=[MS.scale(1.3,[E["SU.IC.SEA MINE MILCO"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 1"]])],C[140102]=[MS.scale(1.3,[E["SU.IC.SEA MINE MILCO"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 2"]])],C[140103]=[MS.scale(1.3,[E["SU.IC.SEA MINE MILCO"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 3"]])],C[140104]=[MS.scale(1.3,[E["SU.IC.SEA MINE MILCO"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 4"]])],C[140105]=[MS.scale(1.3,[E["SU.IC.SEA MINE MILCO"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 5"]])],C[140200]=[E["SU.IC.SEA MINE MILCO - BOTTOM"]],C[140201]=[E["SU.IC.SEA MINE MILCO - BOTTOM"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 1"]],C[140202]=[E["SU.IC.SEA MINE MILCO - BOTTOM"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 2"]],C[140203]=[E["SU.IC.SEA MINE MILCO - BOTTOM"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 3"]],C[140204]=[E["SU.IC.SEA MINE MILCO - BOTTOM"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 4"]],C[140205]=[E["SU.IC.SEA MINE MILCO - BOTTOM"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 5"]],C[140300]=[E["SU.IC.SEA MINE MILCO - MOORED"]],C[140301]=[E["SU.IC.SEA MINE MILCO - MOORED"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 1"]],C[140302]=[E["SU.IC.SEA MINE MILCO - MOORED"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 2"]],C[140303]=[E["SU.IC.SEA MINE MILCO - MOORED"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 3"]],C[140304]=[E["SU.IC.SEA MINE MILCO - MOORED"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 4"]],C[140305]=[E["SU.IC.SEA MINE MILCO - MOORED"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 5"]],C[140400]=[E["SU.IC.SEA MINE MILCO - FLOATING"]],C[140401]=[E["SU.IC.SEA MINE MILCO - FLOATING"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 1"]],C[140402]=[E["SU.IC.SEA MINE MILCO - FLOATING"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 2"]],C[140403]=[E["SU.IC.SEA MINE MILCO - FLOATING"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 3"]],C[140404]=[E["SU.IC.SEA MINE MILCO - FLOATING"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 4"]],C[140405]=[E["SU.IC.SEA MINE MILCO - FLOATING"],E["SU.IC.SEA MINE MILCO - GENERAL, CONFIDENCE LEVEL 5"]],C[15e4]=[MS.scale(1.3,E["SU.IC.SEA MINE MILEC"])],C[150100]=[E["SU.IC.SEA MINE MILEC - BOTTOM"]],C[150200]=[E["SU.IC.SEA MINE MILEC - MOORED"]],C[150300]=[E["SU.IC.SEA MINE MILEC - FLOATING"]],C[16e4]=[MS.scale(1.3,E["SU.IC.SEA MINE NEGATIVE REACQUISITION"])],C[160100]=[E["SU.IC.SEA MINE NEGATIVE REACQUISITION - BOTTOM"]],C[160200]=[E["SU.IC.SEA MINE NEGATIVE REACQUISITION - MOORED"]],C[160300]=[E["SU.IC.SEA MINE NEGATIVE REACQUISITION - FLOATING"]],C[17e4]=[MS.scale(1.3,E["SU.IC.SEA MINE GENERAL OBSTRUCTOR"])],C[170100]=[E["SU.IC.SEA MINE GENERAL OBSTRUCTOR NEUTRALIZED"]],C[18e4]=[MS.scale(1.3,E["SU.IC.SEA MINE MINE ANCHOR"])],C[19e4]=[MS.scale(1.3,E["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT"])],C[190100]=[E["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - BOTTOM"]],C[190200]=[E["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - MOORED"]],C[190300]=[E["SU.IC.SEA MINE NON-MINE MINE-LIKE CONTACT - FLOATING"]],C[2e5]=[E["SU.IC.ENVIRONMENTAL REPORT LOCATION"]],C[21e4]=[E["SU.IC.DIVE REPORT LOCATION"]]),"40"==I&&(C[110100]=[E["AC.IC.CRIMINAL.ACTIVITY.INCIDENT"]],C[110101]=[MS.scale(1.5,E["ST.IC.ARREST"])],C[110102]=[E["ST.IC.ARSON/FIRE"]],C[110103]=[E["ST.IC.INDIVIDUAL"],E["ST.IC.ATTEMPTED CRIMINAL ACTIVITY"]],C[110104]=[E["ST.IC.DRIVE-BY SHOOTING"]],C[110105]=[E["ST.IC.DRUG RELATED ACTIVITIES"]],C[110106]=[E["ST.IC.EXTORTION"]],C[110107]=[E["ST.IC.GRAFFITI"]],C[110108]=[E["ST.IC.KILLING VICTIM"]],C[110109]=[E["ST.IC.POISONING"]],C[110110]=[E["ST.IC.RIOT"]],C[110111]=[MS.scale(1.5,E["ST.IC.BOOBY TRAP"])],C[110112]=[E["ST.IC.HOUSE"],E["ST.M1.EVICTION"]],C[110113]=[E["ST.IC.BLACK MARKETING"]],C[110114]=[E["ST.IC.VANDALISM/LOOT/RANSACK/PLUNDER/SACK"]],C[110115]=[E["GR.IC.FF.JAIL BREAK"]],C[110116]=[E["ST.IC.ROBBERY"]],C[110117]=[E["ST.IC.THEFT"]],C[110118]=[E["ST.IC.BURGLARY"]],C[110119]=[E["ST.IC.SMUGGLING"]],C[110120]=[E["ST.IC.ROCK THROWING"]],C[110121]=[E["ST.IC.COMPOSITE LOSS"],E["ST.M1.DEAD BODY"]],C[110122]=[E["ST.IC.SABOTAGE"]],C[110123]=[MS.translate(0,10,MS.scale(.8,E["AC.IC.CRIMINAL.ACTIVITY.INCIDENT"])),E["AC.M1.THREAT"]],C[110200]=[E["ST.IC.BOMB"]],C[110201]=[E["ST.IC.BOMB"],E["AC.M1.THREAT"]],C[110300]=[E["ST.IC.IED"]],C[110301]=[E["ST.IC.EXPLOSION"],E["ST.IC.IED"]],C[110302]=[MS.translate(0,15,MS.scale(.7,[E["ST.IC.EXPLOSION"],E["ST.IC.IED"]])),E["ST.M1.PREMATURE"]],C[110303]=[E["ST.IC.IED"],E["GR.IC.FF.SUPPLY"]],C[110304]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.IED"]],C[110400]=[E["AC.IC.SHOOTING"]],C[110401]=[E["ST.IC.SNIPING"]],C[110500]=[E["ST.IC.ILLEGAL DRUG OPERATION"]],C[110501]=[E["ST.IC.ILLEGAL DRUG OPERATION"],E["ST.M1.TRAFFICKING"]],C[110502]=[E["ST.IC.ILLEGAL DRUG OPERATION"],E["ST.M1.LABRATORY"]],C[110600]=[E["ST.IC.EXPLOSION"]],C[110601]=[E["ST.IC.EXPLOSION"],E["ST.IC.GRENADE"]],C[110602]=[E["ST.IC.EXPLOSION"],E["ST.IC.INCENDIARY"]],C[110603]=[E["ST.IC.EXPLOSION"],E["ST.IC.MINE"]],C[110604]=[E["ST.IC.EXPLOSION"],MS.scale(.6,E["GR.EQ.MORTAR"])],C[110605]=[E["ST.IC.EXPLOSION"],MS.scale(.6,E["GR.EQ.SINGLE ROCKET LAUNCHER"])],C[110606]=[MS.scale(.7,E["ST.IC.BOMB"]),E["ST.IC.EXPLOSION"]],C[12e4]=[E["AC.IC.CRIMINAL.CIVIL DISTURBANCE"]],C[120100]=[E["ST.IC.DEMONSTRATION"]],C[130100]=[E["ST.IC.PATROLLING"]],C[130200]=[E["ST.IC.PSYCHOLOGICAL OPERATIONS"]],C[130201]=[E["ST.IC.RADIO AND TELEVISION PSYCHOLOGICAL OPERATIONS"]],C[130300]=[E["ST.IC.SEARCHING"]],C[130401]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.WILLING"]],C[130402]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.COERCED/IMPRESSED"]],C[130500]=[E["ST.IC.MINE LAYING"]],C[130600]=[E["ST.IC.SPY"]],C[130700]=[E["ST.IC.WARRANT SERVED"]],C[130800]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.EXFILTRATION"]],C[130900]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.INFILTRATION"]],C[131e3]=[E["ST.IC.GROUP"],E["ST.M1.MEETING"]],C[131001]=[E["ST.IC.POLLING PLACE/ELECTION"]],C[131100]=[E["ST.IC.HOUSE"],E["ST.M1.RAID"]],C[131200]=[E["GR.IC.FF.EMERGENCY OPERATION"]],C[131201]=[MS.scale(.7,E["GR.IC.FF.EMERGENCY OPERATION"]),E["AC.M1.EMERGENCY COLLECTION EVACUATION POINT"]],C[131202]=[E["ST.IC.FOOD DISTRIBUTION"]],C[131203]=[MS.scale(.7,E["GR.IC.FF.EMERGENCY OPERATION"]),E["AC.M1.EMERGENCY INCIDENT COMMAND CENTER"]],C[131204]=[MS.scale(.7,E["GR.IC.FF.EMERGENCY OPERATION"]),E["AC.M1.EMERGENCY OPERATIONS CENTER"]],C[131205]=[E["AC.IC.EMERGENCY PUBLIC INFORMATION CENTER"]],C[131206]=[MS.scale(.7,E["GR.IC.FF.EMERGENCY OPERATION"]),E["AC.M1.EMERGENCY SHELTER"]],C[131207]=[MS.scale(.7,E["GR.IC.FF.EMERGENCY OPERATION"]),E["AC.M1.EMERGENCY STAGING AREA"]],C[131208]=[E["GR.IC.FF.SUPPLY"],E["GR.IC.WATER"]],C[131300]=[E["GR.IC.EMERGENCY MEDICAL OPERATION"]],C[131301]=[E["AC.IC.EMT STATION LOCATION"]],C[131302]=[E["AC.IC.HEALTH DEPARTMENT FACILITY"]],C[131303]=[E["AC.IC.MEDICAL FACILITIES OUTPATIENT"]],C[131304]=[E["AC.IC.OPERATION/EMERGENCY MEDICAL OPERATION"]],C[131305]=[E["AC.IC.PHARMACY"]],C[131306]=[E["AC.IC.TRIAGE"]],C[131400]=[E["GR.IC.FIRE PROTECTION"]],C[131401]=[E["AC.IC.FIRE HYDRANT"]],C[131402]=[MS.scale(1.5,E["GR.IC.FIRE PROTECTION"])],C[131403]=[E["AC.IC.OTHER WATER SUPPLY LOCATION"]],C[131500]=[E["GR.IC.FF.LAW ENFORCEMENT"]],C[131501]=[E["GR.IC.BUREAU OF ALCOHOL, TOBACCO, FIREARMS AND EXPLOSIVES (ATF) (DEPARTMENT OF JUSTICE)"]],C[131502]=[E["GR.IC.FF.BORDER PATROL"]],C[131503]=[E["GR.IC.FF.CUSTOMS SERVICE"]],C[131504]=[E["GR.IC.DRUG ENFORCEMENT AGENCY (DEA)"]],C[131505]=[E["GR.IC.FF.DEPARTMENT OF JUSTICE (DOJ)"]],C[131506]=[E["GR.IC.FEDERAL BUREAU OF INVESTIGATION (FBI)"]],C[131507]=[E["GR.IC.LAW ENFORCEMENT"]],C[131508]=[E["GR.IC.FF.PRISON"]],C[131509]=[E["GR.IC.UNITED STATES SECRET SERVICE(TREAS) (USSS)"]],C[131510]=[E["GR.IC.TRANSPORTATION SECURITY AGENCY (TSA)"]],C[131511]=[E["SE.IC.LAW ENFORCEMENT VESSEL"]],C[131512]=[E["GR.IC.FF.US MARSHALS SERVICE"]],C[131513]=[E["ST.IC.INTERNAL SECURITY FORCE"]],C[14e4]=[E["AC.IC.FIRE EVENT"]],C[140100]=[E["AC.IC.FIRE ORIGIN"]],C[140200]=[E["AC.IC.SMOKE"]],C[140300]=[E["AC.IC.HOT SPOT"]],C[140400]=[E["AC.IC.NON-REsIdENTIAL FIRE"]],C[140500]=[E["AC.IC.REsIdENTIAL FIRE"]],C[140600]=[E["AC.IC.SCHOOL FIRE"]],C[140700]=[E["AC.IC.SPECIAL NEEDS FIRE"]],C[140800]=[E["AC.IC.WILD FIRE"]],C[150100]=[E["AC.IC.HAZARDOUS MATERIALS INCIDENT"]],C[150101]=[E["AC.IC.CHEMICAL AGENT"]],C[150102]=[E["AC.IC.CORROSIVE MATERIAL"]],C[150103]=[E["AC.IC.HAZARDOUS WHEN WET"]],C[150104]=[E["AC.IC.EXPLOSIVE MATERIAL"]],C[150105]=[E["AC.IC.FLAMMABLE GAS"]],C[150106]=[E["AC.IC.FLAMMABLE LIQUID"]],C[150107]=[E["AC.IC.FLAMMABLE SOLID"]],C[150108]=[E["AC.IC.NON-FLAMMABLE GAS"]],C[150109]=[E["AC.IC.ORGANIC PEROXIDE"]],C[150110]=[E["AC.IC.OXIDIZER"]],C[150111]=[E["AC.IC.RADIOACTIVE MATERIAL"]],C[150112]=[E["AC.IC.SPONTANEOUSLY COMBUSTIBLE MATERIAL"]],C[150113]=[E["AC.IC.TOXIC GAS"]],C[150114]=[E["AC.IC.TOXIC INFECTIOUS MATERIAL"]],C[150115]=[E["AC.IC.UNEXPLODED ORDNANCE"]],C[16e4]=[E["GR.IC.TRANSPORTATION"]],C[160100]=[E["ST.IC.HIJACKING (AIRPLANE)"]],C[160200]=[E["ST.IC.HIJACKING (BOAT)"]],C[160300]=[E["GR.EQ.TRAIN LOCOMOTIVE"]],C[160400]=[E["ST.IC.KNOWN INSURGENT VEHICLE"]],C[160500]=[E["ST.IC.EXPLOSION"],MS.scale(.7,E["ST.IC.KNOWN INSURGENT VEHICLE"])],C[17e4]=[E["ST.IC.NATURAL EVENT"]],C[170100]=[E["ST.IC.GEOLOGIC"]],C[170101]=[E["AC.IC.AFTERSHOCK"]],C[170102]=[E["AC.IC.AVALANCHE"]],C[170103]=[E["AC.IC.EARTHQUAKE EPICENTER"]],C[170104]=[E["AC.IC.LANDSLIDE"]],C[170105]=[E["AC.IC.SUBSIDENCE"]],C[170106]=[E["AC.IC.VOLCANIC ERUPTION"]],C[170107]=[E["AC.IC.VOLCANIC THREAT"]],C[170108]=[E["AC.IC.CAVE ENTRANCE"]],C[170200]=[E["ST.IC.HYDRO-METEOROLOGICAL"]],C[170201]=[E["AC.IC.DROUGHT"]],C[170202]=[E["AC.IC.FLOOD"]],C[170203]=[E["AC.IC.TSUNAMI"]],C[170300]=[E["ST.IC.INFESTATION"]],C[170301]=[E["AC.IC.BIRD"]],C[170302]=[E["AC.IC.INSECT"]],C[170303]=[E["AC.IC.MICROBIAL"]],C[170304]=[E["AC.IC.REPTILE"]],C[170305]=[E["AC.IC.RODENT"]],C[180100]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.LEADER"],E["ST.M2.RELIGIOUS"]],C[180200]=[E["ST.IC.INDIVIDUAL"],E["ST.M1.SPEAKER"]],A["01"]=[E["ST.M1.ASSASSINATION"]],A["02"]=[E["ST.M1.EXECUTION (WRONGFUL KILLING)"]],A["03"]=[E["ST.M1.HIJACKING/HIJACKED"]],A["04"]=[E["ST.M1.HOUSE-TO-HOUSE"]],A["05"]=[E["ST.M1.KIDNAPPING"]],A["06"]=[E["ST.M1.MURDER"]],A["07"]=[E["ST.M1.PIRACY"]],A["08"]=[E["ST.M1.RAPE"]],A["09"]=[E["ST.M1.WRITTEN PSYCHOLOGICAL OPERATIONS"]],A[10]=[E["ST.M1.PIRATE"]],A[11]=[E["ST.M1.FALSE"]],A[12]=[E["ST.M1.FIND"]],A[13]=[E["ST.M1.FOUND AND CLEARED"]],A[14]=[E["ST.M1.HOAX (DECOY)"]],A[15]=[E["ST.M1.ATTEMPTED"]],A[16]=[E["ST.M1.ACCIDENT"]],A[17]=[E["ST.M1.INCIDENT"]],A[18]=[E["ST.M1.THEFT"]]),"50"!=I&&"51"!=I&&"52"!=I&&"53"!=I&&"54"!=I||(C[110100]=[E["SI.IC.COMMUNICATIONS"]],C[110200]=[E["AR.I.JAMMER / ELECTRONIC COUNTER-MEASURES"]],C[110300]=[E["SI.IC.RADAR"]],A["01"]=[E["SI.M1.ANTI-AIRCRAFT FIRE CONTROL"]],A["02"]=[E["SI.M1.AIRBORNE SEARCH AND BOMBING"]],A["03"]=[E["SI.M1.AIRBORNE INTERCEPT"]],A["04"]=[E["SI.M1.ALTIMETER"]],A["05"]=[E["SI.M1.AIRBORNE RECONNAISSANCE AND MAPPING"]],A["06"]=[E["SI.M1.AIR TRAFFIC CONTROL"]],A["07"]=[E["SI.M1.BEACON TRANSPONDER (NOT IFF)"]],A["08"]=[E["SI.M1.BATTLEFIELD SURVEILLANCE"]],A["09"]=[E["SI.M1.CONTROLLED APPROACH"]],A[10]=[E["SI.M1.CONTROLLED INTERCEPT"]],A[11]=[E["SI.M1.CELLULAR/MOBILE"]],A[12]=[E["SI.M1.COASTAL SURVEILLANCE"]],A[13]=[E["SI.M1.DECOY/MIMIC"]],A[14]=[E["SI.M1.DATA TRANSMISSION"]],A[15]=[E["SI.M1.EARTH SURVEILLANCE"]],A[16]=[E["SI.M1.EARLY WARNING"]],A[17]=[E["SI.M1.FIRE CONTROL"]],A[18]=[E["SI.M1.GROUND MAPPING"]],A[19]=[E["SI.M1.HEIGHT FINDING"]],A[20]=[E["SI.M1.HARBOR SURVEILLANCE"]],A[21]=[E["SI.M1.IDENTIFICATION, FRIEND OR FOE (INTERROGATOR)"]],A[22]=[E["SI.M1.INSTRUMENT LANDING SYSTEM"]],A[23]=[E["SI.M1.IONOSPHERIC SOUNDING"]],A[24]=[E["SI.M1.IDENTIFICATION, FRIEND OR FOE (TRANSPONDER)"]],A[25]=[E["SI.M1.BARRAGE JAMMER"]],A[26]=[E["SI.M1.CLICK JAMMER"]],A[27]=[E["SI.M1.DECEPTIVE JAMMER"]],A[28]=[E["SI.M1.FREQUENCY SWEPT JAMMER"]],A[29]=[E["SI.M1.JAMMER (GENERAL)"]],A[30]=[E["SI.M1.NOISE JAMMER"]],A[31]=[E["SI.M1.PULSED JAMMER"]],A[32]=[E["SI.M1.REPEATER JAMMER"]],A[33]=[E["SI.M1.SPOT NOISE JAMMER"]],A[34]=[E["SI.M1.TRANSPONDER JAMMER"]],A[35]=[E["SI.M1.MISSILE ACQUISITION"]],A[36]=[E["SI.M1.MISSILE CONTROL"]],A[37]=[E["SI.M1.MISSILE DOWNLINK"]],A[38]=[E["SI.M1.METEOROLOGICAL"]],A[39]=[E["SI.M1.MULTI-FUNCTION"]],A[40]=[E["SI.M1.MISSILE GUIDANCE"]],A[41]=[E["SI.M1.MISSILE HOMING"]],A[42]=[E["SI.M1.MISSILE TRACKING"]],A[43]=[E["SI.M1.NAVIGATIONAL/GENERAL"]],A[44]=[E["SI.M1.NAVIGATIONAL/DISTANCE MEASURING EQUIPMENT"]],A[45]=[E["SI.M1.NAVIGATION/TERRAIN FOLLOWING"]],A[46]=[E["SI.M1.NAVIGATIONAL/WEATHER AVOIDANCE"]],A[47]=[E["SI.M1.OMNI-LINE OF SIGHT (LOS)"]],A[48]=[E["SI.M1.PROXIMITY USE"]],A[49]=[E["SI.M1.POINT-TO-POINT LINE OF SIGHT (LOS)"]],A[50]=[E["SI.M1.INSTRUMENTATION"]],A[51]=[E["SI.M1.RANGE ONLY"]],A[52]=[E["SI.M1.SONOBUOY"]],A[53]=[E["SI.M1.SATELLITE DOWNLINK"]],A[54]=[E["SI.M1.SPACE"]],A[55]=[E["SI.M1.SURFACE SEARCH"]],A[56]=[E["SI.M1.SHELL TRACKING"]],A[57]=[E["SI.M1.SATELLITE UPLINK"]],A[58]=[E["SI.M1.TARGET ACQUISITION"]],A[59]=[E["SI.M1.TARGET ILLUMINATION"]],A[60]=[E["SI.M1.TROPOSPHERIC SCATTER"]],A[61]=[E["SI.M1.TARGET TRACKING"]],A[62]=[E["SI.M1.UNKNOWN"]],A[63]=[E["SI.M1.VIDEO REMOTING"]],A[64]=[E["SI.M1.EXPERIMENTAL"]]),"60"==I&&(C[110100]=[E["CY.IC.COMMAND AND CONTROL (C2)"]],C[110200]=[E["CY.IC.HERDER"]],C[110300]=[E["CY.IC.CALLBACK DOMAIN"]],C[110400]=[E["CY.IC.ZOMBIE"]],C[120100]=[E["CY.IC.ADVANCED PERSISTENT THREAT (APT)"]],C[120101]=[E["CY.IC.APT WITH C2"]],C[120102]=[E["CY.IC.APT WITH SELF PROPAGATION"]],C[120103]=[E["CY.IC.APT WITH C2 AND SELF PROPAGATION"]],C[120104]=[E["CY.IC.APT OTHER"]],C[120200]=[E["CY.IC.NON-ADVANCED PERSISTENT THREAT (NAPT)"]],C[120201]=[E["CY.IC.NAPT WITH C2"]],C[120202]=[E["CY.IC.NAPT WITH SELF PROPAGATION"]],C[120203]=[E["CY.IC.NAPT WITH C2 AND SELF PROPAGATION"]],C[120204]=[E["CY.IC.NAPT OTHER"]],C[130100]=[E["CY.IC.NORMAL"]],C[130200]=[E["CY.IC.NETWORK OUTAGE"]],C[130300]=[E["CY.IC.UNKNOWN"]],C[130400]=[E["CY.IC.IMPAIRED"]],C[140100]=[E["CY.IC.CORE ROUTER"]],C[140200]=[E["CY.IC.ROUTER"]],C[140300]=[E["CY.IC.CROSS DOMAIN SOLUTION"]],C[140400]=[E["CY.IC.MAIL SERVER"]],C[140500]=[E["CY.IC.WEB SERVER"]],C[140600]=[E["CY.IC.DOMAIN SERVER"]],C[140700]=[E["CY.IC.FILE SERVER"]],C[140800]=[E["CY.IC.PEER-TO-PEER NODE"]],C[140900]=[E["CY.IC.FIREW ALL"]],C[141e3]=[E["CY.IC.SWITCH"]],C[141100]=[E["CY.IC.HOST"]],C[141200]=[E["CY.IC.VIRTUAL PRIVATE NETWORK (VPN)"]],C[150100]=[E["CY.IC.DEPARTMENT OF DEFENSE (DOD)"]],C[150200]=[E["CY.IC.GOVERNMENT"]],C[150300]=[E["CY.IC.CONTRACTOR"]],C[150400]=[E["CY.IC.SUPERVISORY CONTROL AND DATA ACQUISITION (SCADA)"]],C[150500]=[E["CY.IC.NON-GOVERNMENT"]],C[160100]=[E["CY.IC.INFECTION"]],C[160200]=[E["CY.IC.DEGRADATION"]],C[160300]=[E["CY.IC.DATA SPOOFING"]],C[160400]=[E["CY.IC.DATA MANIPULATION"]],C[160500]=[E["CY.IC.EXFILTRATION"]],C[160600]=[E["CY.IC.POWER OUTAGE"]],C[160700]=[E["CY.IC.NETWORK OUTAGE"]],C[160800]=[E["CY.IC.SERVICE OUTAGE"]],C[160900]=[E["CY.IC.DEVICE OUTAGE"]]),{icn:C,m1:A,m2:S}},MS._Path2D=function(I,E){I.beginPath();for(var R,C,A,S,N,T=E.match(/([MCLHV][^MCLHV]*)/gi),M=0;M<T.length;M++){if("M"==T[M].charAt(0)){N=T[M].match(/[-\d].*[\d]/)[0].split(/[\s,]/g),R=parseFloat(N[0]),C=parseFloat(N[1]),A=R,S=C,I.moveTo(R,C);for(var t=2;t<N.length;t+=2)R=parseFloat(N[t]),C=parseFloat(N[t+1]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&(I.closePath(),R=A,C=S)}if("m"==T[M].charAt(0)){N=T[M].match(/[-\d].*[\d]/)[0].split(/[\s,]/g),R=R?R+parseFloat(N[0]):parseFloat(N[0]),C=C?C+parseFloat(N[1]):parseFloat(N[1]),A=R,S=C,I.moveTo(R,C);for(var t=2;t<N.length;t+=2)R+=parseFloat(N[t]),C+=parseFloat(N[t+1]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&(I.closePath(),R=A,C=S)}if("L"==T[M].charAt(0)){N=T[M].match(/[-\d].*[\d]/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t+=2)R=parseFloat(N[t]),C=parseFloat(N[t+1]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&(I.closePath(),
R=A,C=S)}if("l"==T[M].charAt(0)){N=T[M].match(/[-\d].*[\d]/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t+=2)R+=parseFloat(N[t]),C+=parseFloat(N[t+1]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}if("C"==T[M].charAt(0)){N=T[M].match(/[-\d].*[\d]/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t+=6)R=parseFloat(N[t+4]),C=parseFloat(N[t+5]),I.bezierCurveTo(N[t],N[t+1],N[t+2],N[t+3],N[t+4],N[t+5]);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}if("c"==T[M].charAt(0)){N=T[M].match(/[-\d].*[\d]/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t+=6)x1=R+parseFloat(N[t]),y1=C+parseFloat(N[t+1]),x2=R+parseFloat(N[t+2]),y2=C+parseFloat(N[t+3]),R+=parseFloat(N[t+4]),C+=parseFloat(N[t+5]),I.bezierCurveTo(x1,y1,x2,y2,R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}if("H"==T[M].charAt(0)){N=T[M].match(/[-\d](.*[\d])?/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t++)R=parseFloat(N[t]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}if("h"==T[M].charAt(0)){N=T[M].match(/[-\d](.*[\d])?/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t++)R+=parseFloat(N[t]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}if("V"==T[M].charAt(0)){N=T[M].match(/[-\d](.*[\d])?/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t++)C=parseFloat(N[t]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}if("v"==T[M].charAt(0)){N=T[M].match(/[-\d](.*[\d])?/)[0].split(/[\s,]/g);for(var t=0;t<N.length;t++)C+=parseFloat(N[t]),I.lineTo(R,C);"Z"==T[M].replace(/\s/g,"").substr(-1,1).toUpperCase()&&I.closePath()}}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
